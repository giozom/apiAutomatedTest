{
  "reportTitle": "apiAutomatedTest",
  "stats": {
    "suites": 1,
    "tests": 1,
    "passes": 1,
    "pending": 0,
    "failures": 0,
    "start": "2016-11-28T23:53:40.043Z",
    "end": "2016-11-28T23:53:40.139Z",
    "duration": 97,
    "testsRegistered": 6,
    "passPercent": 16.7,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 5,
    "hasSkipped": true,
    "passPercentClass": "danger",
    "pendingPercentClass": "danger"
  },
  "suites": {
    "title": "",
    "suites": [
      {
        "title": "200 DELETE /posts/101",
        "suites": [],
        "tests": [
          {
            "title": "should return a 200 code after deleting fake postId 100",
            "fullTitle": "200 DELETE /posts/101 should return a 200 code after deleting fake postId 100",
            "timedOut": false,
            "duration": 0,
            "pass": false,
            "fail": false,
            "pending": false,
            "code": "utils.httpDELETE(<span class=\"hljs-string\">'/posts/101'</span>, {})<br>   .send(<br>       {<br>           id: <span class=\"hljs-number\">101</span>,<br>           title: <span class=\"hljs-string\">'foo'</span>,<br>           body: <span class=\"hljs-string\">'bar'</span>,<br>           userId: <span class=\"hljs-number\">1</span><br>       }<br>   )<br>   .expect(<span class=\"hljs-string\">'content-type'</span>, <span class=\"hljs-string\">'application/json; charset=utf-8'</span>)<br>   .expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">res</span>) </span>{<br>       <span class=\"hljs-keyword\">const</span> response = res.body;<br>       <span class=\"hljs-built_in\">console</span>.log(response)<br>       <span class=\"hljs-keyword\">return</span> assert.deepEqual(response,<br>           {} <span class=\"hljs-comment\">//return empty response</span><br>       );<br>   })<br>    .expect(<span class=\"hljs-number\">200</span>);",
            "isRoot": false,
            "uuid": "3ddfdc40-2da0-4437-886e-aa019e951e9a",
            "parentUUID": "457fcc67-429e-4fb3-9d52-8264209f7292",
            "skipped": true
          }
        ],
        "pending": [],
        "root": false,
        "_timeout": 5000,
        "file": "/test/posts/DELETE/deletePOST_200.js",
        "uuid": "457fcc67-429e-4fb3-9d52-8264209f7292",
        "fullFile": "/Users/garsenius/github/apiAutomatedTest/test/posts/DELETE/deletePOST_200.js",
        "passes": [],
        "failures": [],
        "skipped": [
          {
            "title": "should return a 200 code after deleting fake postId 100",
            "fullTitle": "200 DELETE /posts/101 should return a 200 code after deleting fake postId 100",
            "timedOut": false,
            "duration": 0,
            "pass": false,
            "fail": false,
            "pending": false,
            "code": "utils.httpDELETE(<span class=\"hljs-string\">'/posts/101'</span>, {})<br>   .send(<br>       {<br>           id: <span class=\"hljs-number\">101</span>,<br>           title: <span class=\"hljs-string\">'foo'</span>,<br>           body: <span class=\"hljs-string\">'bar'</span>,<br>           userId: <span class=\"hljs-number\">1</span><br>       }<br>   )<br>   .expect(<span class=\"hljs-string\">'content-type'</span>, <span class=\"hljs-string\">'application/json; charset=utf-8'</span>)<br>   .expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">res</span>) </span>{<br>       <span class=\"hljs-keyword\">const</span> response = res.body;<br>       <span class=\"hljs-built_in\">console</span>.log(response)<br>       <span class=\"hljs-keyword\">return</span> assert.deepEqual(response,<br>           {} <span class=\"hljs-comment\">//return empty response</span><br>       );<br>   })<br>    .expect(<span class=\"hljs-number\">200</span>);",
            "isRoot": false,
            "uuid": "3ddfdc40-2da0-4437-886e-aa019e951e9a",
            "parentUUID": "457fcc67-429e-4fb3-9d52-8264209f7292",
            "skipped": true
          }
        ],
        "hasTests": true,
        "hasSuites": false,
        "totalTests": 1,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 1,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": true,
        "duration": 0
      },
      {
        "title": "200 GET /posts/1",
        "suites": [],
        "tests": [
          {
            "title": "should return a 200 OK status code for PostID 1",
            "fullTitle": "200 GET /posts/1 should return a 200 OK status code for PostID 1",
            "timedOut": false,
            "duration": 0,
            "pass": false,
            "fail": false,
            "pending": false,
            "code": "utils.httpGET(<span class=\"hljs-string\">'/posts/1'</span>, {})<br>    .set(<span class=\"hljs-string\">'content-type'</span>, <span class=\"hljs-string\">'application/json; charset=utf-8'</span>)<br>    .expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">res</span>) </span>{<br>        <span class=\"hljs-keyword\">const</span> response = res.body;<br>        <span class=\"hljs-built_in\">console</span>.log(response);<br>        <span class=\"hljs-keyword\">return</span> assert.deepEqual(response,<br>            {<br>                <span class=\"hljs-string\">\"id\"</span>: <span class=\"hljs-number\">1</span>,<br>                <span class=\"hljs-string\">\"title\"</span>: <span class=\"hljs-string\">\"foo\"</span>,<br>                <span class=\"hljs-string\">\"body\"</span>: <span class=\"hljs-string\">\"bar\"</span>,<br>                <span class=\"hljs-string\">\"userId\"</span>: <span class=\"hljs-number\">1</span><br>            })<br>    })<br>    .expect(<span class=\"hljs-number\">200</span>, done);",
            "isRoot": false,
            "uuid": "fd5248ee-8460-4214-8493-69304d535f55",
            "parentUUID": "ee649cec-305d-4840-8c88-94a0a1f24084",
            "skipped": true
          },
          {
            "title": "should return a 200 OK status code for PostID 1 using expect method",
            "fullTitle": "200 GET /posts/1 should return a 200 OK status code for PostID 1 using expect method",
            "timedOut": false,
            "duration": 0,
            "pass": false,
            "fail": false,
            "pending": false,
            "code": "utils.httpGET(<span class=\"hljs-string\">'/posts/1'</span>, {})<br>    .set(<span class=\"hljs-string\">'content-type'</span>, <span class=\"hljs-string\">'application/json; charset=utf-8'</span>)<br>    .expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">res</span>) </span>{<br>        <span class=\"hljs-keyword\">const</span> response = res.body;<br>        <span class=\"hljs-built_in\">console</span>.log(response);<br>        expect(response).to.have.property(<span class=\"hljs-string\">'id'</span>);<br>        expect(response).to.have.property(<span class=\"hljs-string\">'title'</span>);<br>        expect(response).to.have.property(<span class=\"hljs-string\">'body'</span>);<br>        expect(response).to.have.property(<span class=\"hljs-string\">'userId'</span>);<br>        expect(response.id).to.equal(<span class=\"hljs-number\">1</span>);<br>    })<br>    .expect(<span class=\"hljs-number\">200</span>, done);",
            "isRoot": false,
            "uuid": "f1ea0a0e-d99c-47c9-b69f-e8b12f1c00e5",
            "parentUUID": "ee649cec-305d-4840-8c88-94a0a1f24084",
            "skipped": true
          },
          {
            "title": "should return a 200 OK status code for PostID 1 using expect method",
            "fullTitle": "200 GET /posts/1 should return a 200 OK status code for PostID 1 using expect method",
            "timedOut": false,
            "duration": 0,
            "pass": false,
            "fail": false,
            "pending": false,
            "code": "utils.httpGET(<span class=\"hljs-string\">'/posts/'</span>, {})<br>    .set(<span class=\"hljs-string\">'content-type'</span>, <span class=\"hljs-string\">'application/json; charset=utf-8'</span>)<br>    .expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">res</span>) </span>{<br>        <span class=\"hljs-keyword\">const</span> response = res.body;<br>        <span class=\"hljs-built_in\">console</span>.log(response);<br>    })<br>    .expect(<span class=\"hljs-number\">200</span>, done);",
            "isRoot": false,
            "uuid": "8e6be71a-a07f-41e3-be26-5b64034a8473",
            "parentUUID": "ee649cec-305d-4840-8c88-94a0a1f24084",
            "skipped": true
          }
        ],
        "pending": [],
        "root": false,
        "_timeout": 5000,
        "file": "/test/posts/GET/getPOST_200.js",
        "uuid": "ee649cec-305d-4840-8c88-94a0a1f24084",
        "fullFile": "/Users/garsenius/github/apiAutomatedTest/test/posts/GET/getPOST_200.js",
        "passes": [],
        "failures": [],
        "skipped": [
          {
            "title": "should return a 200 OK status code for PostID 1",
            "fullTitle": "200 GET /posts/1 should return a 200 OK status code for PostID 1",
            "timedOut": false,
            "duration": 0,
            "pass": false,
            "fail": false,
            "pending": false,
            "code": "utils.httpGET(<span class=\"hljs-string\">'/posts/1'</span>, {})<br>    .set(<span class=\"hljs-string\">'content-type'</span>, <span class=\"hljs-string\">'application/json; charset=utf-8'</span>)<br>    .expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">res</span>) </span>{<br>        <span class=\"hljs-keyword\">const</span> response = res.body;<br>        <span class=\"hljs-built_in\">console</span>.log(response);<br>        <span class=\"hljs-keyword\">return</span> assert.deepEqual(response,<br>            {<br>                <span class=\"hljs-string\">\"id\"</span>: <span class=\"hljs-number\">1</span>,<br>                <span class=\"hljs-string\">\"title\"</span>: <span class=\"hljs-string\">\"foo\"</span>,<br>                <span class=\"hljs-string\">\"body\"</span>: <span class=\"hljs-string\">\"bar\"</span>,<br>                <span class=\"hljs-string\">\"userId\"</span>: <span class=\"hljs-number\">1</span><br>            })<br>    })<br>    .expect(<span class=\"hljs-number\">200</span>, done);",
            "isRoot": false,
            "uuid": "fd5248ee-8460-4214-8493-69304d535f55",
            "parentUUID": "ee649cec-305d-4840-8c88-94a0a1f24084",
            "skipped": true
          },
          {
            "title": "should return a 200 OK status code for PostID 1 using expect method",
            "fullTitle": "200 GET /posts/1 should return a 200 OK status code for PostID 1 using expect method",
            "timedOut": false,
            "duration": 0,
            "pass": false,
            "fail": false,
            "pending": false,
            "code": "utils.httpGET(<span class=\"hljs-string\">'/posts/1'</span>, {})<br>    .set(<span class=\"hljs-string\">'content-type'</span>, <span class=\"hljs-string\">'application/json; charset=utf-8'</span>)<br>    .expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">res</span>) </span>{<br>        <span class=\"hljs-keyword\">const</span> response = res.body;<br>        <span class=\"hljs-built_in\">console</span>.log(response);<br>        expect(response).to.have.property(<span class=\"hljs-string\">'id'</span>);<br>        expect(response).to.have.property(<span class=\"hljs-string\">'title'</span>);<br>        expect(response).to.have.property(<span class=\"hljs-string\">'body'</span>);<br>        expect(response).to.have.property(<span class=\"hljs-string\">'userId'</span>);<br>        expect(response.id).to.equal(<span class=\"hljs-number\">1</span>);<br>    })<br>    .expect(<span class=\"hljs-number\">200</span>, done);",
            "isRoot": false,
            "uuid": "f1ea0a0e-d99c-47c9-b69f-e8b12f1c00e5",
            "parentUUID": "ee649cec-305d-4840-8c88-94a0a1f24084",
            "skipped": true
          },
          {
            "title": "should return a 200 OK status code for PostID 1 using expect method",
            "fullTitle": "200 GET /posts/1 should return a 200 OK status code for PostID 1 using expect method",
            "timedOut": false,
            "duration": 0,
            "pass": false,
            "fail": false,
            "pending": false,
            "code": "utils.httpGET(<span class=\"hljs-string\">'/posts/'</span>, {})<br>    .set(<span class=\"hljs-string\">'content-type'</span>, <span class=\"hljs-string\">'application/json; charset=utf-8'</span>)<br>    .expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">res</span>) </span>{<br>        <span class=\"hljs-keyword\">const</span> response = res.body;<br>        <span class=\"hljs-built_in\">console</span>.log(response);<br>    })<br>    .expect(<span class=\"hljs-number\">200</span>, done);",
            "isRoot": false,
            "uuid": "8e6be71a-a07f-41e3-be26-5b64034a8473",
            "parentUUID": "ee649cec-305d-4840-8c88-94a0a1f24084",
            "skipped": true
          }
        ],
        "hasTests": true,
        "hasSuites": false,
        "totalTests": 3,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 3,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": true,
        "duration": 0
      },
      {
        "title": "201 POST /posts",
        "suites": [],
        "tests": [
          {
            "title": "should return a 201 code after posting",
            "fullTitle": "201 POST /posts should return a 201 code after posting",
            "timedOut": false,
            "duration": 0,
            "pass": false,
            "fail": false,
            "pending": false,
            "code": "utils.httpPOST(<span class=\"hljs-string\">'/posts'</span>, {})<br>    .send({title: <span class=\"hljs-string\">'foo'</span>, body: <span class=\"hljs-string\">'bar'</span>, userId: <span class=\"hljs-number\">1</span>})<br>    .expect(<span class=\"hljs-string\">'content-type'</span>, <span class=\"hljs-string\">'application/json; charset=utf-8'</span>)<br>    .expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">res</span>) </span>{<br>        <span class=\"hljs-keyword\">const</span> response = res.body;<br>        <span class=\"hljs-built_in\">console</span>.log(response);<br>        <span class=\"hljs-comment\">//expect(response.id).to.equal(105);</span><br>        expect(response.title).to.equal(<span class=\"hljs-string\">'foo'</span>);<br>        expect(response.body).to.equal(<span class=\"hljs-string\">'bar'</span>);<br>        expect(response.userId).to.equal(<span class=\"hljs-number\">1</span>);<br>    })<br>    .expect(<span class=\"hljs-number\">201</span>, done)",
            "isRoot": false,
            "uuid": "e6de905a-ebdf-4a6a-babb-2850e461fef0",
            "parentUUID": "004390f3-cb82-47c1-a372-bda51cba5c64",
            "skipped": true
          }
        ],
        "pending": [],
        "root": false,
        "_timeout": 5000,
        "file": "/test/posts/POST/postPOST_201.js",
        "uuid": "004390f3-cb82-47c1-a372-bda51cba5c64",
        "fullFile": "/Users/garsenius/github/apiAutomatedTest/test/posts/POST/postPOST_201.js",
        "passes": [],
        "failures": [],
        "skipped": [
          {
            "title": "should return a 201 code after posting",
            "fullTitle": "201 POST /posts should return a 201 code after posting",
            "timedOut": false,
            "duration": 0,
            "pass": false,
            "fail": false,
            "pending": false,
            "code": "utils.httpPOST(<span class=\"hljs-string\">'/posts'</span>, {})<br>    .send({title: <span class=\"hljs-string\">'foo'</span>, body: <span class=\"hljs-string\">'bar'</span>, userId: <span class=\"hljs-number\">1</span>})<br>    .expect(<span class=\"hljs-string\">'content-type'</span>, <span class=\"hljs-string\">'application/json; charset=utf-8'</span>)<br>    .expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">res</span>) </span>{<br>        <span class=\"hljs-keyword\">const</span> response = res.body;<br>        <span class=\"hljs-built_in\">console</span>.log(response);<br>        <span class=\"hljs-comment\">//expect(response.id).to.equal(105);</span><br>        expect(response.title).to.equal(<span class=\"hljs-string\">'foo'</span>);<br>        expect(response.body).to.equal(<span class=\"hljs-string\">'bar'</span>);<br>        expect(response.userId).to.equal(<span class=\"hljs-number\">1</span>);<br>    })<br>    .expect(<span class=\"hljs-number\">201</span>, done)",
            "isRoot": false,
            "uuid": "e6de905a-ebdf-4a6a-babb-2850e461fef0",
            "parentUUID": "004390f3-cb82-47c1-a372-bda51cba5c64",
            "skipped": true
          }
        ],
        "hasTests": true,
        "hasSuites": false,
        "totalTests": 1,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 1,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": true,
        "duration": 0
      },
      {
        "title": "200 PUT /posts/1",
        "suites": [],
        "tests": [
          {
            "title": "should return a 200 code after updating postId 1",
            "fullTitle": "200 PUT /posts/1 should return a 200 code after updating postId 1",
            "timedOut": false,
            "duration": 82,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "utils.httpPUT(<span class=\"hljs-string\">'/posts/1'</span>, {})<br>   .send({id: <span class=\"hljs-number\">1</span>, title: <span class=\"hljs-string\">'sodalicious juicy'</span>, body: <span class=\"hljs-string\">'candy crush'</span>, userId: <span class=\"hljs-number\">1</span>})<br>   .expect(<span class=\"hljs-string\">'content-type'</span>, <span class=\"hljs-string\">'application/json; charset=utf-8'</span>)<br>   .expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">res</span>) </span>{<br>       <span class=\"hljs-keyword\">const</span> response = res.body;<br>       <span class=\"hljs-built_in\">console</span>.log(response);<br>       <span class=\"hljs-keyword\">return</span> assert.deepEqual(response,<br>           {<br>               id: <span class=\"hljs-number\">1</span>,<br>               title: <span class=\"hljs-string\">'sodalicious juicy'</span>,<br>               body: <span class=\"hljs-string\">'candy crush'</span>,<br>               userId: <span class=\"hljs-number\">1</span><br>           }<br>       );<br>   })<br>    .expect(<span class=\"hljs-number\">200</span>, done);",
            "isRoot": false,
            "uuid": "d9a65906-a891-460d-b430-fd2f77c5afb9",
            "parentUUID": "7da414c1-dc7e-47fa-9a36-1bc84bdaddd6",
            "skipped": false
          }
        ],
        "pending": [],
        "root": false,
        "_timeout": 5000,
        "file": "/test/posts/PUT/200.js",
        "uuid": "7da414c1-dc7e-47fa-9a36-1bc84bdaddd6",
        "fullFile": "/Users/garsenius/github/apiAutomatedTest/test/posts/PUT/200.js",
        "passes": [
          {
            "title": "should return a 200 code after updating postId 1",
            "fullTitle": "200 PUT /posts/1 should return a 200 code after updating postId 1",
            "timedOut": false,
            "duration": 82,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "utils.httpPUT(<span class=\"hljs-string\">'/posts/1'</span>, {})<br>   .send({id: <span class=\"hljs-number\">1</span>, title: <span class=\"hljs-string\">'sodalicious juicy'</span>, body: <span class=\"hljs-string\">'candy crush'</span>, userId: <span class=\"hljs-number\">1</span>})<br>   .expect(<span class=\"hljs-string\">'content-type'</span>, <span class=\"hljs-string\">'application/json; charset=utf-8'</span>)<br>   .expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">res</span>) </span>{<br>       <span class=\"hljs-keyword\">const</span> response = res.body;<br>       <span class=\"hljs-built_in\">console</span>.log(response);<br>       <span class=\"hljs-keyword\">return</span> assert.deepEqual(response,<br>           {<br>               id: <span class=\"hljs-number\">1</span>,<br>               title: <span class=\"hljs-string\">'sodalicious juicy'</span>,<br>               body: <span class=\"hljs-string\">'candy crush'</span>,<br>               userId: <span class=\"hljs-number\">1</span><br>           }<br>       );<br>   })<br>    .expect(<span class=\"hljs-number\">200</span>, done);",
            "isRoot": false,
            "uuid": "d9a65906-a891-460d-b430-fd2f77c5afb9",
            "parentUUID": "7da414c1-dc7e-47fa-9a36-1bc84bdaddd6",
            "skipped": false
          }
        ],
        "failures": [],
        "skipped": [],
        "hasTests": true,
        "hasSuites": false,
        "totalTests": 1,
        "totalPasses": 1,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": true,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 82
      }
    ],
    "tests": [],
    "pending": [],
    "root": true,
    "_timeout": 5000,
    "uuid": "0e9b577c-f795-40a4-9012-4d4240b638fb",
    "fullFile": "",
    "file": "",
    "passes": [],
    "failures": [],
    "skipped": [],
    "hasTests": false,
    "hasSuites": true,
    "totalTests": 0,
    "totalPasses": 0,
    "totalFailures": 0,
    "totalPending": 0,
    "totalSkipped": 0,
    "hasPasses": false,
    "hasFailures": false,
    "hasPending": false,
    "hasSkipped": false,
    "duration": 0,
    "rootEmpty": true
  },
  "allTests": [
    {
      "title": "should return a 200 code after updating postId 1",
      "fullTitle": "200 PUT /posts/1 should return a 200 code after updating postId 1",
      "timedOut": false,
      "duration": 82,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "utils.httpPUT(<span class=\"hljs-string\">'/posts/1'</span>, {})<br>   .send({id: <span class=\"hljs-number\">1</span>, title: <span class=\"hljs-string\">'sodalicious juicy'</span>, body: <span class=\"hljs-string\">'candy crush'</span>, userId: <span class=\"hljs-number\">1</span>})<br>   .expect(<span class=\"hljs-string\">'content-type'</span>, <span class=\"hljs-string\">'application/json; charset=utf-8'</span>)<br>   .expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">res</span>) </span>{<br>       <span class=\"hljs-keyword\">const</span> response = res.body;<br>       <span class=\"hljs-built_in\">console</span>.log(response);<br>       <span class=\"hljs-keyword\">return</span> assert.deepEqual(response,<br>           {<br>               id: <span class=\"hljs-number\">1</span>,<br>               title: <span class=\"hljs-string\">'sodalicious juicy'</span>,<br>               body: <span class=\"hljs-string\">'candy crush'</span>,<br>               userId: <span class=\"hljs-number\">1</span><br>           }<br>       );<br>   })<br>    .expect(<span class=\"hljs-number\">200</span>, done);",
      "isRoot": false,
      "uuid": "092627b9-38d0-4aa4-85dd-35a24280a0c0",
      "parentUUID": "7da414c1-dc7e-47fa-9a36-1bc84bdaddd6",
      "skipped": false
    }
  ],
  "allPending": [],
  "allPasses": [
    {
      "title": "should return a 200 code after updating postId 1",
      "fullTitle": "200 PUT /posts/1 should return a 200 code after updating postId 1",
      "timedOut": false,
      "duration": 82,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "utils.httpPUT(<span class=\"hljs-string\">'/posts/1'</span>, {})<br>   .send({id: <span class=\"hljs-number\">1</span>, title: <span class=\"hljs-string\">'sodalicious juicy'</span>, body: <span class=\"hljs-string\">'candy crush'</span>, userId: <span class=\"hljs-number\">1</span>})<br>   .expect(<span class=\"hljs-string\">'content-type'</span>, <span class=\"hljs-string\">'application/json; charset=utf-8'</span>)<br>   .expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">res</span>) </span>{<br>       <span class=\"hljs-keyword\">const</span> response = res.body;<br>       <span class=\"hljs-built_in\">console</span>.log(response);<br>       <span class=\"hljs-keyword\">return</span> assert.deepEqual(response,<br>           {<br>               id: <span class=\"hljs-number\">1</span>,<br>               title: <span class=\"hljs-string\">'sodalicious juicy'</span>,<br>               body: <span class=\"hljs-string\">'candy crush'</span>,<br>               userId: <span class=\"hljs-number\">1</span><br>           }<br>       );<br>   })<br>    .expect(<span class=\"hljs-number\">200</span>, done);",
      "isRoot": false,
      "uuid": "11b24851-e108-4fec-8759-21041efa72b7",
      "parentUUID": "7da414c1-dc7e-47fa-9a36-1bc84bdaddd6",
      "skipped": false
    }
  ],
  "allFailures": [],
  "copyrightYear": 2016
}