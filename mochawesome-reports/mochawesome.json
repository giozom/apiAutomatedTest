{
  "reportTitle": "apiAutomatedTest",
  "stats": {
    "suites": 6,
    "tests": 13,
    "passes": 13,
    "pending": 0,
    "failures": 0,
    "start": "2016-11-29T04:31:52.643Z",
    "end": "2016-11-29T04:31:52.980Z",
    "duration": 337,
    "testsRegistered": 13,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false,
    "passPercentClass": "success",
    "pendingPercentClass": "danger"
  },
  "suites": {
    "title": "",
    "suites": [
      {
        "title": "@get",
        "suites": [],
        "tests": [
          {
            "title": "should return a 200 OK status code for Comment ID 1",
            "fullTitle": "@get should return a 200 OK status code for Comment ID 1",
            "timedOut": false,
            "duration": 45,
            "state": "passed",
            "speed": "medium",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "utils.httpGET(<span class=\"hljs-string\">'/comments/1'</span>, {})<br>    .set(<span class=\"hljs-string\">'content-type'</span>, <span class=\"hljs-string\">'application/json; charset=utf-8'</span>)<br>    .expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">res</span>) </span>{<br>        <span class=\"hljs-keyword\">const</span> response = res.body;<br>        <span class=\"hljs-built_in\">console</span>.log(response);<br>        <span class=\"hljs-keyword\">return</span> assert.deepEqual(response,<br>            {<br>                <span class=\"hljs-string\">\"postId\"</span>: <span class=\"hljs-number\">1</span>,<br>                <span class=\"hljs-string\">\"id\"</span>: <span class=\"hljs-number\">1</span>,<br>                <span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"id labore ex et quam laborum\"</span>,<br>                <span class=\"hljs-string\">\"email\"</span>: <span class=\"hljs-string\">\"Eliseo@gardner.biz\"</span>,<br>                <span class=\"hljs-string\">\"body\"</span>: <span class=\"hljs-string\">\"laudantium enim quasi est quidem magnam voluptate ipsam eos\\ntempora quo necessitatibus\\ndolor quam autem quasi\\nreiciendis et nam sapiente accusantium\"</span><br>            })<br>    })<br>    .expect(<span class=\"hljs-number\">200</span>, done);",
            "isRoot": false,
            "uuid": "bb644022-d485-4bfa-beb2-3901b0363bf9",
            "parentUUID": "410a47f7-97d5-4351-a801-6e89433c3e6d",
            "skipped": false
          },
          {
            "title": "should return a 200 OK status code for comment ID 1 using expect method",
            "fullTitle": "@get should return a 200 OK status code for comment ID 1 using expect method",
            "timedOut": false,
            "duration": 17,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "utils.httpGET(<span class=\"hljs-string\">'/comments/1'</span>, {})<br>    .set(<span class=\"hljs-string\">'content-type'</span>, <span class=\"hljs-string\">'application/json; charset=utf-8'</span>)<br>    .expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">res</span>) </span>{<br>        <span class=\"hljs-keyword\">const</span> response = res.body;<br>        <span class=\"hljs-built_in\">console</span>.log(response);<br>        expect(response).to.have.property(<span class=\"hljs-string\">'postId'</span>);<br>        expect(response).to.have.property(<span class=\"hljs-string\">'id'</span>);<br>        expect(response).to.have.property(<span class=\"hljs-string\">'name'</span>);<br>        expect(response).to.have.property(<span class=\"hljs-string\">'email'</span>);<br>        expect(response).to.have.property(<span class=\"hljs-string\">'body'</span>);<br>        expect(response.id).to.equal(<span class=\"hljs-number\">1</span>);<br>        expect(response.email).to.equal(<span class=\"hljs-string\">'Eliseo@gardner.biz'</span>);<br>        expect(response.name).to.equal(<span class=\"hljs-string\">'id labore ex et quam laborum'</span>);<br><br>    })<br>    .expect(<span class=\"hljs-number\">200</span>, done);",
            "isRoot": false,
            "uuid": "518ab62f-290e-4a20-b1c3-a7881ff279f2",
            "parentUUID": "410a47f7-97d5-4351-a801-6e89433c3e6d",
            "skipped": false
          },
          {
            "title": "should return a 200 OK status code for GET /comments using expect method",
            "fullTitle": "@get should return a 200 OK status code for GET /comments using expect method",
            "timedOut": false,
            "duration": 59,
            "state": "passed",
            "speed": "medium",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "utils.httpGET(<span class=\"hljs-string\">'/comments/'</span>, {})<br>    .set(<span class=\"hljs-string\">'content-type'</span>, <span class=\"hljs-string\">'application/json; charset=utf-8'</span>)<br>    .expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">res</span>) </span>{<br>        <span class=\"hljs-keyword\">const</span> response = res.body;<br>        <span class=\"hljs-built_in\">console</span>.log(response);<br>    })<br>    .expect(<span class=\"hljs-number\">200</span>, done);",
            "isRoot": false,
            "uuid": "c942cf80-59a5-4411-9778-849bf512e250",
            "parentUUID": "410a47f7-97d5-4351-a801-6e89433c3e6d",
            "skipped": false
          }
        ],
        "pending": [],
        "root": false,
        "_timeout": 3000,
        "file": "/test/comments/GET/getCOMMENT_200.js",
        "uuid": "410a47f7-97d5-4351-a801-6e89433c3e6d",
        "fullFile": "/Users/garsenius/github/apiAutomatedTest/test/comments/GET/getCOMMENT_200.js",
        "passes": [
          {
            "title": "should return a 200 OK status code for Comment ID 1",
            "fullTitle": "@get should return a 200 OK status code for Comment ID 1",
            "timedOut": false,
            "duration": 45,
            "state": "passed",
            "speed": "medium",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "utils.httpGET(<span class=\"hljs-string\">'/comments/1'</span>, {})<br>    .set(<span class=\"hljs-string\">'content-type'</span>, <span class=\"hljs-string\">'application/json; charset=utf-8'</span>)<br>    .expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">res</span>) </span>{<br>        <span class=\"hljs-keyword\">const</span> response = res.body;<br>        <span class=\"hljs-built_in\">console</span>.log(response);<br>        <span class=\"hljs-keyword\">return</span> assert.deepEqual(response,<br>            {<br>                <span class=\"hljs-string\">\"postId\"</span>: <span class=\"hljs-number\">1</span>,<br>                <span class=\"hljs-string\">\"id\"</span>: <span class=\"hljs-number\">1</span>,<br>                <span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"id labore ex et quam laborum\"</span>,<br>                <span class=\"hljs-string\">\"email\"</span>: <span class=\"hljs-string\">\"Eliseo@gardner.biz\"</span>,<br>                <span class=\"hljs-string\">\"body\"</span>: <span class=\"hljs-string\">\"laudantium enim quasi est quidem magnam voluptate ipsam eos\\ntempora quo necessitatibus\\ndolor quam autem quasi\\nreiciendis et nam sapiente accusantium\"</span><br>            })<br>    })<br>    .expect(<span class=\"hljs-number\">200</span>, done);",
            "isRoot": false,
            "uuid": "bb644022-d485-4bfa-beb2-3901b0363bf9",
            "parentUUID": "410a47f7-97d5-4351-a801-6e89433c3e6d",
            "skipped": false
          },
          {
            "title": "should return a 200 OK status code for comment ID 1 using expect method",
            "fullTitle": "@get should return a 200 OK status code for comment ID 1 using expect method",
            "timedOut": false,
            "duration": 17,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "utils.httpGET(<span class=\"hljs-string\">'/comments/1'</span>, {})<br>    .set(<span class=\"hljs-string\">'content-type'</span>, <span class=\"hljs-string\">'application/json; charset=utf-8'</span>)<br>    .expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">res</span>) </span>{<br>        <span class=\"hljs-keyword\">const</span> response = res.body;<br>        <span class=\"hljs-built_in\">console</span>.log(response);<br>        expect(response).to.have.property(<span class=\"hljs-string\">'postId'</span>);<br>        expect(response).to.have.property(<span class=\"hljs-string\">'id'</span>);<br>        expect(response).to.have.property(<span class=\"hljs-string\">'name'</span>);<br>        expect(response).to.have.property(<span class=\"hljs-string\">'email'</span>);<br>        expect(response).to.have.property(<span class=\"hljs-string\">'body'</span>);<br>        expect(response.id).to.equal(<span class=\"hljs-number\">1</span>);<br>        expect(response.email).to.equal(<span class=\"hljs-string\">'Eliseo@gardner.biz'</span>);<br>        expect(response.name).to.equal(<span class=\"hljs-string\">'id labore ex et quam laborum'</span>);<br><br>    })<br>    .expect(<span class=\"hljs-number\">200</span>, done);",
            "isRoot": false,
            "uuid": "518ab62f-290e-4a20-b1c3-a7881ff279f2",
            "parentUUID": "410a47f7-97d5-4351-a801-6e89433c3e6d",
            "skipped": false
          },
          {
            "title": "should return a 200 OK status code for GET /comments using expect method",
            "fullTitle": "@get should return a 200 OK status code for GET /comments using expect method",
            "timedOut": false,
            "duration": 59,
            "state": "passed",
            "speed": "medium",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "utils.httpGET(<span class=\"hljs-string\">'/comments/'</span>, {})<br>    .set(<span class=\"hljs-string\">'content-type'</span>, <span class=\"hljs-string\">'application/json; charset=utf-8'</span>)<br>    .expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">res</span>) </span>{<br>        <span class=\"hljs-keyword\">const</span> response = res.body;<br>        <span class=\"hljs-built_in\">console</span>.log(response);<br>    })<br>    .expect(<span class=\"hljs-number\">200</span>, done);",
            "isRoot": false,
            "uuid": "c942cf80-59a5-4411-9778-849bf512e250",
            "parentUUID": "410a47f7-97d5-4351-a801-6e89433c3e6d",
            "skipped": false
          }
        ],
        "failures": [],
        "skipped": [],
        "hasTests": true,
        "hasSuites": false,
        "totalTests": 3,
        "totalPasses": 3,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": true,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 121
      },
      {
        "title": "@delete",
        "suites": [],
        "tests": [
          {
            "title": "should return a 200 code after deleting fake postId 100",
            "fullTitle": "@delete should return a 200 code after deleting fake postId 100",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "utils.httpDELETE(<span class=\"hljs-string\">'/posts/101'</span>, {})<br>   .send(<br>       {<br>           id: <span class=\"hljs-number\">101</span>,<br>           title: <span class=\"hljs-string\">'foo'</span>,<br>           body: <span class=\"hljs-string\">'bar'</span>,<br>           userId: <span class=\"hljs-number\">1</span><br>       }<br>   )<br>   .expect(<span class=\"hljs-string\">'content-type'</span>, <span class=\"hljs-string\">'application/json; charset=utf-8'</span>)<br>   .expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">res</span>) </span>{<br>       <span class=\"hljs-keyword\">const</span> response = res.body;<br>       <span class=\"hljs-built_in\">console</span>.log(response)<br>       <span class=\"hljs-keyword\">return</span> assert.deepEqual(response,<br>           {} <span class=\"hljs-comment\">//return empty response</span><br>       );<br>   })<br>    .expect(<span class=\"hljs-number\">200</span>);",
            "isRoot": false,
            "uuid": "d4696765-5c7d-4f24-9785-91312c2ec853",
            "parentUUID": "433b2981-bf0c-4e31-8cab-1aa4c8f0a818",
            "skipped": false
          }
        ],
        "pending": [],
        "root": false,
        "_timeout": 3000,
        "file": "/test/posts/DELETE/deletePOST_200.js",
        "uuid": "433b2981-bf0c-4e31-8cab-1aa4c8f0a818",
        "fullFile": "/Users/garsenius/github/apiAutomatedTest/test/posts/DELETE/deletePOST_200.js",
        "passes": [
          {
            "title": "should return a 200 code after deleting fake postId 100",
            "fullTitle": "@delete should return a 200 code after deleting fake postId 100",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "utils.httpDELETE(<span class=\"hljs-string\">'/posts/101'</span>, {})<br>   .send(<br>       {<br>           id: <span class=\"hljs-number\">101</span>,<br>           title: <span class=\"hljs-string\">'foo'</span>,<br>           body: <span class=\"hljs-string\">'bar'</span>,<br>           userId: <span class=\"hljs-number\">1</span><br>       }<br>   )<br>   .expect(<span class=\"hljs-string\">'content-type'</span>, <span class=\"hljs-string\">'application/json; charset=utf-8'</span>)<br>   .expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">res</span>) </span>{<br>       <span class=\"hljs-keyword\">const</span> response = res.body;<br>       <span class=\"hljs-built_in\">console</span>.log(response)<br>       <span class=\"hljs-keyword\">return</span> assert.deepEqual(response,<br>           {} <span class=\"hljs-comment\">//return empty response</span><br>       );<br>   })<br>    .expect(<span class=\"hljs-number\">200</span>);",
            "isRoot": false,
            "uuid": "d4696765-5c7d-4f24-9785-91312c2ec853",
            "parentUUID": "433b2981-bf0c-4e31-8cab-1aa4c8f0a818",
            "skipped": false
          }
        ],
        "failures": [],
        "skipped": [],
        "hasTests": true,
        "hasSuites": false,
        "totalTests": 1,
        "totalPasses": 1,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": true,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 1
      },
      {
        "title": "@get",
        "suites": [],
        "tests": [
          {
            "title": "should return a 200 OK status code for PostID 1",
            "fullTitle": "@get should return a 200 OK status code for PostID 1",
            "timedOut": false,
            "duration": 10,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "utils.httpGET(<span class=\"hljs-string\">'/posts/1'</span>, {})<br>    .set(<span class=\"hljs-string\">'content-type'</span>, <span class=\"hljs-string\">'application/json; charset=utf-8'</span>)<br>    .expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">res</span>) </span>{<br>        <span class=\"hljs-keyword\">const</span> response = res.body;<br>        <span class=\"hljs-built_in\">console</span>.log(response);<br>        <span class=\"hljs-keyword\">return</span> assert.deepEqual(response,<br>            {<br>                <span class=\"hljs-string\">\"id\"</span>: <span class=\"hljs-string\">\"1\"</span>,<br>                <span class=\"hljs-string\">\"title\"</span>: <span class=\"hljs-string\">\"foo\"</span>,<br>                <span class=\"hljs-string\">\"body\"</span>: <span class=\"hljs-string\">\"bar\"</span>,<br>                <span class=\"hljs-string\">\"userId\"</span>: <span class=\"hljs-number\">1</span><br>            })<br>    })<br>    .expect(<span class=\"hljs-number\">200</span>, done);",
            "isRoot": false,
            "uuid": "d8dd3ddf-cf06-4fdc-be3f-e05c8d3eab8f",
            "parentUUID": "98c12021-8687-4aab-9d68-2648c621e815",
            "skipped": false
          },
          {
            "title": "should return a 200 OK status code for PostID 1 using expect method",
            "fullTitle": "@get should return a 200 OK status code for PostID 1 using expect method",
            "timedOut": false,
            "duration": 10,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "utils.httpGET(<span class=\"hljs-string\">'/posts/1'</span>, {})<br>    .set(<span class=\"hljs-string\">'content-type'</span>, <span class=\"hljs-string\">'application/json; charset=utf-8'</span>)<br>    .expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">res</span>) </span>{<br>        <span class=\"hljs-keyword\">const</span> response = res.body;<br>        <span class=\"hljs-built_in\">console</span>.log(response);<br>        expect(response).to.have.property(<span class=\"hljs-string\">'id'</span>);<br>        expect(response).to.have.property(<span class=\"hljs-string\">'title'</span>);<br>        expect(response).to.have.property(<span class=\"hljs-string\">'body'</span>);<br>        expect(response).to.have.property(<span class=\"hljs-string\">'userId'</span>);<br>        expect(response.id).to.equal(<span class=\"hljs-string\">'1'</span>);<br>    })<br>    .expect(<span class=\"hljs-number\">200</span>, done);",
            "isRoot": false,
            "uuid": "5e949713-0bc6-4718-9a75-1ede6cabd850",
            "parentUUID": "98c12021-8687-4aab-9d68-2648c621e815",
            "skipped": false
          },
          {
            "title": "should return a 200 OK status code for PostID 1 using expect method",
            "fullTitle": "@get should return a 200 OK status code for PostID 1 using expect method",
            "timedOut": false,
            "duration": 23,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "utils.httpGET(<span class=\"hljs-string\">'/posts/'</span>, {})<br>    .set(<span class=\"hljs-string\">'content-type'</span>, <span class=\"hljs-string\">'application/json; charset=utf-8'</span>)<br>    .expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">res</span>) </span>{<br>        <span class=\"hljs-keyword\">const</span> response = res.body;<br>        <span class=\"hljs-built_in\">console</span>.log(response);<br>    })<br>    .expect(<span class=\"hljs-number\">200</span>, done);",
            "isRoot": false,
            "uuid": "ec73f24e-f8d4-4ec9-94c8-52c22c5530d3",
            "parentUUID": "98c12021-8687-4aab-9d68-2648c621e815",
            "skipped": false
          }
        ],
        "pending": [],
        "root": false,
        "_timeout": 3000,
        "file": "/test/posts/GET/getPOST_200.js",
        "uuid": "98c12021-8687-4aab-9d68-2648c621e815",
        "fullFile": "/Users/garsenius/github/apiAutomatedTest/test/posts/GET/getPOST_200.js",
        "passes": [
          {
            "title": "should return a 200 OK status code for PostID 1",
            "fullTitle": "@get should return a 200 OK status code for PostID 1",
            "timedOut": false,
            "duration": 10,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "utils.httpGET(<span class=\"hljs-string\">'/posts/1'</span>, {})<br>    .set(<span class=\"hljs-string\">'content-type'</span>, <span class=\"hljs-string\">'application/json; charset=utf-8'</span>)<br>    .expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">res</span>) </span>{<br>        <span class=\"hljs-keyword\">const</span> response = res.body;<br>        <span class=\"hljs-built_in\">console</span>.log(response);<br>        <span class=\"hljs-keyword\">return</span> assert.deepEqual(response,<br>            {<br>                <span class=\"hljs-string\">\"id\"</span>: <span class=\"hljs-string\">\"1\"</span>,<br>                <span class=\"hljs-string\">\"title\"</span>: <span class=\"hljs-string\">\"foo\"</span>,<br>                <span class=\"hljs-string\">\"body\"</span>: <span class=\"hljs-string\">\"bar\"</span>,<br>                <span class=\"hljs-string\">\"userId\"</span>: <span class=\"hljs-number\">1</span><br>            })<br>    })<br>    .expect(<span class=\"hljs-number\">200</span>, done);",
            "isRoot": false,
            "uuid": "d8dd3ddf-cf06-4fdc-be3f-e05c8d3eab8f",
            "parentUUID": "98c12021-8687-4aab-9d68-2648c621e815",
            "skipped": false
          },
          {
            "title": "should return a 200 OK status code for PostID 1 using expect method",
            "fullTitle": "@get should return a 200 OK status code for PostID 1 using expect method",
            "timedOut": false,
            "duration": 10,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "utils.httpGET(<span class=\"hljs-string\">'/posts/1'</span>, {})<br>    .set(<span class=\"hljs-string\">'content-type'</span>, <span class=\"hljs-string\">'application/json; charset=utf-8'</span>)<br>    .expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">res</span>) </span>{<br>        <span class=\"hljs-keyword\">const</span> response = res.body;<br>        <span class=\"hljs-built_in\">console</span>.log(response);<br>        expect(response).to.have.property(<span class=\"hljs-string\">'id'</span>);<br>        expect(response).to.have.property(<span class=\"hljs-string\">'title'</span>);<br>        expect(response).to.have.property(<span class=\"hljs-string\">'body'</span>);<br>        expect(response).to.have.property(<span class=\"hljs-string\">'userId'</span>);<br>        expect(response.id).to.equal(<span class=\"hljs-string\">'1'</span>);<br>    })<br>    .expect(<span class=\"hljs-number\">200</span>, done);",
            "isRoot": false,
            "uuid": "5e949713-0bc6-4718-9a75-1ede6cabd850",
            "parentUUID": "98c12021-8687-4aab-9d68-2648c621e815",
            "skipped": false
          },
          {
            "title": "should return a 200 OK status code for PostID 1 using expect method",
            "fullTitle": "@get should return a 200 OK status code for PostID 1 using expect method",
            "timedOut": false,
            "duration": 23,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "utils.httpGET(<span class=\"hljs-string\">'/posts/'</span>, {})<br>    .set(<span class=\"hljs-string\">'content-type'</span>, <span class=\"hljs-string\">'application/json; charset=utf-8'</span>)<br>    .expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">res</span>) </span>{<br>        <span class=\"hljs-keyword\">const</span> response = res.body;<br>        <span class=\"hljs-built_in\">console</span>.log(response);<br>    })<br>    .expect(<span class=\"hljs-number\">200</span>, done);",
            "isRoot": false,
            "uuid": "ec73f24e-f8d4-4ec9-94c8-52c22c5530d3",
            "parentUUID": "98c12021-8687-4aab-9d68-2648c621e815",
            "skipped": false
          }
        ],
        "failures": [],
        "skipped": [],
        "hasTests": true,
        "hasSuites": false,
        "totalTests": 3,
        "totalPasses": 3,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": true,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 43
      },
      {
        "title": "@post",
        "suites": [],
        "tests": [
          {
            "title": "should return a 201 code after posting",
            "fullTitle": "@post should return a 201 code after posting",
            "timedOut": false,
            "duration": 99,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "utils.httpPOST(<span class=\"hljs-string\">'/posts'</span>, {})<br>    .send({title: <span class=\"hljs-string\">'foo'</span>, body: <span class=\"hljs-string\">'bar'</span>, userId: <span class=\"hljs-number\">1</span>})<br>    .expect(<span class=\"hljs-string\">'content-type'</span>, <span class=\"hljs-string\">'application/json; charset=utf-8'</span>)<br>    .expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">res</span>) </span>{<br>        <span class=\"hljs-keyword\">const</span> response = res.body;<br>        <span class=\"hljs-built_in\">console</span>.log(response);<br>        <span class=\"hljs-comment\">//expect(response.id).to.equal(105);</span><br>        expect(response.title).to.equal(<span class=\"hljs-string\">'foo'</span>);<br>        expect(response.body).to.equal(<span class=\"hljs-string\">'bar'</span>);<br>        expect(response.userId).to.equal(<span class=\"hljs-number\">1</span>);<br>    })<br>    .expect(<span class=\"hljs-number\">201</span>, done)",
            "isRoot": false,
            "uuid": "6ce404b1-6cf6-4215-a746-86f2491fd0ad",
            "parentUUID": "6f24f961-a743-40f7-af5c-7bbd920ed508",
            "skipped": false
          }
        ],
        "pending": [],
        "root": false,
        "_timeout": 3000,
        "file": "/test/posts/POST/postPOST_201.js",
        "uuid": "6f24f961-a743-40f7-af5c-7bbd920ed508",
        "fullFile": "/Users/garsenius/github/apiAutomatedTest/test/posts/POST/postPOST_201.js",
        "passes": [
          {
            "title": "should return a 201 code after posting",
            "fullTitle": "@post should return a 201 code after posting",
            "timedOut": false,
            "duration": 99,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "utils.httpPOST(<span class=\"hljs-string\">'/posts'</span>, {})<br>    .send({title: <span class=\"hljs-string\">'foo'</span>, body: <span class=\"hljs-string\">'bar'</span>, userId: <span class=\"hljs-number\">1</span>})<br>    .expect(<span class=\"hljs-string\">'content-type'</span>, <span class=\"hljs-string\">'application/json; charset=utf-8'</span>)<br>    .expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">res</span>) </span>{<br>        <span class=\"hljs-keyword\">const</span> response = res.body;<br>        <span class=\"hljs-built_in\">console</span>.log(response);<br>        <span class=\"hljs-comment\">//expect(response.id).to.equal(105);</span><br>        expect(response.title).to.equal(<span class=\"hljs-string\">'foo'</span>);<br>        expect(response.body).to.equal(<span class=\"hljs-string\">'bar'</span>);<br>        expect(response.userId).to.equal(<span class=\"hljs-number\">1</span>);<br>    })<br>    .expect(<span class=\"hljs-number\">201</span>, done)",
            "isRoot": false,
            "uuid": "6ce404b1-6cf6-4215-a746-86f2491fd0ad",
            "parentUUID": "6f24f961-a743-40f7-af5c-7bbd920ed508",
            "skipped": false
          }
        ],
        "failures": [],
        "skipped": [],
        "hasTests": true,
        "hasSuites": false,
        "totalTests": 1,
        "totalPasses": 1,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": true,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 99
      },
      {
        "title": "@put",
        "suites": [],
        "tests": [
          {
            "title": "should return a 200 code after updating postId 1",
            "fullTitle": "@put should return a 200 code after updating postId 1",
            "timedOut": false,
            "duration": 19,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "utils.httpPUT(<span class=\"hljs-string\">'/posts/20'</span>, {})<br>    .send(<br>        {<br>            id: <span class=\"hljs-number\">20</span>,<br>            title: <span class=\"hljs-string\">'candy crush'</span>,<br>            body: <span class=\"hljs-string\">'sodalicious juicy'</span>,<br>            userId: <span class=\"hljs-number\">1</span><br>        }<br>    )<br>    .expect(<span class=\"hljs-string\">'content-type'</span>, <span class=\"hljs-string\">'application/json; charset=utf-8'</span>)<br>    .expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">res</span>) </span>{<br>        <span class=\"hljs-keyword\">const</span> response = res.body;<br>        <span class=\"hljs-built_in\">console</span>.log(response);<br>        expect(response.id).to.equal(<span class=\"hljs-string\">'20'</span>);<br>        expect(response.title).to.equal(<span class=\"hljs-string\">'candy crush'</span>);<br>        expect(response.body).to.equal(<span class=\"hljs-string\">'sodalicious juicy'</span>);<br>        expect(response.userId).to.equal(<span class=\"hljs-number\">1</span>);<br>    })<br>    .expect(<span class=\"hljs-number\">200</span>, done);",
            "isRoot": false,
            "uuid": "50671030-fb1f-45ac-8665-5ab220a6919d",
            "parentUUID": "402f842a-3b64-415f-af5a-1a6d1c28fa65",
            "skipped": false
          },
          {
            "title": "should return a 200 code after updating postId 1",
            "fullTitle": "@put should return a 200 code after updating postId 1",
            "timedOut": false,
            "duration": 13,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "utils.httpPUT(<span class=\"hljs-string\">'/posts/1'</span>, {})<br>    .send(<br>        {<br>            id: <span class=\"hljs-number\">1</span>,<br>            title: <span class=\"hljs-string\">'foo'</span>,<br>            body: <span class=\"hljs-string\">'bar'</span>,<br>            userId: <span class=\"hljs-number\">1</span><br>        }<br>    )<br>    .expect(<span class=\"hljs-string\">'content-type'</span>, <span class=\"hljs-string\">'application/json; charset=utf-8'</span>)<br>    .expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">res</span>) </span>{<br>        <span class=\"hljs-keyword\">const</span> response = res.body;<br>        <span class=\"hljs-built_in\">console</span>.log(response);<br>        expect(response.id).to.equal(<span class=\"hljs-string\">'1'</span>);<br>        expect(response.title).to.equal(<span class=\"hljs-string\">'foo'</span>);<br>        expect(response.body).to.equal(<span class=\"hljs-string\">'bar'</span>);<br>        expect(response.userId).to.equal(<span class=\"hljs-number\">1</span>);<br>    })<br>    .expect(<span class=\"hljs-number\">200</span>, done);",
            "isRoot": false,
            "uuid": "b6f6d7b1-4caa-4b5d-98cb-9a01df4d9508",
            "parentUUID": "402f842a-3b64-415f-af5a-1a6d1c28fa65",
            "skipped": false
          }
        ],
        "pending": [],
        "root": false,
        "_timeout": 3000,
        "file": "/test/posts/PUT/updatePOST_200.js",
        "uuid": "402f842a-3b64-415f-af5a-1a6d1c28fa65",
        "fullFile": "/Users/garsenius/github/apiAutomatedTest/test/posts/PUT/updatePOST_200.js",
        "passes": [
          {
            "title": "should return a 200 code after updating postId 1",
            "fullTitle": "@put should return a 200 code after updating postId 1",
            "timedOut": false,
            "duration": 19,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "utils.httpPUT(<span class=\"hljs-string\">'/posts/20'</span>, {})<br>    .send(<br>        {<br>            id: <span class=\"hljs-number\">20</span>,<br>            title: <span class=\"hljs-string\">'candy crush'</span>,<br>            body: <span class=\"hljs-string\">'sodalicious juicy'</span>,<br>            userId: <span class=\"hljs-number\">1</span><br>        }<br>    )<br>    .expect(<span class=\"hljs-string\">'content-type'</span>, <span class=\"hljs-string\">'application/json; charset=utf-8'</span>)<br>    .expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">res</span>) </span>{<br>        <span class=\"hljs-keyword\">const</span> response = res.body;<br>        <span class=\"hljs-built_in\">console</span>.log(response);<br>        expect(response.id).to.equal(<span class=\"hljs-string\">'20'</span>);<br>        expect(response.title).to.equal(<span class=\"hljs-string\">'candy crush'</span>);<br>        expect(response.body).to.equal(<span class=\"hljs-string\">'sodalicious juicy'</span>);<br>        expect(response.userId).to.equal(<span class=\"hljs-number\">1</span>);<br>    })<br>    .expect(<span class=\"hljs-number\">200</span>, done);",
            "isRoot": false,
            "uuid": "50671030-fb1f-45ac-8665-5ab220a6919d",
            "parentUUID": "402f842a-3b64-415f-af5a-1a6d1c28fa65",
            "skipped": false
          },
          {
            "title": "should return a 200 code after updating postId 1",
            "fullTitle": "@put should return a 200 code after updating postId 1",
            "timedOut": false,
            "duration": 13,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "utils.httpPUT(<span class=\"hljs-string\">'/posts/1'</span>, {})<br>    .send(<br>        {<br>            id: <span class=\"hljs-number\">1</span>,<br>            title: <span class=\"hljs-string\">'foo'</span>,<br>            body: <span class=\"hljs-string\">'bar'</span>,<br>            userId: <span class=\"hljs-number\">1</span><br>        }<br>    )<br>    .expect(<span class=\"hljs-string\">'content-type'</span>, <span class=\"hljs-string\">'application/json; charset=utf-8'</span>)<br>    .expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">res</span>) </span>{<br>        <span class=\"hljs-keyword\">const</span> response = res.body;<br>        <span class=\"hljs-built_in\">console</span>.log(response);<br>        expect(response.id).to.equal(<span class=\"hljs-string\">'1'</span>);<br>        expect(response.title).to.equal(<span class=\"hljs-string\">'foo'</span>);<br>        expect(response.body).to.equal(<span class=\"hljs-string\">'bar'</span>);<br>        expect(response.userId).to.equal(<span class=\"hljs-number\">1</span>);<br>    })<br>    .expect(<span class=\"hljs-number\">200</span>, done);",
            "isRoot": false,
            "uuid": "b6f6d7b1-4caa-4b5d-98cb-9a01df4d9508",
            "parentUUID": "402f842a-3b64-415f-af5a-1a6d1c28fa65",
            "skipped": false
          }
        ],
        "failures": [],
        "skipped": [],
        "hasTests": true,
        "hasSuites": false,
        "totalTests": 2,
        "totalPasses": 2,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": true,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 32
      },
      {
        "title": "@get",
        "suites": [],
        "tests": [
          {
            "title": "should return a 200 OK status code for PostID 1",
            "fullTitle": "@get should return a 200 OK status code for PostID 1",
            "timedOut": false,
            "duration": 9,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "utils.httpGET(<span class=\"hljs-string\">'/users/1'</span>, {})<br>    .set(<span class=\"hljs-string\">'content-type'</span>, <span class=\"hljs-string\">'application/json; charset=utf-8'</span>)<br>    .expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">res</span>) </span>{<br>        <span class=\"hljs-keyword\">const</span> response = res.body;<br>        <span class=\"hljs-built_in\">console</span>.log(response);<br>        <span class=\"hljs-keyword\">return</span> assert.deepEqual(response,<br>            {<br>                <span class=\"hljs-string\">\"id\"</span>: <span class=\"hljs-number\">1</span>,<br>                <span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"Leanne Graham\"</span>,<br>                <span class=\"hljs-string\">\"username\"</span>: <span class=\"hljs-string\">\"Bret\"</span>,<br>                <span class=\"hljs-string\">\"email\"</span>: <span class=\"hljs-string\">\"Sincere@april.biz\"</span>,<br>                <span class=\"hljs-string\">\"address\"</span>: {<br>                    <span class=\"hljs-string\">\"street\"</span>: <span class=\"hljs-string\">\"Kulas Light\"</span>,<br>                    <span class=\"hljs-string\">\"suite\"</span>: <span class=\"hljs-string\">\"Apt. 556\"</span>,<br>                    <span class=\"hljs-string\">\"city\"</span>: <span class=\"hljs-string\">\"Gwenborough\"</span>,<br>                    <span class=\"hljs-string\">\"zipcode\"</span>: <span class=\"hljs-string\">\"92998-3874\"</span>,<br>                    <span class=\"hljs-string\">\"geo\"</span>: {<br>                        <span class=\"hljs-string\">\"lat\"</span>: <span class=\"hljs-string\">\"-37.3159\"</span>,<br>                        <span class=\"hljs-string\">\"lng\"</span>: <span class=\"hljs-string\">\"81.1496\"</span><br>                    }<br>                },<br>                <span class=\"hljs-string\">\"phone\"</span>: <span class=\"hljs-string\">\"1-770-736-8031 x56442\"</span>,<br>                <span class=\"hljs-string\">\"website\"</span>: <span class=\"hljs-string\">\"hildegard.org\"</span>,<br>                <span class=\"hljs-string\">\"company\"</span>: {<br>                    <span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"Romaguera-Crona\"</span>,<br>                    <span class=\"hljs-string\">\"catchPhrase\"</span>: <span class=\"hljs-string\">\"Multi-layered client-server neural-net\"</span>,<br>                    <span class=\"hljs-string\">\"bs\"</span>: <span class=\"hljs-string\">\"harness real-time e-markets\"</span><br>                }<br>            })<br>    })<br>    .expect(<span class=\"hljs-number\">200</span>, done);",
            "isRoot": false,
            "uuid": "9fa1dd66-9d3b-4b7f-bd8b-477f99d9f0d4",
            "parentUUID": "eff3be09-1a0c-45e9-ae06-a0650eacb1cf",
            "skipped": false
          },
          {
            "title": "should return a 200 OK status code for userId 1 using expect method",
            "fullTitle": "@get should return a 200 OK status code for userId 1 using expect method",
            "timedOut": false,
            "duration": 8,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "utils.httpGET(<span class=\"hljs-string\">'/users/1'</span>, {})<br>    .set(<span class=\"hljs-string\">'content-type'</span>, <span class=\"hljs-string\">'application/json; charset=utf-8'</span>)<br>    .expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">res</span>) </span>{<br>        <span class=\"hljs-keyword\">const</span> response = res.body;<br>        <span class=\"hljs-built_in\">console</span>.log(response);<br>        expect(response).to.have.property(<span class=\"hljs-string\">'id'</span>);<br>        expect(response).to.have.property(<span class=\"hljs-string\">'name'</span>);<br>        expect(response).to.have.property(<span class=\"hljs-string\">'username'</span>);<br>        expect(response).to.have.property(<span class=\"hljs-string\">'email'</span>);<br>        expect(response.id).to.equal(<span class=\"hljs-number\">1</span>);<br>        expect(response.email).to.equal(<span class=\"hljs-string\">'Sincere@april.biz'</span>);<br>        expect(response.address.city).to.equal(<span class=\"hljs-string\">'Gwenborough'</span>);<br><br>    })<br>    .expect(<span class=\"hljs-number\">200</span>, done);",
            "isRoot": false,
            "uuid": "447f4aa6-efa0-46b8-924c-cfd291eb6aa8",
            "parentUUID": "eff3be09-1a0c-45e9-ae06-a0650eacb1cf",
            "skipped": false
          },
          {
            "title": "should return a 200 OK status code for GET /users using expect method",
            "fullTitle": "@get should return a 200 OK status code for GET /users using expect method",
            "timedOut": false,
            "duration": 13,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "utils.httpGET(<span class=\"hljs-string\">'/users/'</span>, {})<br>    .set(<span class=\"hljs-string\">'content-type'</span>, <span class=\"hljs-string\">'application/json; charset=utf-8'</span>)<br>    .expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">res</span>) </span>{<br>        <span class=\"hljs-keyword\">const</span> response = res.body;<br>        <span class=\"hljs-built_in\">console</span>.log(response);<br>    })<br>    .expect(<span class=\"hljs-number\">200</span>, done);",
            "isRoot": false,
            "uuid": "2cb9aa93-7adc-4687-843d-bf8f47838671",
            "parentUUID": "eff3be09-1a0c-45e9-ae06-a0650eacb1cf",
            "skipped": false
          }
        ],
        "pending": [],
        "root": false,
        "_timeout": 3000,
        "file": "/test/users/GET/getUSER_200.js",
        "uuid": "eff3be09-1a0c-45e9-ae06-a0650eacb1cf",
        "fullFile": "/Users/garsenius/github/apiAutomatedTest/test/users/GET/getUSER_200.js",
        "passes": [
          {
            "title": "should return a 200 OK status code for PostID 1",
            "fullTitle": "@get should return a 200 OK status code for PostID 1",
            "timedOut": false,
            "duration": 9,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "utils.httpGET(<span class=\"hljs-string\">'/users/1'</span>, {})<br>    .set(<span class=\"hljs-string\">'content-type'</span>, <span class=\"hljs-string\">'application/json; charset=utf-8'</span>)<br>    .expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">res</span>) </span>{<br>        <span class=\"hljs-keyword\">const</span> response = res.body;<br>        <span class=\"hljs-built_in\">console</span>.log(response);<br>        <span class=\"hljs-keyword\">return</span> assert.deepEqual(response,<br>            {<br>                <span class=\"hljs-string\">\"id\"</span>: <span class=\"hljs-number\">1</span>,<br>                <span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"Leanne Graham\"</span>,<br>                <span class=\"hljs-string\">\"username\"</span>: <span class=\"hljs-string\">\"Bret\"</span>,<br>                <span class=\"hljs-string\">\"email\"</span>: <span class=\"hljs-string\">\"Sincere@april.biz\"</span>,<br>                <span class=\"hljs-string\">\"address\"</span>: {<br>                    <span class=\"hljs-string\">\"street\"</span>: <span class=\"hljs-string\">\"Kulas Light\"</span>,<br>                    <span class=\"hljs-string\">\"suite\"</span>: <span class=\"hljs-string\">\"Apt. 556\"</span>,<br>                    <span class=\"hljs-string\">\"city\"</span>: <span class=\"hljs-string\">\"Gwenborough\"</span>,<br>                    <span class=\"hljs-string\">\"zipcode\"</span>: <span class=\"hljs-string\">\"92998-3874\"</span>,<br>                    <span class=\"hljs-string\">\"geo\"</span>: {<br>                        <span class=\"hljs-string\">\"lat\"</span>: <span class=\"hljs-string\">\"-37.3159\"</span>,<br>                        <span class=\"hljs-string\">\"lng\"</span>: <span class=\"hljs-string\">\"81.1496\"</span><br>                    }<br>                },<br>                <span class=\"hljs-string\">\"phone\"</span>: <span class=\"hljs-string\">\"1-770-736-8031 x56442\"</span>,<br>                <span class=\"hljs-string\">\"website\"</span>: <span class=\"hljs-string\">\"hildegard.org\"</span>,<br>                <span class=\"hljs-string\">\"company\"</span>: {<br>                    <span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"Romaguera-Crona\"</span>,<br>                    <span class=\"hljs-string\">\"catchPhrase\"</span>: <span class=\"hljs-string\">\"Multi-layered client-server neural-net\"</span>,<br>                    <span class=\"hljs-string\">\"bs\"</span>: <span class=\"hljs-string\">\"harness real-time e-markets\"</span><br>                }<br>            })<br>    })<br>    .expect(<span class=\"hljs-number\">200</span>, done);",
            "isRoot": false,
            "uuid": "9fa1dd66-9d3b-4b7f-bd8b-477f99d9f0d4",
            "parentUUID": "eff3be09-1a0c-45e9-ae06-a0650eacb1cf",
            "skipped": false
          },
          {
            "title": "should return a 200 OK status code for userId 1 using expect method",
            "fullTitle": "@get should return a 200 OK status code for userId 1 using expect method",
            "timedOut": false,
            "duration": 8,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "utils.httpGET(<span class=\"hljs-string\">'/users/1'</span>, {})<br>    .set(<span class=\"hljs-string\">'content-type'</span>, <span class=\"hljs-string\">'application/json; charset=utf-8'</span>)<br>    .expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">res</span>) </span>{<br>        <span class=\"hljs-keyword\">const</span> response = res.body;<br>        <span class=\"hljs-built_in\">console</span>.log(response);<br>        expect(response).to.have.property(<span class=\"hljs-string\">'id'</span>);<br>        expect(response).to.have.property(<span class=\"hljs-string\">'name'</span>);<br>        expect(response).to.have.property(<span class=\"hljs-string\">'username'</span>);<br>        expect(response).to.have.property(<span class=\"hljs-string\">'email'</span>);<br>        expect(response.id).to.equal(<span class=\"hljs-number\">1</span>);<br>        expect(response.email).to.equal(<span class=\"hljs-string\">'Sincere@april.biz'</span>);<br>        expect(response.address.city).to.equal(<span class=\"hljs-string\">'Gwenborough'</span>);<br><br>    })<br>    .expect(<span class=\"hljs-number\">200</span>, done);",
            "isRoot": false,
            "uuid": "447f4aa6-efa0-46b8-924c-cfd291eb6aa8",
            "parentUUID": "eff3be09-1a0c-45e9-ae06-a0650eacb1cf",
            "skipped": false
          },
          {
            "title": "should return a 200 OK status code for GET /users using expect method",
            "fullTitle": "@get should return a 200 OK status code for GET /users using expect method",
            "timedOut": false,
            "duration": 13,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "utils.httpGET(<span class=\"hljs-string\">'/users/'</span>, {})<br>    .set(<span class=\"hljs-string\">'content-type'</span>, <span class=\"hljs-string\">'application/json; charset=utf-8'</span>)<br>    .expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">res</span>) </span>{<br>        <span class=\"hljs-keyword\">const</span> response = res.body;<br>        <span class=\"hljs-built_in\">console</span>.log(response);<br>    })<br>    .expect(<span class=\"hljs-number\">200</span>, done);",
            "isRoot": false,
            "uuid": "2cb9aa93-7adc-4687-843d-bf8f47838671",
            "parentUUID": "eff3be09-1a0c-45e9-ae06-a0650eacb1cf",
            "skipped": false
          }
        ],
        "failures": [],
        "skipped": [],
        "hasTests": true,
        "hasSuites": false,
        "totalTests": 3,
        "totalPasses": 3,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": true,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 30
      }
    ],
    "tests": [],
    "pending": [],
    "root": true,
    "_timeout": 3000,
    "uuid": "7318b83c-5d1f-4003-a5ec-fe52195511a7",
    "fullFile": "",
    "file": "",
    "passes": [],
    "failures": [],
    "skipped": [],
    "hasTests": false,
    "hasSuites": true,
    "totalTests": 0,
    "totalPasses": 0,
    "totalFailures": 0,
    "totalPending": 0,
    "totalSkipped": 0,
    "hasPasses": false,
    "hasFailures": false,
    "hasPending": false,
    "hasSkipped": false,
    "duration": 0,
    "rootEmpty": true
  },
  "allTests": [
    {
      "title": "should return a 200 OK status code for Comment ID 1",
      "fullTitle": "@get should return a 200 OK status code for Comment ID 1",
      "timedOut": false,
      "duration": 45,
      "state": "passed",
      "speed": "medium",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "utils.httpGET(<span class=\"hljs-string\">'/comments/1'</span>, {})<br>    .set(<span class=\"hljs-string\">'content-type'</span>, <span class=\"hljs-string\">'application/json; charset=utf-8'</span>)<br>    .expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">res</span>) </span>{<br>        <span class=\"hljs-keyword\">const</span> response = res.body;<br>        <span class=\"hljs-built_in\">console</span>.log(response);<br>        <span class=\"hljs-keyword\">return</span> assert.deepEqual(response,<br>            {<br>                <span class=\"hljs-string\">\"postId\"</span>: <span class=\"hljs-number\">1</span>,<br>                <span class=\"hljs-string\">\"id\"</span>: <span class=\"hljs-number\">1</span>,<br>                <span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"id labore ex et quam laborum\"</span>,<br>                <span class=\"hljs-string\">\"email\"</span>: <span class=\"hljs-string\">\"Eliseo@gardner.biz\"</span>,<br>                <span class=\"hljs-string\">\"body\"</span>: <span class=\"hljs-string\">\"laudantium enim quasi est quidem magnam voluptate ipsam eos\\ntempora quo necessitatibus\\ndolor quam autem quasi\\nreiciendis et nam sapiente accusantium\"</span><br>            })<br>    })<br>    .expect(<span class=\"hljs-number\">200</span>, done);",
      "isRoot": false,
      "uuid": "67f4b9c9-8f96-40c0-aa67-9525ce075501",
      "parentUUID": "410a47f7-97d5-4351-a801-6e89433c3e6d",
      "skipped": false
    },
    {
      "title": "should return a 200 OK status code for comment ID 1 using expect method",
      "fullTitle": "@get should return a 200 OK status code for comment ID 1 using expect method",
      "timedOut": false,
      "duration": 17,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "utils.httpGET(<span class=\"hljs-string\">'/comments/1'</span>, {})<br>    .set(<span class=\"hljs-string\">'content-type'</span>, <span class=\"hljs-string\">'application/json; charset=utf-8'</span>)<br>    .expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">res</span>) </span>{<br>        <span class=\"hljs-keyword\">const</span> response = res.body;<br>        <span class=\"hljs-built_in\">console</span>.log(response);<br>        expect(response).to.have.property(<span class=\"hljs-string\">'postId'</span>);<br>        expect(response).to.have.property(<span class=\"hljs-string\">'id'</span>);<br>        expect(response).to.have.property(<span class=\"hljs-string\">'name'</span>);<br>        expect(response).to.have.property(<span class=\"hljs-string\">'email'</span>);<br>        expect(response).to.have.property(<span class=\"hljs-string\">'body'</span>);<br>        expect(response.id).to.equal(<span class=\"hljs-number\">1</span>);<br>        expect(response.email).to.equal(<span class=\"hljs-string\">'Eliseo@gardner.biz'</span>);<br>        expect(response.name).to.equal(<span class=\"hljs-string\">'id labore ex et quam laborum'</span>);<br><br>    })<br>    .expect(<span class=\"hljs-number\">200</span>, done);",
      "isRoot": false,
      "uuid": "5d61a232-d612-49e7-8430-7173fe1a7561",
      "parentUUID": "410a47f7-97d5-4351-a801-6e89433c3e6d",
      "skipped": false
    },
    {
      "title": "should return a 200 OK status code for GET /comments using expect method",
      "fullTitle": "@get should return a 200 OK status code for GET /comments using expect method",
      "timedOut": false,
      "duration": 59,
      "state": "passed",
      "speed": "medium",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "utils.httpGET(<span class=\"hljs-string\">'/comments/'</span>, {})<br>    .set(<span class=\"hljs-string\">'content-type'</span>, <span class=\"hljs-string\">'application/json; charset=utf-8'</span>)<br>    .expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">res</span>) </span>{<br>        <span class=\"hljs-keyword\">const</span> response = res.body;<br>        <span class=\"hljs-built_in\">console</span>.log(response);<br>    })<br>    .expect(<span class=\"hljs-number\">200</span>, done);",
      "isRoot": false,
      "uuid": "17cb8ec1-92a8-4790-a0ea-d75f5d15f9eb",
      "parentUUID": "410a47f7-97d5-4351-a801-6e89433c3e6d",
      "skipped": false
    },
    {
      "title": "should return a 200 code after deleting fake postId 100",
      "fullTitle": "@delete should return a 200 code after deleting fake postId 100",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "utils.httpDELETE(<span class=\"hljs-string\">'/posts/101'</span>, {})<br>   .send(<br>       {<br>           id: <span class=\"hljs-number\">101</span>,<br>           title: <span class=\"hljs-string\">'foo'</span>,<br>           body: <span class=\"hljs-string\">'bar'</span>,<br>           userId: <span class=\"hljs-number\">1</span><br>       }<br>   )<br>   .expect(<span class=\"hljs-string\">'content-type'</span>, <span class=\"hljs-string\">'application/json; charset=utf-8'</span>)<br>   .expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">res</span>) </span>{<br>       <span class=\"hljs-keyword\">const</span> response = res.body;<br>       <span class=\"hljs-built_in\">console</span>.log(response)<br>       <span class=\"hljs-keyword\">return</span> assert.deepEqual(response,<br>           {} <span class=\"hljs-comment\">//return empty response</span><br>       );<br>   })<br>    .expect(<span class=\"hljs-number\">200</span>);",
      "isRoot": false,
      "uuid": "0aeb1a16-ace1-4416-9d86-71aac098aa5c",
      "parentUUID": "433b2981-bf0c-4e31-8cab-1aa4c8f0a818",
      "skipped": false
    },
    {
      "title": "should return a 200 OK status code for PostID 1",
      "fullTitle": "@get should return a 200 OK status code for PostID 1",
      "timedOut": false,
      "duration": 10,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "utils.httpGET(<span class=\"hljs-string\">'/posts/1'</span>, {})<br>    .set(<span class=\"hljs-string\">'content-type'</span>, <span class=\"hljs-string\">'application/json; charset=utf-8'</span>)<br>    .expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">res</span>) </span>{<br>        <span class=\"hljs-keyword\">const</span> response = res.body;<br>        <span class=\"hljs-built_in\">console</span>.log(response);<br>        <span class=\"hljs-keyword\">return</span> assert.deepEqual(response,<br>            {<br>                <span class=\"hljs-string\">\"id\"</span>: <span class=\"hljs-string\">\"1\"</span>,<br>                <span class=\"hljs-string\">\"title\"</span>: <span class=\"hljs-string\">\"foo\"</span>,<br>                <span class=\"hljs-string\">\"body\"</span>: <span class=\"hljs-string\">\"bar\"</span>,<br>                <span class=\"hljs-string\">\"userId\"</span>: <span class=\"hljs-number\">1</span><br>            })<br>    })<br>    .expect(<span class=\"hljs-number\">200</span>, done);",
      "isRoot": false,
      "uuid": "c400eba5-a7bc-4282-9776-c0bceb4b7ae4",
      "parentUUID": "98c12021-8687-4aab-9d68-2648c621e815",
      "skipped": false
    },
    {
      "title": "should return a 200 OK status code for PostID 1 using expect method",
      "fullTitle": "@get should return a 200 OK status code for PostID 1 using expect method",
      "timedOut": false,
      "duration": 10,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "utils.httpGET(<span class=\"hljs-string\">'/posts/1'</span>, {})<br>    .set(<span class=\"hljs-string\">'content-type'</span>, <span class=\"hljs-string\">'application/json; charset=utf-8'</span>)<br>    .expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">res</span>) </span>{<br>        <span class=\"hljs-keyword\">const</span> response = res.body;<br>        <span class=\"hljs-built_in\">console</span>.log(response);<br>        expect(response).to.have.property(<span class=\"hljs-string\">'id'</span>);<br>        expect(response).to.have.property(<span class=\"hljs-string\">'title'</span>);<br>        expect(response).to.have.property(<span class=\"hljs-string\">'body'</span>);<br>        expect(response).to.have.property(<span class=\"hljs-string\">'userId'</span>);<br>        expect(response.id).to.equal(<span class=\"hljs-string\">'1'</span>);<br>    })<br>    .expect(<span class=\"hljs-number\">200</span>, done);",
      "isRoot": false,
      "uuid": "173ae70b-5052-4da7-9e3e-46ca3a42123e",
      "parentUUID": "98c12021-8687-4aab-9d68-2648c621e815",
      "skipped": false
    },
    {
      "title": "should return a 200 OK status code for PostID 1 using expect method",
      "fullTitle": "@get should return a 200 OK status code for PostID 1 using expect method",
      "timedOut": false,
      "duration": 23,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "utils.httpGET(<span class=\"hljs-string\">'/posts/'</span>, {})<br>    .set(<span class=\"hljs-string\">'content-type'</span>, <span class=\"hljs-string\">'application/json; charset=utf-8'</span>)<br>    .expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">res</span>) </span>{<br>        <span class=\"hljs-keyword\">const</span> response = res.body;<br>        <span class=\"hljs-built_in\">console</span>.log(response);<br>    })<br>    .expect(<span class=\"hljs-number\">200</span>, done);",
      "isRoot": false,
      "uuid": "ea9e8842-6ab5-44d2-9db3-3899c73ddced",
      "parentUUID": "98c12021-8687-4aab-9d68-2648c621e815",
      "skipped": false
    },
    {
      "title": "should return a 201 code after posting",
      "fullTitle": "@post should return a 201 code after posting",
      "timedOut": false,
      "duration": 99,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "utils.httpPOST(<span class=\"hljs-string\">'/posts'</span>, {})<br>    .send({title: <span class=\"hljs-string\">'foo'</span>, body: <span class=\"hljs-string\">'bar'</span>, userId: <span class=\"hljs-number\">1</span>})<br>    .expect(<span class=\"hljs-string\">'content-type'</span>, <span class=\"hljs-string\">'application/json; charset=utf-8'</span>)<br>    .expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">res</span>) </span>{<br>        <span class=\"hljs-keyword\">const</span> response = res.body;<br>        <span class=\"hljs-built_in\">console</span>.log(response);<br>        <span class=\"hljs-comment\">//expect(response.id).to.equal(105);</span><br>        expect(response.title).to.equal(<span class=\"hljs-string\">'foo'</span>);<br>        expect(response.body).to.equal(<span class=\"hljs-string\">'bar'</span>);<br>        expect(response.userId).to.equal(<span class=\"hljs-number\">1</span>);<br>    })<br>    .expect(<span class=\"hljs-number\">201</span>, done)",
      "isRoot": false,
      "uuid": "ecb8beb4-fd99-4935-9338-471dfe4bdbaa",
      "parentUUID": "6f24f961-a743-40f7-af5c-7bbd920ed508",
      "skipped": false
    },
    {
      "title": "should return a 200 code after updating postId 1",
      "fullTitle": "@put should return a 200 code after updating postId 1",
      "timedOut": false,
      "duration": 19,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "utils.httpPUT(<span class=\"hljs-string\">'/posts/20'</span>, {})<br>    .send(<br>        {<br>            id: <span class=\"hljs-number\">20</span>,<br>            title: <span class=\"hljs-string\">'candy crush'</span>,<br>            body: <span class=\"hljs-string\">'sodalicious juicy'</span>,<br>            userId: <span class=\"hljs-number\">1</span><br>        }<br>    )<br>    .expect(<span class=\"hljs-string\">'content-type'</span>, <span class=\"hljs-string\">'application/json; charset=utf-8'</span>)<br>    .expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">res</span>) </span>{<br>        <span class=\"hljs-keyword\">const</span> response = res.body;<br>        <span class=\"hljs-built_in\">console</span>.log(response);<br>        expect(response.id).to.equal(<span class=\"hljs-string\">'20'</span>);<br>        expect(response.title).to.equal(<span class=\"hljs-string\">'candy crush'</span>);<br>        expect(response.body).to.equal(<span class=\"hljs-string\">'sodalicious juicy'</span>);<br>        expect(response.userId).to.equal(<span class=\"hljs-number\">1</span>);<br>    })<br>    .expect(<span class=\"hljs-number\">200</span>, done);",
      "isRoot": false,
      "uuid": "a88fd04f-e8ac-40fc-bfcd-6a51eafea0f0",
      "parentUUID": "402f842a-3b64-415f-af5a-1a6d1c28fa65",
      "skipped": false
    },
    {
      "title": "should return a 200 code after updating postId 1",
      "fullTitle": "@put should return a 200 code after updating postId 1",
      "timedOut": false,
      "duration": 13,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "utils.httpPUT(<span class=\"hljs-string\">'/posts/1'</span>, {})<br>    .send(<br>        {<br>            id: <span class=\"hljs-number\">1</span>,<br>            title: <span class=\"hljs-string\">'foo'</span>,<br>            body: <span class=\"hljs-string\">'bar'</span>,<br>            userId: <span class=\"hljs-number\">1</span><br>        }<br>    )<br>    .expect(<span class=\"hljs-string\">'content-type'</span>, <span class=\"hljs-string\">'application/json; charset=utf-8'</span>)<br>    .expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">res</span>) </span>{<br>        <span class=\"hljs-keyword\">const</span> response = res.body;<br>        <span class=\"hljs-built_in\">console</span>.log(response);<br>        expect(response.id).to.equal(<span class=\"hljs-string\">'1'</span>);<br>        expect(response.title).to.equal(<span class=\"hljs-string\">'foo'</span>);<br>        expect(response.body).to.equal(<span class=\"hljs-string\">'bar'</span>);<br>        expect(response.userId).to.equal(<span class=\"hljs-number\">1</span>);<br>    })<br>    .expect(<span class=\"hljs-number\">200</span>, done);",
      "isRoot": false,
      "uuid": "75969590-a547-40bb-9425-6f575c10755e",
      "parentUUID": "402f842a-3b64-415f-af5a-1a6d1c28fa65",
      "skipped": false
    },
    {
      "title": "should return a 200 OK status code for PostID 1",
      "fullTitle": "@get should return a 200 OK status code for PostID 1",
      "timedOut": false,
      "duration": 9,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "utils.httpGET(<span class=\"hljs-string\">'/users/1'</span>, {})<br>    .set(<span class=\"hljs-string\">'content-type'</span>, <span class=\"hljs-string\">'application/json; charset=utf-8'</span>)<br>    .expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">res</span>) </span>{<br>        <span class=\"hljs-keyword\">const</span> response = res.body;<br>        <span class=\"hljs-built_in\">console</span>.log(response);<br>        <span class=\"hljs-keyword\">return</span> assert.deepEqual(response,<br>            {<br>                <span class=\"hljs-string\">\"id\"</span>: <span class=\"hljs-number\">1</span>,<br>                <span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"Leanne Graham\"</span>,<br>                <span class=\"hljs-string\">\"username\"</span>: <span class=\"hljs-string\">\"Bret\"</span>,<br>                <span class=\"hljs-string\">\"email\"</span>: <span class=\"hljs-string\">\"Sincere@april.biz\"</span>,<br>                <span class=\"hljs-string\">\"address\"</span>: {<br>                    <span class=\"hljs-string\">\"street\"</span>: <span class=\"hljs-string\">\"Kulas Light\"</span>,<br>                    <span class=\"hljs-string\">\"suite\"</span>: <span class=\"hljs-string\">\"Apt. 556\"</span>,<br>                    <span class=\"hljs-string\">\"city\"</span>: <span class=\"hljs-string\">\"Gwenborough\"</span>,<br>                    <span class=\"hljs-string\">\"zipcode\"</span>: <span class=\"hljs-string\">\"92998-3874\"</span>,<br>                    <span class=\"hljs-string\">\"geo\"</span>: {<br>                        <span class=\"hljs-string\">\"lat\"</span>: <span class=\"hljs-string\">\"-37.3159\"</span>,<br>                        <span class=\"hljs-string\">\"lng\"</span>: <span class=\"hljs-string\">\"81.1496\"</span><br>                    }<br>                },<br>                <span class=\"hljs-string\">\"phone\"</span>: <span class=\"hljs-string\">\"1-770-736-8031 x56442\"</span>,<br>                <span class=\"hljs-string\">\"website\"</span>: <span class=\"hljs-string\">\"hildegard.org\"</span>,<br>                <span class=\"hljs-string\">\"company\"</span>: {<br>                    <span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"Romaguera-Crona\"</span>,<br>                    <span class=\"hljs-string\">\"catchPhrase\"</span>: <span class=\"hljs-string\">\"Multi-layered client-server neural-net\"</span>,<br>                    <span class=\"hljs-string\">\"bs\"</span>: <span class=\"hljs-string\">\"harness real-time e-markets\"</span><br>                }<br>            })<br>    })<br>    .expect(<span class=\"hljs-number\">200</span>, done);",
      "isRoot": false,
      "uuid": "1ee36955-b1fe-44f0-85c3-1f791877c1e7",
      "parentUUID": "eff3be09-1a0c-45e9-ae06-a0650eacb1cf",
      "skipped": false
    },
    {
      "title": "should return a 200 OK status code for userId 1 using expect method",
      "fullTitle": "@get should return a 200 OK status code for userId 1 using expect method",
      "timedOut": false,
      "duration": 8,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "utils.httpGET(<span class=\"hljs-string\">'/users/1'</span>, {})<br>    .set(<span class=\"hljs-string\">'content-type'</span>, <span class=\"hljs-string\">'application/json; charset=utf-8'</span>)<br>    .expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">res</span>) </span>{<br>        <span class=\"hljs-keyword\">const</span> response = res.body;<br>        <span class=\"hljs-built_in\">console</span>.log(response);<br>        expect(response).to.have.property(<span class=\"hljs-string\">'id'</span>);<br>        expect(response).to.have.property(<span class=\"hljs-string\">'name'</span>);<br>        expect(response).to.have.property(<span class=\"hljs-string\">'username'</span>);<br>        expect(response).to.have.property(<span class=\"hljs-string\">'email'</span>);<br>        expect(response.id).to.equal(<span class=\"hljs-number\">1</span>);<br>        expect(response.email).to.equal(<span class=\"hljs-string\">'Sincere@april.biz'</span>);<br>        expect(response.address.city).to.equal(<span class=\"hljs-string\">'Gwenborough'</span>);<br><br>    })<br>    .expect(<span class=\"hljs-number\">200</span>, done);",
      "isRoot": false,
      "uuid": "39e2640f-e022-4d6f-9924-da2bc60af135",
      "parentUUID": "eff3be09-1a0c-45e9-ae06-a0650eacb1cf",
      "skipped": false
    },
    {
      "title": "should return a 200 OK status code for GET /users using expect method",
      "fullTitle": "@get should return a 200 OK status code for GET /users using expect method",
      "timedOut": false,
      "duration": 13,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "utils.httpGET(<span class=\"hljs-string\">'/users/'</span>, {})<br>    .set(<span class=\"hljs-string\">'content-type'</span>, <span class=\"hljs-string\">'application/json; charset=utf-8'</span>)<br>    .expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">res</span>) </span>{<br>        <span class=\"hljs-keyword\">const</span> response = res.body;<br>        <span class=\"hljs-built_in\">console</span>.log(response);<br>    })<br>    .expect(<span class=\"hljs-number\">200</span>, done);",
      "isRoot": false,
      "uuid": "14c3a061-3a10-4511-b485-409338e7260c",
      "parentUUID": "eff3be09-1a0c-45e9-ae06-a0650eacb1cf",
      "skipped": false
    }
  ],
  "allPending": [],
  "allPasses": [
    {
      "title": "should return a 200 OK status code for Comment ID 1",
      "fullTitle": "@get should return a 200 OK status code for Comment ID 1",
      "timedOut": false,
      "duration": 45,
      "state": "passed",
      "speed": "medium",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "utils.httpGET(<span class=\"hljs-string\">'/comments/1'</span>, {})<br>    .set(<span class=\"hljs-string\">'content-type'</span>, <span class=\"hljs-string\">'application/json; charset=utf-8'</span>)<br>    .expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">res</span>) </span>{<br>        <span class=\"hljs-keyword\">const</span> response = res.body;<br>        <span class=\"hljs-built_in\">console</span>.log(response);<br>        <span class=\"hljs-keyword\">return</span> assert.deepEqual(response,<br>            {<br>                <span class=\"hljs-string\">\"postId\"</span>: <span class=\"hljs-number\">1</span>,<br>                <span class=\"hljs-string\">\"id\"</span>: <span class=\"hljs-number\">1</span>,<br>                <span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"id labore ex et quam laborum\"</span>,<br>                <span class=\"hljs-string\">\"email\"</span>: <span class=\"hljs-string\">\"Eliseo@gardner.biz\"</span>,<br>                <span class=\"hljs-string\">\"body\"</span>: <span class=\"hljs-string\">\"laudantium enim quasi est quidem magnam voluptate ipsam eos\\ntempora quo necessitatibus\\ndolor quam autem quasi\\nreiciendis et nam sapiente accusantium\"</span><br>            })<br>    })<br>    .expect(<span class=\"hljs-number\">200</span>, done);",
      "isRoot": false,
      "uuid": "4439ae86-cee2-4c5e-9c57-8ad83530262b",
      "parentUUID": "410a47f7-97d5-4351-a801-6e89433c3e6d",
      "skipped": false
    },
    {
      "title": "should return a 200 OK status code for comment ID 1 using expect method",
      "fullTitle": "@get should return a 200 OK status code for comment ID 1 using expect method",
      "timedOut": false,
      "duration": 17,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "utils.httpGET(<span class=\"hljs-string\">'/comments/1'</span>, {})<br>    .set(<span class=\"hljs-string\">'content-type'</span>, <span class=\"hljs-string\">'application/json; charset=utf-8'</span>)<br>    .expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">res</span>) </span>{<br>        <span class=\"hljs-keyword\">const</span> response = res.body;<br>        <span class=\"hljs-built_in\">console</span>.log(response);<br>        expect(response).to.have.property(<span class=\"hljs-string\">'postId'</span>);<br>        expect(response).to.have.property(<span class=\"hljs-string\">'id'</span>);<br>        expect(response).to.have.property(<span class=\"hljs-string\">'name'</span>);<br>        expect(response).to.have.property(<span class=\"hljs-string\">'email'</span>);<br>        expect(response).to.have.property(<span class=\"hljs-string\">'body'</span>);<br>        expect(response.id).to.equal(<span class=\"hljs-number\">1</span>);<br>        expect(response.email).to.equal(<span class=\"hljs-string\">'Eliseo@gardner.biz'</span>);<br>        expect(response.name).to.equal(<span class=\"hljs-string\">'id labore ex et quam laborum'</span>);<br><br>    })<br>    .expect(<span class=\"hljs-number\">200</span>, done);",
      "isRoot": false,
      "uuid": "0630e411-33bc-4fca-9cdf-b92c818b3614",
      "parentUUID": "410a47f7-97d5-4351-a801-6e89433c3e6d",
      "skipped": false
    },
    {
      "title": "should return a 200 OK status code for GET /comments using expect method",
      "fullTitle": "@get should return a 200 OK status code for GET /comments using expect method",
      "timedOut": false,
      "duration": 59,
      "state": "passed",
      "speed": "medium",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "utils.httpGET(<span class=\"hljs-string\">'/comments/'</span>, {})<br>    .set(<span class=\"hljs-string\">'content-type'</span>, <span class=\"hljs-string\">'application/json; charset=utf-8'</span>)<br>    .expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">res</span>) </span>{<br>        <span class=\"hljs-keyword\">const</span> response = res.body;<br>        <span class=\"hljs-built_in\">console</span>.log(response);<br>    })<br>    .expect(<span class=\"hljs-number\">200</span>, done);",
      "isRoot": false,
      "uuid": "915468af-ff3b-4682-ac3c-823333405dcd",
      "parentUUID": "410a47f7-97d5-4351-a801-6e89433c3e6d",
      "skipped": false
    },
    {
      "title": "should return a 200 code after deleting fake postId 100",
      "fullTitle": "@delete should return a 200 code after deleting fake postId 100",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "utils.httpDELETE(<span class=\"hljs-string\">'/posts/101'</span>, {})<br>   .send(<br>       {<br>           id: <span class=\"hljs-number\">101</span>,<br>           title: <span class=\"hljs-string\">'foo'</span>,<br>           body: <span class=\"hljs-string\">'bar'</span>,<br>           userId: <span class=\"hljs-number\">1</span><br>       }<br>   )<br>   .expect(<span class=\"hljs-string\">'content-type'</span>, <span class=\"hljs-string\">'application/json; charset=utf-8'</span>)<br>   .expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">res</span>) </span>{<br>       <span class=\"hljs-keyword\">const</span> response = res.body;<br>       <span class=\"hljs-built_in\">console</span>.log(response)<br>       <span class=\"hljs-keyword\">return</span> assert.deepEqual(response,<br>           {} <span class=\"hljs-comment\">//return empty response</span><br>       );<br>   })<br>    .expect(<span class=\"hljs-number\">200</span>);",
      "isRoot": false,
      "uuid": "dd56e17a-a149-4b5a-a4f2-170a18e2acda",
      "parentUUID": "433b2981-bf0c-4e31-8cab-1aa4c8f0a818",
      "skipped": false
    },
    {
      "title": "should return a 200 OK status code for PostID 1",
      "fullTitle": "@get should return a 200 OK status code for PostID 1",
      "timedOut": false,
      "duration": 10,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "utils.httpGET(<span class=\"hljs-string\">'/posts/1'</span>, {})<br>    .set(<span class=\"hljs-string\">'content-type'</span>, <span class=\"hljs-string\">'application/json; charset=utf-8'</span>)<br>    .expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">res</span>) </span>{<br>        <span class=\"hljs-keyword\">const</span> response = res.body;<br>        <span class=\"hljs-built_in\">console</span>.log(response);<br>        <span class=\"hljs-keyword\">return</span> assert.deepEqual(response,<br>            {<br>                <span class=\"hljs-string\">\"id\"</span>: <span class=\"hljs-string\">\"1\"</span>,<br>                <span class=\"hljs-string\">\"title\"</span>: <span class=\"hljs-string\">\"foo\"</span>,<br>                <span class=\"hljs-string\">\"body\"</span>: <span class=\"hljs-string\">\"bar\"</span>,<br>                <span class=\"hljs-string\">\"userId\"</span>: <span class=\"hljs-number\">1</span><br>            })<br>    })<br>    .expect(<span class=\"hljs-number\">200</span>, done);",
      "isRoot": false,
      "uuid": "e3edbb87-7628-4da7-9aa9-8ecab682f4be",
      "parentUUID": "98c12021-8687-4aab-9d68-2648c621e815",
      "skipped": false
    },
    {
      "title": "should return a 200 OK status code for PostID 1 using expect method",
      "fullTitle": "@get should return a 200 OK status code for PostID 1 using expect method",
      "timedOut": false,
      "duration": 10,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "utils.httpGET(<span class=\"hljs-string\">'/posts/1'</span>, {})<br>    .set(<span class=\"hljs-string\">'content-type'</span>, <span class=\"hljs-string\">'application/json; charset=utf-8'</span>)<br>    .expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">res</span>) </span>{<br>        <span class=\"hljs-keyword\">const</span> response = res.body;<br>        <span class=\"hljs-built_in\">console</span>.log(response);<br>        expect(response).to.have.property(<span class=\"hljs-string\">'id'</span>);<br>        expect(response).to.have.property(<span class=\"hljs-string\">'title'</span>);<br>        expect(response).to.have.property(<span class=\"hljs-string\">'body'</span>);<br>        expect(response).to.have.property(<span class=\"hljs-string\">'userId'</span>);<br>        expect(response.id).to.equal(<span class=\"hljs-string\">'1'</span>);<br>    })<br>    .expect(<span class=\"hljs-number\">200</span>, done);",
      "isRoot": false,
      "uuid": "406fef63-5282-499b-8e10-6b2738b6fe1b",
      "parentUUID": "98c12021-8687-4aab-9d68-2648c621e815",
      "skipped": false
    },
    {
      "title": "should return a 200 OK status code for PostID 1 using expect method",
      "fullTitle": "@get should return a 200 OK status code for PostID 1 using expect method",
      "timedOut": false,
      "duration": 23,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "utils.httpGET(<span class=\"hljs-string\">'/posts/'</span>, {})<br>    .set(<span class=\"hljs-string\">'content-type'</span>, <span class=\"hljs-string\">'application/json; charset=utf-8'</span>)<br>    .expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">res</span>) </span>{<br>        <span class=\"hljs-keyword\">const</span> response = res.body;<br>        <span class=\"hljs-built_in\">console</span>.log(response);<br>    })<br>    .expect(<span class=\"hljs-number\">200</span>, done);",
      "isRoot": false,
      "uuid": "8e01ed76-c2c3-41f2-95e0-a274b8e2b9a0",
      "parentUUID": "98c12021-8687-4aab-9d68-2648c621e815",
      "skipped": false
    },
    {
      "title": "should return a 201 code after posting",
      "fullTitle": "@post should return a 201 code after posting",
      "timedOut": false,
      "duration": 99,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "utils.httpPOST(<span class=\"hljs-string\">'/posts'</span>, {})<br>    .send({title: <span class=\"hljs-string\">'foo'</span>, body: <span class=\"hljs-string\">'bar'</span>, userId: <span class=\"hljs-number\">1</span>})<br>    .expect(<span class=\"hljs-string\">'content-type'</span>, <span class=\"hljs-string\">'application/json; charset=utf-8'</span>)<br>    .expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">res</span>) </span>{<br>        <span class=\"hljs-keyword\">const</span> response = res.body;<br>        <span class=\"hljs-built_in\">console</span>.log(response);<br>        <span class=\"hljs-comment\">//expect(response.id).to.equal(105);</span><br>        expect(response.title).to.equal(<span class=\"hljs-string\">'foo'</span>);<br>        expect(response.body).to.equal(<span class=\"hljs-string\">'bar'</span>);<br>        expect(response.userId).to.equal(<span class=\"hljs-number\">1</span>);<br>    })<br>    .expect(<span class=\"hljs-number\">201</span>, done)",
      "isRoot": false,
      "uuid": "9cb9c4a5-d9db-4d23-93b2-428a4ae2290b",
      "parentUUID": "6f24f961-a743-40f7-af5c-7bbd920ed508",
      "skipped": false
    },
    {
      "title": "should return a 200 code after updating postId 1",
      "fullTitle": "@put should return a 200 code after updating postId 1",
      "timedOut": false,
      "duration": 19,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "utils.httpPUT(<span class=\"hljs-string\">'/posts/20'</span>, {})<br>    .send(<br>        {<br>            id: <span class=\"hljs-number\">20</span>,<br>            title: <span class=\"hljs-string\">'candy crush'</span>,<br>            body: <span class=\"hljs-string\">'sodalicious juicy'</span>,<br>            userId: <span class=\"hljs-number\">1</span><br>        }<br>    )<br>    .expect(<span class=\"hljs-string\">'content-type'</span>, <span class=\"hljs-string\">'application/json; charset=utf-8'</span>)<br>    .expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">res</span>) </span>{<br>        <span class=\"hljs-keyword\">const</span> response = res.body;<br>        <span class=\"hljs-built_in\">console</span>.log(response);<br>        expect(response.id).to.equal(<span class=\"hljs-string\">'20'</span>);<br>        expect(response.title).to.equal(<span class=\"hljs-string\">'candy crush'</span>);<br>        expect(response.body).to.equal(<span class=\"hljs-string\">'sodalicious juicy'</span>);<br>        expect(response.userId).to.equal(<span class=\"hljs-number\">1</span>);<br>    })<br>    .expect(<span class=\"hljs-number\">200</span>, done);",
      "isRoot": false,
      "uuid": "55a87bd7-acaa-46a4-be21-dc581e68915a",
      "parentUUID": "402f842a-3b64-415f-af5a-1a6d1c28fa65",
      "skipped": false
    },
    {
      "title": "should return a 200 code after updating postId 1",
      "fullTitle": "@put should return a 200 code after updating postId 1",
      "timedOut": false,
      "duration": 13,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "utils.httpPUT(<span class=\"hljs-string\">'/posts/1'</span>, {})<br>    .send(<br>        {<br>            id: <span class=\"hljs-number\">1</span>,<br>            title: <span class=\"hljs-string\">'foo'</span>,<br>            body: <span class=\"hljs-string\">'bar'</span>,<br>            userId: <span class=\"hljs-number\">1</span><br>        }<br>    )<br>    .expect(<span class=\"hljs-string\">'content-type'</span>, <span class=\"hljs-string\">'application/json; charset=utf-8'</span>)<br>    .expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">res</span>) </span>{<br>        <span class=\"hljs-keyword\">const</span> response = res.body;<br>        <span class=\"hljs-built_in\">console</span>.log(response);<br>        expect(response.id).to.equal(<span class=\"hljs-string\">'1'</span>);<br>        expect(response.title).to.equal(<span class=\"hljs-string\">'foo'</span>);<br>        expect(response.body).to.equal(<span class=\"hljs-string\">'bar'</span>);<br>        expect(response.userId).to.equal(<span class=\"hljs-number\">1</span>);<br>    })<br>    .expect(<span class=\"hljs-number\">200</span>, done);",
      "isRoot": false,
      "uuid": "cd44a038-8ffb-4778-a79c-c8c476e0cc7f",
      "parentUUID": "402f842a-3b64-415f-af5a-1a6d1c28fa65",
      "skipped": false
    },
    {
      "title": "should return a 200 OK status code for PostID 1",
      "fullTitle": "@get should return a 200 OK status code for PostID 1",
      "timedOut": false,
      "duration": 9,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "utils.httpGET(<span class=\"hljs-string\">'/users/1'</span>, {})<br>    .set(<span class=\"hljs-string\">'content-type'</span>, <span class=\"hljs-string\">'application/json; charset=utf-8'</span>)<br>    .expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">res</span>) </span>{<br>        <span class=\"hljs-keyword\">const</span> response = res.body;<br>        <span class=\"hljs-built_in\">console</span>.log(response);<br>        <span class=\"hljs-keyword\">return</span> assert.deepEqual(response,<br>            {<br>                <span class=\"hljs-string\">\"id\"</span>: <span class=\"hljs-number\">1</span>,<br>                <span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"Leanne Graham\"</span>,<br>                <span class=\"hljs-string\">\"username\"</span>: <span class=\"hljs-string\">\"Bret\"</span>,<br>                <span class=\"hljs-string\">\"email\"</span>: <span class=\"hljs-string\">\"Sincere@april.biz\"</span>,<br>                <span class=\"hljs-string\">\"address\"</span>: {<br>                    <span class=\"hljs-string\">\"street\"</span>: <span class=\"hljs-string\">\"Kulas Light\"</span>,<br>                    <span class=\"hljs-string\">\"suite\"</span>: <span class=\"hljs-string\">\"Apt. 556\"</span>,<br>                    <span class=\"hljs-string\">\"city\"</span>: <span class=\"hljs-string\">\"Gwenborough\"</span>,<br>                    <span class=\"hljs-string\">\"zipcode\"</span>: <span class=\"hljs-string\">\"92998-3874\"</span>,<br>                    <span class=\"hljs-string\">\"geo\"</span>: {<br>                        <span class=\"hljs-string\">\"lat\"</span>: <span class=\"hljs-string\">\"-37.3159\"</span>,<br>                        <span class=\"hljs-string\">\"lng\"</span>: <span class=\"hljs-string\">\"81.1496\"</span><br>                    }<br>                },<br>                <span class=\"hljs-string\">\"phone\"</span>: <span class=\"hljs-string\">\"1-770-736-8031 x56442\"</span>,<br>                <span class=\"hljs-string\">\"website\"</span>: <span class=\"hljs-string\">\"hildegard.org\"</span>,<br>                <span class=\"hljs-string\">\"company\"</span>: {<br>                    <span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"Romaguera-Crona\"</span>,<br>                    <span class=\"hljs-string\">\"catchPhrase\"</span>: <span class=\"hljs-string\">\"Multi-layered client-server neural-net\"</span>,<br>                    <span class=\"hljs-string\">\"bs\"</span>: <span class=\"hljs-string\">\"harness real-time e-markets\"</span><br>                }<br>            })<br>    })<br>    .expect(<span class=\"hljs-number\">200</span>, done);",
      "isRoot": false,
      "uuid": "d19f037e-ea27-4e52-9d78-6fa413cd84d9",
      "parentUUID": "eff3be09-1a0c-45e9-ae06-a0650eacb1cf",
      "skipped": false
    },
    {
      "title": "should return a 200 OK status code for userId 1 using expect method",
      "fullTitle": "@get should return a 200 OK status code for userId 1 using expect method",
      "timedOut": false,
      "duration": 8,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "utils.httpGET(<span class=\"hljs-string\">'/users/1'</span>, {})<br>    .set(<span class=\"hljs-string\">'content-type'</span>, <span class=\"hljs-string\">'application/json; charset=utf-8'</span>)<br>    .expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">res</span>) </span>{<br>        <span class=\"hljs-keyword\">const</span> response = res.body;<br>        <span class=\"hljs-built_in\">console</span>.log(response);<br>        expect(response).to.have.property(<span class=\"hljs-string\">'id'</span>);<br>        expect(response).to.have.property(<span class=\"hljs-string\">'name'</span>);<br>        expect(response).to.have.property(<span class=\"hljs-string\">'username'</span>);<br>        expect(response).to.have.property(<span class=\"hljs-string\">'email'</span>);<br>        expect(response.id).to.equal(<span class=\"hljs-number\">1</span>);<br>        expect(response.email).to.equal(<span class=\"hljs-string\">'Sincere@april.biz'</span>);<br>        expect(response.address.city).to.equal(<span class=\"hljs-string\">'Gwenborough'</span>);<br><br>    })<br>    .expect(<span class=\"hljs-number\">200</span>, done);",
      "isRoot": false,
      "uuid": "ee55dd74-2382-46bb-b414-b7044ddce041",
      "parentUUID": "eff3be09-1a0c-45e9-ae06-a0650eacb1cf",
      "skipped": false
    },
    {
      "title": "should return a 200 OK status code for GET /users using expect method",
      "fullTitle": "@get should return a 200 OK status code for GET /users using expect method",
      "timedOut": false,
      "duration": 13,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "utils.httpGET(<span class=\"hljs-string\">'/users/'</span>, {})<br>    .set(<span class=\"hljs-string\">'content-type'</span>, <span class=\"hljs-string\">'application/json; charset=utf-8'</span>)<br>    .expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">res</span>) </span>{<br>        <span class=\"hljs-keyword\">const</span> response = res.body;<br>        <span class=\"hljs-built_in\">console</span>.log(response);<br>    })<br>    .expect(<span class=\"hljs-number\">200</span>, done);",
      "isRoot": false,
      "uuid": "5009b730-8302-42a2-9217-c347fd503096",
      "parentUUID": "eff3be09-1a0c-45e9-ae06-a0650eacb1cf",
      "skipped": false
    }
  ],
  "allFailures": [],
  "copyrightYear": 2016
}