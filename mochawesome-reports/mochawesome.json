{
  "reportTitle": "apiAutomatedTest",
  "stats": {
    "suites": 7,
    "tests": 16,
    "passes": 16,
    "pending": 0,
    "failures": 0,
    "start": "2016-11-29T22:06:40.068Z",
    "end": "2016-11-29T22:06:40.358Z",
    "duration": 290,
    "testsRegistered": 16,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false,
    "passPercentClass": "success",
    "pendingPercentClass": "danger"
  },
  "suites": {
    "title": "",
    "suites": [
      {
        "title": "@get",
        "suites": [],
        "tests": [
          {
            "title": "should return a 200 OK status code for Album ID 1",
            "fullTitle": "@get should return a 200 OK status code for Album ID 1",
            "timedOut": false,
            "duration": 32,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "utils.httpGET(<span class=\"hljs-string\">'/albums/1'</span>, {})<br>    .set(<span class=\"hljs-string\">'content-type'</span>, <span class=\"hljs-string\">'application/json; charset=utf-8'</span>)<br>    .expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">res</span>) </span>{<br>        <span class=\"hljs-keyword\">const</span> response = res.body;<br>        <span class=\"hljs-comment\">//console.log(response);</span><br>        <span class=\"hljs-keyword\">return</span> assert.deepEqual(response,<br>            {<br>                <span class=\"hljs-string\">\"userId\"</span>: <span class=\"hljs-number\">1</span>,<br>                <span class=\"hljs-string\">\"id\"</span>: <span class=\"hljs-number\">1</span>,<br>                <span class=\"hljs-string\">\"title\"</span>: <span class=\"hljs-string\">\"quidem molestiae enim\"</span><br>            })<br>    })<br>    .expect(<span class=\"hljs-number\">200</span>, done);",
            "isRoot": false,
            "uuid": "0cfb2974-96c5-4b51-9030-eb742ffa7665",
            "parentUUID": "ce11fcd1-c8e4-4697-925b-cbb7c3b2a53c",
            "skipped": false
          },
          {
            "title": "should return a 200 OK status code for Album ID 1 using expect method",
            "fullTitle": "@get should return a 200 OK status code for Album ID 1 using expect method",
            "timedOut": false,
            "duration": 14,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "utils.httpGET(<span class=\"hljs-string\">'/albums/1'</span>, {})<br>    .set(<span class=\"hljs-string\">'content-type'</span>, <span class=\"hljs-string\">'application/json; charset=utf-8'</span>)<br>    .expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">res</span>) </span>{<br>         <span class=\"hljs-keyword\">const</span> response = res.body;<br>        <span class=\"hljs-comment\">// console.log(response);</span><br>        expect(response).to.have.property(<span class=\"hljs-string\">'userId'</span>);<br>        expect(response).to.have.property(<span class=\"hljs-string\">'id'</span>);<br>        expect(response).to.have.property(<span class=\"hljs-string\">'title'</span>);<br>        expect(response.id).to.equal(<span class=\"hljs-number\">1</span>);<br>        expect(response.userId).to.equal(<span class=\"hljs-number\">1</span>);<br>        expect(response.title).to.equal(<span class=\"hljs-string\">'quidem molestiae enim'</span>);<br><br>    })<br>    .expect(<span class=\"hljs-number\">200</span>, done);",
            "isRoot": false,
            "uuid": "29a5cd23-c81e-4dea-aa22-ab06b572c622",
            "parentUUID": "ce11fcd1-c8e4-4697-925b-cbb7c3b2a53c",
            "skipped": false
          },
          {
            "title": "should return a 200 OK status code for GET All /albums using expect method",
            "fullTitle": "@get should return a 200 OK status code for GET All /albums using expect method",
            "timedOut": false,
            "duration": 14,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "utils.httpGET(<span class=\"hljs-string\">'/albums/'</span>, {})<br>    .set(<span class=\"hljs-string\">'content-type'</span>, <span class=\"hljs-string\">'application/json; charset=utf-8'</span>)<br>    <span class=\"hljs-comment\">// .expect(function (res) {</span><br>    <span class=\"hljs-comment\">//     const response = res.body;</span><br>    <span class=\"hljs-comment\">//     console.log(response);</span><br>    <span class=\"hljs-comment\">// })</span><br>    .expect(<span class=\"hljs-number\">200</span>, done);",
            "isRoot": false,
            "uuid": "d3d75a52-29fd-40a1-9f09-a292ebd876ef",
            "parentUUID": "ce11fcd1-c8e4-4697-925b-cbb7c3b2a53c",
            "skipped": false
          }
        ],
        "pending": [],
        "root": false,
        "_timeout": 3000,
        "file": "/test/albums/GET/getALBUM_200.js",
        "uuid": "ce11fcd1-c8e4-4697-925b-cbb7c3b2a53c",
        "fullFile": "/Users/garsenius/github/apiAutomatedTest/test/albums/GET/getALBUM_200.js",
        "passes": [
          {
            "title": "should return a 200 OK status code for Album ID 1",
            "fullTitle": "@get should return a 200 OK status code for Album ID 1",
            "timedOut": false,
            "duration": 32,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "utils.httpGET(<span class=\"hljs-string\">'/albums/1'</span>, {})<br>    .set(<span class=\"hljs-string\">'content-type'</span>, <span class=\"hljs-string\">'application/json; charset=utf-8'</span>)<br>    .expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">res</span>) </span>{<br>        <span class=\"hljs-keyword\">const</span> response = res.body;<br>        <span class=\"hljs-comment\">//console.log(response);</span><br>        <span class=\"hljs-keyword\">return</span> assert.deepEqual(response,<br>            {<br>                <span class=\"hljs-string\">\"userId\"</span>: <span class=\"hljs-number\">1</span>,<br>                <span class=\"hljs-string\">\"id\"</span>: <span class=\"hljs-number\">1</span>,<br>                <span class=\"hljs-string\">\"title\"</span>: <span class=\"hljs-string\">\"quidem molestiae enim\"</span><br>            })<br>    })<br>    .expect(<span class=\"hljs-number\">200</span>, done);",
            "isRoot": false,
            "uuid": "0cfb2974-96c5-4b51-9030-eb742ffa7665",
            "parentUUID": "ce11fcd1-c8e4-4697-925b-cbb7c3b2a53c",
            "skipped": false
          },
          {
            "title": "should return a 200 OK status code for Album ID 1 using expect method",
            "fullTitle": "@get should return a 200 OK status code for Album ID 1 using expect method",
            "timedOut": false,
            "duration": 14,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "utils.httpGET(<span class=\"hljs-string\">'/albums/1'</span>, {})<br>    .set(<span class=\"hljs-string\">'content-type'</span>, <span class=\"hljs-string\">'application/json; charset=utf-8'</span>)<br>    .expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">res</span>) </span>{<br>         <span class=\"hljs-keyword\">const</span> response = res.body;<br>        <span class=\"hljs-comment\">// console.log(response);</span><br>        expect(response).to.have.property(<span class=\"hljs-string\">'userId'</span>);<br>        expect(response).to.have.property(<span class=\"hljs-string\">'id'</span>);<br>        expect(response).to.have.property(<span class=\"hljs-string\">'title'</span>);<br>        expect(response.id).to.equal(<span class=\"hljs-number\">1</span>);<br>        expect(response.userId).to.equal(<span class=\"hljs-number\">1</span>);<br>        expect(response.title).to.equal(<span class=\"hljs-string\">'quidem molestiae enim'</span>);<br><br>    })<br>    .expect(<span class=\"hljs-number\">200</span>, done);",
            "isRoot": false,
            "uuid": "29a5cd23-c81e-4dea-aa22-ab06b572c622",
            "parentUUID": "ce11fcd1-c8e4-4697-925b-cbb7c3b2a53c",
            "skipped": false
          },
          {
            "title": "should return a 200 OK status code for GET All /albums using expect method",
            "fullTitle": "@get should return a 200 OK status code for GET All /albums using expect method",
            "timedOut": false,
            "duration": 14,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "utils.httpGET(<span class=\"hljs-string\">'/albums/'</span>, {})<br>    .set(<span class=\"hljs-string\">'content-type'</span>, <span class=\"hljs-string\">'application/json; charset=utf-8'</span>)<br>    <span class=\"hljs-comment\">// .expect(function (res) {</span><br>    <span class=\"hljs-comment\">//     const response = res.body;</span><br>    <span class=\"hljs-comment\">//     console.log(response);</span><br>    <span class=\"hljs-comment\">// })</span><br>    .expect(<span class=\"hljs-number\">200</span>, done);",
            "isRoot": false,
            "uuid": "d3d75a52-29fd-40a1-9f09-a292ebd876ef",
            "parentUUID": "ce11fcd1-c8e4-4697-925b-cbb7c3b2a53c",
            "skipped": false
          }
        ],
        "failures": [],
        "skipped": [],
        "hasTests": true,
        "hasSuites": false,
        "totalTests": 3,
        "totalPasses": 3,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": true,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 60
      },
      {
        "title": "@get",
        "suites": [],
        "tests": [
          {
            "title": "should return a 200 OK status code for Comment ID 1",
            "fullTitle": "@get should return a 200 OK status code for Comment ID 1",
            "timedOut": false,
            "duration": 11,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "utils.httpGET(<span class=\"hljs-string\">'/comments/1'</span>, {})<br>    .set(<span class=\"hljs-string\">'content-type'</span>, <span class=\"hljs-string\">'application/json; charset=utf-8'</span>)<br>    .expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">res</span>) </span>{<br>        <span class=\"hljs-keyword\">const</span> response = res.body;<br>        <span class=\"hljs-comment\">//console.log(response);</span><br>        <span class=\"hljs-keyword\">return</span> assert.deepEqual(response,<br>            {<br>                <span class=\"hljs-string\">\"postId\"</span>: <span class=\"hljs-number\">1</span>,<br>                <span class=\"hljs-string\">\"id\"</span>: <span class=\"hljs-number\">1</span>,<br>                <span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"id labore ex et quam laborum\"</span>,<br>                <span class=\"hljs-string\">\"email\"</span>: <span class=\"hljs-string\">\"Eliseo@gardner.biz\"</span>,<br>                <span class=\"hljs-string\">\"body\"</span>: <span class=\"hljs-string\">\"laudantium enim quasi est quidem magnam voluptate ipsam eos\\ntempora quo necessitatibus\\ndolor quam autem quasi\\nreiciendis et nam sapiente accusantium\"</span><br>            })<br>    })<br>    .expect(<span class=\"hljs-number\">200</span>, done);",
            "isRoot": false,
            "uuid": "8118f63f-3ef6-439f-836b-97a01361e67c",
            "parentUUID": "0b114e8e-6b7a-49e0-a7c0-9d7991d98707",
            "skipped": false
          },
          {
            "title": "should return a 200 OK status code for comment ID 1 using expect method",
            "fullTitle": "@get should return a 200 OK status code for comment ID 1 using expect method",
            "timedOut": false,
            "duration": 9,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "utils.httpGET(<span class=\"hljs-string\">'/comments/1'</span>, {})<br>    .set(<span class=\"hljs-string\">'content-type'</span>, <span class=\"hljs-string\">'application/json; charset=utf-8'</span>)<br>    .expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">res</span>) </span>{<br>        <span class=\"hljs-keyword\">const</span> response = res.body;<br>        <span class=\"hljs-comment\">//console.log(response);</span><br>        expect(response).to.have.property(<span class=\"hljs-string\">'postId'</span>);<br>        expect(response).to.have.property(<span class=\"hljs-string\">'id'</span>);<br>        expect(response).to.have.property(<span class=\"hljs-string\">'name'</span>);<br>        expect(response).to.have.property(<span class=\"hljs-string\">'email'</span>);<br>        expect(response).to.have.property(<span class=\"hljs-string\">'body'</span>);<br>        expect(response.id).to.equal(<span class=\"hljs-number\">1</span>);<br>        expect(response.email).to.equal(<span class=\"hljs-string\">'Eliseo@gardner.biz'</span>);<br>        expect(response.name).to.equal(<span class=\"hljs-string\">'id labore ex et quam laborum'</span>);<br><br>    })<br>    .expect(<span class=\"hljs-number\">200</span>, done);",
            "isRoot": false,
            "uuid": "26c2a215-df4c-416d-bfef-39bc1bb88a32",
            "parentUUID": "0b114e8e-6b7a-49e0-a7c0-9d7991d98707",
            "skipped": false
          },
          {
            "title": "should return a 200 OK status code for GET All /comments using expect method",
            "fullTitle": "@get should return a 200 OK status code for GET All /comments using expect method",
            "timedOut": false,
            "duration": 30,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "utils.httpGET(<span class=\"hljs-string\">'/comments/'</span>, {})<br>    .set(<span class=\"hljs-string\">'content-type'</span>, <span class=\"hljs-string\">'application/json; charset=utf-8'</span>)<br>    <span class=\"hljs-comment\">// .expect(function (res) {</span><br>    <span class=\"hljs-comment\">//     const response = res.body;</span><br>    <span class=\"hljs-comment\">//     console.log(response);</span><br>    <span class=\"hljs-comment\">// })</span><br>    .expect(<span class=\"hljs-number\">200</span>, done);",
            "isRoot": false,
            "uuid": "7c13782e-48d8-4b54-ada7-97491bd7215d",
            "parentUUID": "0b114e8e-6b7a-49e0-a7c0-9d7991d98707",
            "skipped": false
          }
        ],
        "pending": [],
        "root": false,
        "_timeout": 3000,
        "file": "/test/comments/GET/getCOMMENT_200.js",
        "uuid": "0b114e8e-6b7a-49e0-a7c0-9d7991d98707",
        "fullFile": "/Users/garsenius/github/apiAutomatedTest/test/comments/GET/getCOMMENT_200.js",
        "passes": [
          {
            "title": "should return a 200 OK status code for Comment ID 1",
            "fullTitle": "@get should return a 200 OK status code for Comment ID 1",
            "timedOut": false,
            "duration": 11,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "utils.httpGET(<span class=\"hljs-string\">'/comments/1'</span>, {})<br>    .set(<span class=\"hljs-string\">'content-type'</span>, <span class=\"hljs-string\">'application/json; charset=utf-8'</span>)<br>    .expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">res</span>) </span>{<br>        <span class=\"hljs-keyword\">const</span> response = res.body;<br>        <span class=\"hljs-comment\">//console.log(response);</span><br>        <span class=\"hljs-keyword\">return</span> assert.deepEqual(response,<br>            {<br>                <span class=\"hljs-string\">\"postId\"</span>: <span class=\"hljs-number\">1</span>,<br>                <span class=\"hljs-string\">\"id\"</span>: <span class=\"hljs-number\">1</span>,<br>                <span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"id labore ex et quam laborum\"</span>,<br>                <span class=\"hljs-string\">\"email\"</span>: <span class=\"hljs-string\">\"Eliseo@gardner.biz\"</span>,<br>                <span class=\"hljs-string\">\"body\"</span>: <span class=\"hljs-string\">\"laudantium enim quasi est quidem magnam voluptate ipsam eos\\ntempora quo necessitatibus\\ndolor quam autem quasi\\nreiciendis et nam sapiente accusantium\"</span><br>            })<br>    })<br>    .expect(<span class=\"hljs-number\">200</span>, done);",
            "isRoot": false,
            "uuid": "8118f63f-3ef6-439f-836b-97a01361e67c",
            "parentUUID": "0b114e8e-6b7a-49e0-a7c0-9d7991d98707",
            "skipped": false
          },
          {
            "title": "should return a 200 OK status code for comment ID 1 using expect method",
            "fullTitle": "@get should return a 200 OK status code for comment ID 1 using expect method",
            "timedOut": false,
            "duration": 9,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "utils.httpGET(<span class=\"hljs-string\">'/comments/1'</span>, {})<br>    .set(<span class=\"hljs-string\">'content-type'</span>, <span class=\"hljs-string\">'application/json; charset=utf-8'</span>)<br>    .expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">res</span>) </span>{<br>        <span class=\"hljs-keyword\">const</span> response = res.body;<br>        <span class=\"hljs-comment\">//console.log(response);</span><br>        expect(response).to.have.property(<span class=\"hljs-string\">'postId'</span>);<br>        expect(response).to.have.property(<span class=\"hljs-string\">'id'</span>);<br>        expect(response).to.have.property(<span class=\"hljs-string\">'name'</span>);<br>        expect(response).to.have.property(<span class=\"hljs-string\">'email'</span>);<br>        expect(response).to.have.property(<span class=\"hljs-string\">'body'</span>);<br>        expect(response.id).to.equal(<span class=\"hljs-number\">1</span>);<br>        expect(response.email).to.equal(<span class=\"hljs-string\">'Eliseo@gardner.biz'</span>);<br>        expect(response.name).to.equal(<span class=\"hljs-string\">'id labore ex et quam laborum'</span>);<br><br>    })<br>    .expect(<span class=\"hljs-number\">200</span>, done);",
            "isRoot": false,
            "uuid": "26c2a215-df4c-416d-bfef-39bc1bb88a32",
            "parentUUID": "0b114e8e-6b7a-49e0-a7c0-9d7991d98707",
            "skipped": false
          },
          {
            "title": "should return a 200 OK status code for GET All /comments using expect method",
            "fullTitle": "@get should return a 200 OK status code for GET All /comments using expect method",
            "timedOut": false,
            "duration": 30,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "utils.httpGET(<span class=\"hljs-string\">'/comments/'</span>, {})<br>    .set(<span class=\"hljs-string\">'content-type'</span>, <span class=\"hljs-string\">'application/json; charset=utf-8'</span>)<br>    <span class=\"hljs-comment\">// .expect(function (res) {</span><br>    <span class=\"hljs-comment\">//     const response = res.body;</span><br>    <span class=\"hljs-comment\">//     console.log(response);</span><br>    <span class=\"hljs-comment\">// })</span><br>    .expect(<span class=\"hljs-number\">200</span>, done);",
            "isRoot": false,
            "uuid": "7c13782e-48d8-4b54-ada7-97491bd7215d",
            "parentUUID": "0b114e8e-6b7a-49e0-a7c0-9d7991d98707",
            "skipped": false
          }
        ],
        "failures": [],
        "skipped": [],
        "hasTests": true,
        "hasSuites": false,
        "totalTests": 3,
        "totalPasses": 3,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": true,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 50
      },
      {
        "title": "@delete",
        "suites": [],
        "tests": [
          {
            "title": "should return a 200 code after deleting fake postId 100",
            "fullTitle": "@delete should return a 200 code after deleting fake postId 100",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "utils.httpDELETE(<span class=\"hljs-string\">'/posts/101'</span>, {})<br>   .send(<br>       {<br>           id: <span class=\"hljs-number\">101</span>,<br>           title: <span class=\"hljs-string\">'foo'</span>,<br>           body: <span class=\"hljs-string\">'bar'</span>,<br>           userId: <span class=\"hljs-number\">1</span><br>       }<br>   )<br>   .expect(<span class=\"hljs-string\">'content-type'</span>, <span class=\"hljs-string\">'application/json; charset=utf-8'</span>)<br>   .expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">res</span>) </span>{<br>       <span class=\"hljs-keyword\">const</span> response = res.body;<br>       <span class=\"hljs-comment\">//console.log(response)</span><br>       <span class=\"hljs-keyword\">return</span> assert.deepEqual(response,<br>           {} <span class=\"hljs-comment\">//return empty response</span><br>       );<br>   })<br>    .expect(<span class=\"hljs-number\">200</span>);",
            "isRoot": false,
            "uuid": "5b8568c4-0def-4508-9e6d-bc79e1a120cd",
            "parentUUID": "8ddaea0b-cc60-440d-b408-4cecd89ba3bb",
            "skipped": false
          }
        ],
        "pending": [],
        "root": false,
        "_timeout": 3000,
        "file": "/test/posts/DELETE/deletePOST_200.js",
        "uuid": "8ddaea0b-cc60-440d-b408-4cecd89ba3bb",
        "fullFile": "/Users/garsenius/github/apiAutomatedTest/test/posts/DELETE/deletePOST_200.js",
        "passes": [
          {
            "title": "should return a 200 code after deleting fake postId 100",
            "fullTitle": "@delete should return a 200 code after deleting fake postId 100",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "utils.httpDELETE(<span class=\"hljs-string\">'/posts/101'</span>, {})<br>   .send(<br>       {<br>           id: <span class=\"hljs-number\">101</span>,<br>           title: <span class=\"hljs-string\">'foo'</span>,<br>           body: <span class=\"hljs-string\">'bar'</span>,<br>           userId: <span class=\"hljs-number\">1</span><br>       }<br>   )<br>   .expect(<span class=\"hljs-string\">'content-type'</span>, <span class=\"hljs-string\">'application/json; charset=utf-8'</span>)<br>   .expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">res</span>) </span>{<br>       <span class=\"hljs-keyword\">const</span> response = res.body;<br>       <span class=\"hljs-comment\">//console.log(response)</span><br>       <span class=\"hljs-keyword\">return</span> assert.deepEqual(response,<br>           {} <span class=\"hljs-comment\">//return empty response</span><br>       );<br>   })<br>    .expect(<span class=\"hljs-number\">200</span>);",
            "isRoot": false,
            "uuid": "5b8568c4-0def-4508-9e6d-bc79e1a120cd",
            "parentUUID": "8ddaea0b-cc60-440d-b408-4cecd89ba3bb",
            "skipped": false
          }
        ],
        "failures": [],
        "skipped": [],
        "hasTests": true,
        "hasSuites": false,
        "totalTests": 1,
        "totalPasses": 1,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": true,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 1
      },
      {
        "title": "@get",
        "suites": [],
        "tests": [
          {
            "title": "should return a 200 OK status code for PostID 1",
            "fullTitle": "@get should return a 200 OK status code for PostID 1",
            "timedOut": false,
            "duration": 8,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "utils.httpGET(<span class=\"hljs-string\">'/posts/1'</span>, {})<br>    .set(<span class=\"hljs-string\">'content-type'</span>, <span class=\"hljs-string\">'application/json; charset=utf-8'</span>)<br>    .expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">res</span>) </span>{<br>        <span class=\"hljs-keyword\">const</span> response = res.body;<br>        <span class=\"hljs-comment\">//console.log(response);</span><br>        <span class=\"hljs-keyword\">return</span> assert.deepEqual(response,<br>            {<br>                <span class=\"hljs-string\">\"id\"</span>: <span class=\"hljs-string\">\"1\"</span>,<br>                <span class=\"hljs-string\">\"title\"</span>: <span class=\"hljs-string\">\"foo\"</span>,<br>                <span class=\"hljs-string\">\"body\"</span>: <span class=\"hljs-string\">\"bar\"</span>,<br>                <span class=\"hljs-string\">\"userId\"</span>: <span class=\"hljs-number\">1</span><br>            })<br>    })<br>    .expect(<span class=\"hljs-number\">200</span>, done);",
            "isRoot": false,
            "uuid": "2aad47b3-f9ed-4e16-b85e-4491a6e6bb8f",
            "parentUUID": "c578bd52-836e-4b44-8f0b-71ebb7f603fb",
            "skipped": false
          },
          {
            "title": "should return a 200 OK status code for PostID 1 using expect method",
            "fullTitle": "@get should return a 200 OK status code for PostID 1 using expect method",
            "timedOut": false,
            "duration": 7,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "utils.httpGET(<span class=\"hljs-string\">'/posts/1'</span>, {})<br>    .set(<span class=\"hljs-string\">'content-type'</span>, <span class=\"hljs-string\">'application/json; charset=utf-8'</span>)<br>    .expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">res</span>) </span>{<br>        <span class=\"hljs-keyword\">const</span> response = res.body;<br>        <span class=\"hljs-comment\">//console.log(response);</span><br>        expect(response).to.have.property(<span class=\"hljs-string\">'id'</span>);<br>        expect(response).to.have.property(<span class=\"hljs-string\">'title'</span>);<br>        expect(response).to.have.property(<span class=\"hljs-string\">'body'</span>);<br>        expect(response).to.have.property(<span class=\"hljs-string\">'userId'</span>);<br>        expect(response.id).to.equal(<span class=\"hljs-string\">'1'</span>);<br>    })<br>    .expect(<span class=\"hljs-number\">200</span>, done);",
            "isRoot": false,
            "uuid": "9a107641-ae90-4a5a-8470-dad260f2b23b",
            "parentUUID": "c578bd52-836e-4b44-8f0b-71ebb7f603fb",
            "skipped": false
          },
          {
            "title": "should return a 200 OK status code for PostID 1 using expect method",
            "fullTitle": "@get should return a 200 OK status code for PostID 1 using expect method",
            "timedOut": false,
            "duration": 16,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "utils.httpGET(<span class=\"hljs-string\">'/posts/'</span>, {})<br>    .set(<span class=\"hljs-string\">'content-type'</span>, <span class=\"hljs-string\">'application/json; charset=utf-8'</span>)<br>    <span class=\"hljs-comment\">// .expect(function (res) {</span><br>    <span class=\"hljs-comment\">//     const response = res.body;</span><br>    <span class=\"hljs-comment\">//     console.log(response);</span><br>    <span class=\"hljs-comment\">// })</span><br>    .expect(<span class=\"hljs-number\">200</span>, done);",
            "isRoot": false,
            "uuid": "a0320045-26fb-4ed6-832d-3e98f4b026e6",
            "parentUUID": "c578bd52-836e-4b44-8f0b-71ebb7f603fb",
            "skipped": false
          }
        ],
        "pending": [],
        "root": false,
        "_timeout": 3000,
        "file": "/test/posts/GET/getPOST_200.js",
        "uuid": "c578bd52-836e-4b44-8f0b-71ebb7f603fb",
        "fullFile": "/Users/garsenius/github/apiAutomatedTest/test/posts/GET/getPOST_200.js",
        "passes": [
          {
            "title": "should return a 200 OK status code for PostID 1",
            "fullTitle": "@get should return a 200 OK status code for PostID 1",
            "timedOut": false,
            "duration": 8,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "utils.httpGET(<span class=\"hljs-string\">'/posts/1'</span>, {})<br>    .set(<span class=\"hljs-string\">'content-type'</span>, <span class=\"hljs-string\">'application/json; charset=utf-8'</span>)<br>    .expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">res</span>) </span>{<br>        <span class=\"hljs-keyword\">const</span> response = res.body;<br>        <span class=\"hljs-comment\">//console.log(response);</span><br>        <span class=\"hljs-keyword\">return</span> assert.deepEqual(response,<br>            {<br>                <span class=\"hljs-string\">\"id\"</span>: <span class=\"hljs-string\">\"1\"</span>,<br>                <span class=\"hljs-string\">\"title\"</span>: <span class=\"hljs-string\">\"foo\"</span>,<br>                <span class=\"hljs-string\">\"body\"</span>: <span class=\"hljs-string\">\"bar\"</span>,<br>                <span class=\"hljs-string\">\"userId\"</span>: <span class=\"hljs-number\">1</span><br>            })<br>    })<br>    .expect(<span class=\"hljs-number\">200</span>, done);",
            "isRoot": false,
            "uuid": "2aad47b3-f9ed-4e16-b85e-4491a6e6bb8f",
            "parentUUID": "c578bd52-836e-4b44-8f0b-71ebb7f603fb",
            "skipped": false
          },
          {
            "title": "should return a 200 OK status code for PostID 1 using expect method",
            "fullTitle": "@get should return a 200 OK status code for PostID 1 using expect method",
            "timedOut": false,
            "duration": 7,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "utils.httpGET(<span class=\"hljs-string\">'/posts/1'</span>, {})<br>    .set(<span class=\"hljs-string\">'content-type'</span>, <span class=\"hljs-string\">'application/json; charset=utf-8'</span>)<br>    .expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">res</span>) </span>{<br>        <span class=\"hljs-keyword\">const</span> response = res.body;<br>        <span class=\"hljs-comment\">//console.log(response);</span><br>        expect(response).to.have.property(<span class=\"hljs-string\">'id'</span>);<br>        expect(response).to.have.property(<span class=\"hljs-string\">'title'</span>);<br>        expect(response).to.have.property(<span class=\"hljs-string\">'body'</span>);<br>        expect(response).to.have.property(<span class=\"hljs-string\">'userId'</span>);<br>        expect(response.id).to.equal(<span class=\"hljs-string\">'1'</span>);<br>    })<br>    .expect(<span class=\"hljs-number\">200</span>, done);",
            "isRoot": false,
            "uuid": "9a107641-ae90-4a5a-8470-dad260f2b23b",
            "parentUUID": "c578bd52-836e-4b44-8f0b-71ebb7f603fb",
            "skipped": false
          },
          {
            "title": "should return a 200 OK status code for PostID 1 using expect method",
            "fullTitle": "@get should return a 200 OK status code for PostID 1 using expect method",
            "timedOut": false,
            "duration": 16,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "utils.httpGET(<span class=\"hljs-string\">'/posts/'</span>, {})<br>    .set(<span class=\"hljs-string\">'content-type'</span>, <span class=\"hljs-string\">'application/json; charset=utf-8'</span>)<br>    <span class=\"hljs-comment\">// .expect(function (res) {</span><br>    <span class=\"hljs-comment\">//     const response = res.body;</span><br>    <span class=\"hljs-comment\">//     console.log(response);</span><br>    <span class=\"hljs-comment\">// })</span><br>    .expect(<span class=\"hljs-number\">200</span>, done);",
            "isRoot": false,
            "uuid": "a0320045-26fb-4ed6-832d-3e98f4b026e6",
            "parentUUID": "c578bd52-836e-4b44-8f0b-71ebb7f603fb",
            "skipped": false
          }
        ],
        "failures": [],
        "skipped": [],
        "hasTests": true,
        "hasSuites": false,
        "totalTests": 3,
        "totalPasses": 3,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": true,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 31
      },
      {
        "title": "@post",
        "suites": [],
        "tests": [
          {
            "title": "should return a 201 code after posting",
            "fullTitle": "@post should return a 201 code after posting",
            "timedOut": false,
            "duration": 69,
            "state": "passed",
            "speed": "medium",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "utils.httpPOST(<span class=\"hljs-string\">'/posts'</span>, {})<br>    .send({title: <span class=\"hljs-string\">'foo'</span>, body: <span class=\"hljs-string\">'bar'</span>, userId: <span class=\"hljs-number\">1</span>})<br>    .expect(<span class=\"hljs-string\">'content-type'</span>, <span class=\"hljs-string\">'application/json; charset=utf-8'</span>)<br>    .expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">res</span>) </span>{<br>        <span class=\"hljs-keyword\">const</span> response = res.body;<br>        <span class=\"hljs-comment\">//console.log(response);</span><br>        expect(response.title).to.equal(<span class=\"hljs-string\">'foo'</span>);<br>        expect(response.body).to.equal(<span class=\"hljs-string\">'bar'</span>);<br>        expect(response.userId).to.equal(<span class=\"hljs-number\">1</span>);<br>    })<br>    .expect(<span class=\"hljs-number\">201</span>, done)",
            "isRoot": false,
            "uuid": "b61ee36b-8eb6-4b03-8cf2-832dfc4be172",
            "parentUUID": "5c0ed0c8-cc21-4d43-931a-2de5a5e30a05",
            "skipped": false
          }
        ],
        "pending": [],
        "root": false,
        "_timeout": 3000,
        "file": "/test/posts/POST/postPOST_201.js",
        "uuid": "5c0ed0c8-cc21-4d43-931a-2de5a5e30a05",
        "fullFile": "/Users/garsenius/github/apiAutomatedTest/test/posts/POST/postPOST_201.js",
        "passes": [
          {
            "title": "should return a 201 code after posting",
            "fullTitle": "@post should return a 201 code after posting",
            "timedOut": false,
            "duration": 69,
            "state": "passed",
            "speed": "medium",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "utils.httpPOST(<span class=\"hljs-string\">'/posts'</span>, {})<br>    .send({title: <span class=\"hljs-string\">'foo'</span>, body: <span class=\"hljs-string\">'bar'</span>, userId: <span class=\"hljs-number\">1</span>})<br>    .expect(<span class=\"hljs-string\">'content-type'</span>, <span class=\"hljs-string\">'application/json; charset=utf-8'</span>)<br>    .expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">res</span>) </span>{<br>        <span class=\"hljs-keyword\">const</span> response = res.body;<br>        <span class=\"hljs-comment\">//console.log(response);</span><br>        expect(response.title).to.equal(<span class=\"hljs-string\">'foo'</span>);<br>        expect(response.body).to.equal(<span class=\"hljs-string\">'bar'</span>);<br>        expect(response.userId).to.equal(<span class=\"hljs-number\">1</span>);<br>    })<br>    .expect(<span class=\"hljs-number\">201</span>, done)",
            "isRoot": false,
            "uuid": "b61ee36b-8eb6-4b03-8cf2-832dfc4be172",
            "parentUUID": "5c0ed0c8-cc21-4d43-931a-2de5a5e30a05",
            "skipped": false
          }
        ],
        "failures": [],
        "skipped": [],
        "hasTests": true,
        "hasSuites": false,
        "totalTests": 1,
        "totalPasses": 1,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": true,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 69
      },
      {
        "title": "@put",
        "suites": [],
        "tests": [
          {
            "title": "should return a 200 code after updating postId 1",
            "fullTitle": "@put should return a 200 code after updating postId 1",
            "timedOut": false,
            "duration": 17,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "utils.httpPUT(<span class=\"hljs-string\">'/posts/20'</span>, {})<br>    .send(<br>        {<br>            id: <span class=\"hljs-number\">20</span>,<br>            title: <span class=\"hljs-string\">'candy crush'</span>,<br>            body: <span class=\"hljs-string\">'sodalicious juicy'</span>,<br>            userId: <span class=\"hljs-number\">1</span><br>        }<br>    )<br>    .expect(<span class=\"hljs-string\">'content-type'</span>, <span class=\"hljs-string\">'application/json; charset=utf-8'</span>)<br>    .expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">res</span>) </span>{<br>        <span class=\"hljs-keyword\">const</span> response = res.body;<br>        <span class=\"hljs-comment\">//console.log(response);</span><br>        expect(response.id).to.equal(<span class=\"hljs-string\">'20'</span>);<br>        expect(response.title).to.equal(<span class=\"hljs-string\">'candy crush'</span>);<br>        expect(response.body).to.equal(<span class=\"hljs-string\">'sodalicious juicy'</span>);<br>        expect(response.userId).to.equal(<span class=\"hljs-number\">1</span>);<br>    })<br>    .expect(<span class=\"hljs-number\">200</span>, done);",
            "isRoot": false,
            "uuid": "b834bed2-1109-495f-93f0-f067ec4df0ca",
            "parentUUID": "6ff5de21-3cc0-4ed7-9002-239efd827303",
            "skipped": false
          },
          {
            "title": "should return a 200 code after updating postId 1",
            "fullTitle": "@put should return a 200 code after updating postId 1",
            "timedOut": false,
            "duration": 13,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "utils.httpPUT(<span class=\"hljs-string\">'/posts/1'</span>, {})<br>    .send(<br>        {<br>            id: <span class=\"hljs-number\">1</span>,<br>            title: <span class=\"hljs-string\">'foo'</span>,<br>            body: <span class=\"hljs-string\">'bar'</span>,<br>            userId: <span class=\"hljs-number\">1</span><br>        }<br>    )<br>    .expect(<span class=\"hljs-string\">'content-type'</span>, <span class=\"hljs-string\">'application/json; charset=utf-8'</span>)<br>    .expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">res</span>) </span>{<br>        <span class=\"hljs-keyword\">const</span> response = res.body;<br>        <span class=\"hljs-comment\">//console.log(response);</span><br>        expect(response.id).to.equal(<span class=\"hljs-string\">'1'</span>);<br>        expect(response.title).to.equal(<span class=\"hljs-string\">'foo'</span>);<br>        expect(response.body).to.equal(<span class=\"hljs-string\">'bar'</span>);<br>        expect(response.userId).to.equal(<span class=\"hljs-number\">1</span>);<br>    })<br>    .expect(<span class=\"hljs-number\">200</span>, done);",
            "isRoot": false,
            "uuid": "461f4c39-b360-4cea-bd80-e13d0029cd5b",
            "parentUUID": "6ff5de21-3cc0-4ed7-9002-239efd827303",
            "skipped": false
          }
        ],
        "pending": [],
        "root": false,
        "_timeout": 3000,
        "file": "/test/posts/PUT/updatePOST_200.js",
        "uuid": "6ff5de21-3cc0-4ed7-9002-239efd827303",
        "fullFile": "/Users/garsenius/github/apiAutomatedTest/test/posts/PUT/updatePOST_200.js",
        "passes": [
          {
            "title": "should return a 200 code after updating postId 1",
            "fullTitle": "@put should return a 200 code after updating postId 1",
            "timedOut": false,
            "duration": 17,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "utils.httpPUT(<span class=\"hljs-string\">'/posts/20'</span>, {})<br>    .send(<br>        {<br>            id: <span class=\"hljs-number\">20</span>,<br>            title: <span class=\"hljs-string\">'candy crush'</span>,<br>            body: <span class=\"hljs-string\">'sodalicious juicy'</span>,<br>            userId: <span class=\"hljs-number\">1</span><br>        }<br>    )<br>    .expect(<span class=\"hljs-string\">'content-type'</span>, <span class=\"hljs-string\">'application/json; charset=utf-8'</span>)<br>    .expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">res</span>) </span>{<br>        <span class=\"hljs-keyword\">const</span> response = res.body;<br>        <span class=\"hljs-comment\">//console.log(response);</span><br>        expect(response.id).to.equal(<span class=\"hljs-string\">'20'</span>);<br>        expect(response.title).to.equal(<span class=\"hljs-string\">'candy crush'</span>);<br>        expect(response.body).to.equal(<span class=\"hljs-string\">'sodalicious juicy'</span>);<br>        expect(response.userId).to.equal(<span class=\"hljs-number\">1</span>);<br>    })<br>    .expect(<span class=\"hljs-number\">200</span>, done);",
            "isRoot": false,
            "uuid": "b834bed2-1109-495f-93f0-f067ec4df0ca",
            "parentUUID": "6ff5de21-3cc0-4ed7-9002-239efd827303",
            "skipped": false
          },
          {
            "title": "should return a 200 code after updating postId 1",
            "fullTitle": "@put should return a 200 code after updating postId 1",
            "timedOut": false,
            "duration": 13,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "utils.httpPUT(<span class=\"hljs-string\">'/posts/1'</span>, {})<br>    .send(<br>        {<br>            id: <span class=\"hljs-number\">1</span>,<br>            title: <span class=\"hljs-string\">'foo'</span>,<br>            body: <span class=\"hljs-string\">'bar'</span>,<br>            userId: <span class=\"hljs-number\">1</span><br>        }<br>    )<br>    .expect(<span class=\"hljs-string\">'content-type'</span>, <span class=\"hljs-string\">'application/json; charset=utf-8'</span>)<br>    .expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">res</span>) </span>{<br>        <span class=\"hljs-keyword\">const</span> response = res.body;<br>        <span class=\"hljs-comment\">//console.log(response);</span><br>        expect(response.id).to.equal(<span class=\"hljs-string\">'1'</span>);<br>        expect(response.title).to.equal(<span class=\"hljs-string\">'foo'</span>);<br>        expect(response.body).to.equal(<span class=\"hljs-string\">'bar'</span>);<br>        expect(response.userId).to.equal(<span class=\"hljs-number\">1</span>);<br>    })<br>    .expect(<span class=\"hljs-number\">200</span>, done);",
            "isRoot": false,
            "uuid": "461f4c39-b360-4cea-bd80-e13d0029cd5b",
            "parentUUID": "6ff5de21-3cc0-4ed7-9002-239efd827303",
            "skipped": false
          }
        ],
        "failures": [],
        "skipped": [],
        "hasTests": true,
        "hasSuites": false,
        "totalTests": 2,
        "totalPasses": 2,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": true,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 30
      },
      {
        "title": "@get",
        "suites": [],
        "tests": [
          {
            "title": "should return a 200 OK status code for User ID 1",
            "fullTitle": "@get should return a 200 OK status code for User ID 1",
            "timedOut": false,
            "duration": 13,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "utils.httpGET(<span class=\"hljs-string\">'/users/1'</span>, {})<br>    .set(<span class=\"hljs-string\">'content-type'</span>, <span class=\"hljs-string\">'application/json; charset=utf-8'</span>)<br>    .expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">res</span>) </span>{<br>        <span class=\"hljs-keyword\">const</span> response = res.body;<br>        <span class=\"hljs-comment\">//console.log(response);</span><br>        <span class=\"hljs-keyword\">return</span> assert.deepEqual(response,<br>            {<br>                <span class=\"hljs-string\">\"id\"</span>: <span class=\"hljs-number\">1</span>,<br>                <span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"Leanne Graham\"</span>,<br>                <span class=\"hljs-string\">\"username\"</span>: <span class=\"hljs-string\">\"Bret\"</span>,<br>                <span class=\"hljs-string\">\"email\"</span>: <span class=\"hljs-string\">\"Sincere@april.biz\"</span>,<br>                <span class=\"hljs-string\">\"address\"</span>: {<br>                    <span class=\"hljs-string\">\"street\"</span>: <span class=\"hljs-string\">\"Kulas Light\"</span>,<br>                    <span class=\"hljs-string\">\"suite\"</span>: <span class=\"hljs-string\">\"Apt. 556\"</span>,<br>                    <span class=\"hljs-string\">\"city\"</span>: <span class=\"hljs-string\">\"Gwenborough\"</span>,<br>                    <span class=\"hljs-string\">\"zipcode\"</span>: <span class=\"hljs-string\">\"92998-3874\"</span>,<br>                    <span class=\"hljs-string\">\"geo\"</span>: {<br>                        <span class=\"hljs-string\">\"lat\"</span>: <span class=\"hljs-string\">\"-37.3159\"</span>,<br>                        <span class=\"hljs-string\">\"lng\"</span>: <span class=\"hljs-string\">\"81.1496\"</span><br>                    }<br>                },<br>                <span class=\"hljs-string\">\"phone\"</span>: <span class=\"hljs-string\">\"1-770-736-8031 x56442\"</span>,<br>                <span class=\"hljs-string\">\"website\"</span>: <span class=\"hljs-string\">\"hildegard.org\"</span>,<br>                <span class=\"hljs-string\">\"company\"</span>: {<br>                    <span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"Romaguera-Crona\"</span>,<br>                    <span class=\"hljs-string\">\"catchPhrase\"</span>: <span class=\"hljs-string\">\"Multi-layered client-server neural-net\"</span>,<br>                    <span class=\"hljs-string\">\"bs\"</span>: <span class=\"hljs-string\">\"harness real-time e-markets\"</span><br>                }<br>            })<br>    })<br>    .expect(<span class=\"hljs-number\">200</span>, done);",
            "isRoot": false,
            "uuid": "586755d5-d0f7-46cb-b184-60b12cf5a5c6",
            "parentUUID": "8d8bbd13-8ce5-41c1-b0a2-632c8019d272",
            "skipped": false
          },
          {
            "title": "should return a 200 OK status code for userId 1 using expect method",
            "fullTitle": "@get should return a 200 OK status code for userId 1 using expect method",
            "timedOut": false,
            "duration": 12,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "utils.httpGET(<span class=\"hljs-string\">'/users/1'</span>, {})<br>    .set(<span class=\"hljs-string\">'content-type'</span>, <span class=\"hljs-string\">'application/json; charset=utf-8'</span>)<br>    .expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">res</span>) </span>{<br>        <span class=\"hljs-keyword\">const</span> response = res.body;<br>        <span class=\"hljs-comment\">//console.log(response);</span><br>        expect(response).to.have.property(<span class=\"hljs-string\">'id'</span>);<br>        expect(response).to.have.property(<span class=\"hljs-string\">'name'</span>);<br>        expect(response).to.have.property(<span class=\"hljs-string\">'username'</span>);<br>        expect(response).to.have.property(<span class=\"hljs-string\">'email'</span>);<br>        expect(response.id).to.equal(<span class=\"hljs-number\">1</span>);<br>        expect(response.email).to.equal(<span class=\"hljs-string\">'Sincere@april.biz'</span>);<br>        expect(response.address.city).to.equal(<span class=\"hljs-string\">'Gwenborough'</span>);<br><br>    })<br>    .expect(<span class=\"hljs-number\">200</span>, done);",
            "isRoot": false,
            "uuid": "d21ea7a6-9777-4928-a9b3-ab8974b8150a",
            "parentUUID": "8d8bbd13-8ce5-41c1-b0a2-632c8019d272",
            "skipped": false
          },
          {
            "title": "should return a 200 OK status code for GET All /users using expect method",
            "fullTitle": "@get should return a 200 OK status code for GET All /users using expect method",
            "timedOut": false,
            "duration": 11,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "utils.httpGET(<span class=\"hljs-string\">'/users/'</span>, {})<br>    .set(<span class=\"hljs-string\">'content-type'</span>, <span class=\"hljs-string\">'application/json; charset=utf-8'</span>)<br>    <span class=\"hljs-comment\">// .expect(function (res) {</span><br>    <span class=\"hljs-comment\">//     const response = res.body;</span><br>    <span class=\"hljs-comment\">//     console.log(response);</span><br>    <span class=\"hljs-comment\">// })</span><br>    .expect(<span class=\"hljs-number\">200</span>, done);",
            "isRoot": false,
            "uuid": "f3e5eb06-9928-49b4-9040-7dcf12180666",
            "parentUUID": "8d8bbd13-8ce5-41c1-b0a2-632c8019d272",
            "skipped": false
          }
        ],
        "pending": [],
        "root": false,
        "_timeout": 3000,
        "file": "/test/users/GET/getUSER_200.js",
        "uuid": "8d8bbd13-8ce5-41c1-b0a2-632c8019d272",
        "fullFile": "/Users/garsenius/github/apiAutomatedTest/test/users/GET/getUSER_200.js",
        "passes": [
          {
            "title": "should return a 200 OK status code for User ID 1",
            "fullTitle": "@get should return a 200 OK status code for User ID 1",
            "timedOut": false,
            "duration": 13,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "utils.httpGET(<span class=\"hljs-string\">'/users/1'</span>, {})<br>    .set(<span class=\"hljs-string\">'content-type'</span>, <span class=\"hljs-string\">'application/json; charset=utf-8'</span>)<br>    .expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">res</span>) </span>{<br>        <span class=\"hljs-keyword\">const</span> response = res.body;<br>        <span class=\"hljs-comment\">//console.log(response);</span><br>        <span class=\"hljs-keyword\">return</span> assert.deepEqual(response,<br>            {<br>                <span class=\"hljs-string\">\"id\"</span>: <span class=\"hljs-number\">1</span>,<br>                <span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"Leanne Graham\"</span>,<br>                <span class=\"hljs-string\">\"username\"</span>: <span class=\"hljs-string\">\"Bret\"</span>,<br>                <span class=\"hljs-string\">\"email\"</span>: <span class=\"hljs-string\">\"Sincere@april.biz\"</span>,<br>                <span class=\"hljs-string\">\"address\"</span>: {<br>                    <span class=\"hljs-string\">\"street\"</span>: <span class=\"hljs-string\">\"Kulas Light\"</span>,<br>                    <span class=\"hljs-string\">\"suite\"</span>: <span class=\"hljs-string\">\"Apt. 556\"</span>,<br>                    <span class=\"hljs-string\">\"city\"</span>: <span class=\"hljs-string\">\"Gwenborough\"</span>,<br>                    <span class=\"hljs-string\">\"zipcode\"</span>: <span class=\"hljs-string\">\"92998-3874\"</span>,<br>                    <span class=\"hljs-string\">\"geo\"</span>: {<br>                        <span class=\"hljs-string\">\"lat\"</span>: <span class=\"hljs-string\">\"-37.3159\"</span>,<br>                        <span class=\"hljs-string\">\"lng\"</span>: <span class=\"hljs-string\">\"81.1496\"</span><br>                    }<br>                },<br>                <span class=\"hljs-string\">\"phone\"</span>: <span class=\"hljs-string\">\"1-770-736-8031 x56442\"</span>,<br>                <span class=\"hljs-string\">\"website\"</span>: <span class=\"hljs-string\">\"hildegard.org\"</span>,<br>                <span class=\"hljs-string\">\"company\"</span>: {<br>                    <span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"Romaguera-Crona\"</span>,<br>                    <span class=\"hljs-string\">\"catchPhrase\"</span>: <span class=\"hljs-string\">\"Multi-layered client-server neural-net\"</span>,<br>                    <span class=\"hljs-string\">\"bs\"</span>: <span class=\"hljs-string\">\"harness real-time e-markets\"</span><br>                }<br>            })<br>    })<br>    .expect(<span class=\"hljs-number\">200</span>, done);",
            "isRoot": false,
            "uuid": "586755d5-d0f7-46cb-b184-60b12cf5a5c6",
            "parentUUID": "8d8bbd13-8ce5-41c1-b0a2-632c8019d272",
            "skipped": false
          },
          {
            "title": "should return a 200 OK status code for userId 1 using expect method",
            "fullTitle": "@get should return a 200 OK status code for userId 1 using expect method",
            "timedOut": false,
            "duration": 12,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "utils.httpGET(<span class=\"hljs-string\">'/users/1'</span>, {})<br>    .set(<span class=\"hljs-string\">'content-type'</span>, <span class=\"hljs-string\">'application/json; charset=utf-8'</span>)<br>    .expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">res</span>) </span>{<br>        <span class=\"hljs-keyword\">const</span> response = res.body;<br>        <span class=\"hljs-comment\">//console.log(response);</span><br>        expect(response).to.have.property(<span class=\"hljs-string\">'id'</span>);<br>        expect(response).to.have.property(<span class=\"hljs-string\">'name'</span>);<br>        expect(response).to.have.property(<span class=\"hljs-string\">'username'</span>);<br>        expect(response).to.have.property(<span class=\"hljs-string\">'email'</span>);<br>        expect(response.id).to.equal(<span class=\"hljs-number\">1</span>);<br>        expect(response.email).to.equal(<span class=\"hljs-string\">'Sincere@april.biz'</span>);<br>        expect(response.address.city).to.equal(<span class=\"hljs-string\">'Gwenborough'</span>);<br><br>    })<br>    .expect(<span class=\"hljs-number\">200</span>, done);",
            "isRoot": false,
            "uuid": "d21ea7a6-9777-4928-a9b3-ab8974b8150a",
            "parentUUID": "8d8bbd13-8ce5-41c1-b0a2-632c8019d272",
            "skipped": false
          },
          {
            "title": "should return a 200 OK status code for GET All /users using expect method",
            "fullTitle": "@get should return a 200 OK status code for GET All /users using expect method",
            "timedOut": false,
            "duration": 11,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "utils.httpGET(<span class=\"hljs-string\">'/users/'</span>, {})<br>    .set(<span class=\"hljs-string\">'content-type'</span>, <span class=\"hljs-string\">'application/json; charset=utf-8'</span>)<br>    <span class=\"hljs-comment\">// .expect(function (res) {</span><br>    <span class=\"hljs-comment\">//     const response = res.body;</span><br>    <span class=\"hljs-comment\">//     console.log(response);</span><br>    <span class=\"hljs-comment\">// })</span><br>    .expect(<span class=\"hljs-number\">200</span>, done);",
            "isRoot": false,
            "uuid": "f3e5eb06-9928-49b4-9040-7dcf12180666",
            "parentUUID": "8d8bbd13-8ce5-41c1-b0a2-632c8019d272",
            "skipped": false
          }
        ],
        "failures": [],
        "skipped": [],
        "hasTests": true,
        "hasSuites": false,
        "totalTests": 3,
        "totalPasses": 3,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": true,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 36
      }
    ],
    "tests": [],
    "pending": [],
    "root": true,
    "_timeout": 3000,
    "uuid": "a65a3c5b-9903-4ffc-8ed6-12e07eb47fe8",
    "fullFile": "",
    "file": "",
    "passes": [],
    "failures": [],
    "skipped": [],
    "hasTests": false,
    "hasSuites": true,
    "totalTests": 0,
    "totalPasses": 0,
    "totalFailures": 0,
    "totalPending": 0,
    "totalSkipped": 0,
    "hasPasses": false,
    "hasFailures": false,
    "hasPending": false,
    "hasSkipped": false,
    "duration": 0,
    "rootEmpty": true
  },
  "allTests": [
    {
      "title": "should return a 200 OK status code for Album ID 1",
      "fullTitle": "@get should return a 200 OK status code for Album ID 1",
      "timedOut": false,
      "duration": 32,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "utils.httpGET(<span class=\"hljs-string\">'/albums/1'</span>, {})<br>    .set(<span class=\"hljs-string\">'content-type'</span>, <span class=\"hljs-string\">'application/json; charset=utf-8'</span>)<br>    .expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">res</span>) </span>{<br>        <span class=\"hljs-keyword\">const</span> response = res.body;<br>        <span class=\"hljs-comment\">//console.log(response);</span><br>        <span class=\"hljs-keyword\">return</span> assert.deepEqual(response,<br>            {<br>                <span class=\"hljs-string\">\"userId\"</span>: <span class=\"hljs-number\">1</span>,<br>                <span class=\"hljs-string\">\"id\"</span>: <span class=\"hljs-number\">1</span>,<br>                <span class=\"hljs-string\">\"title\"</span>: <span class=\"hljs-string\">\"quidem molestiae enim\"</span><br>            })<br>    })<br>    .expect(<span class=\"hljs-number\">200</span>, done);",
      "isRoot": false,
      "uuid": "44ca2c38-2d18-4476-a0e6-5c73a676a739",
      "parentUUID": "ce11fcd1-c8e4-4697-925b-cbb7c3b2a53c",
      "skipped": false
    },
    {
      "title": "should return a 200 OK status code for Album ID 1 using expect method",
      "fullTitle": "@get should return a 200 OK status code for Album ID 1 using expect method",
      "timedOut": false,
      "duration": 14,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "utils.httpGET(<span class=\"hljs-string\">'/albums/1'</span>, {})<br>    .set(<span class=\"hljs-string\">'content-type'</span>, <span class=\"hljs-string\">'application/json; charset=utf-8'</span>)<br>    .expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">res</span>) </span>{<br>         <span class=\"hljs-keyword\">const</span> response = res.body;<br>        <span class=\"hljs-comment\">// console.log(response);</span><br>        expect(response).to.have.property(<span class=\"hljs-string\">'userId'</span>);<br>        expect(response).to.have.property(<span class=\"hljs-string\">'id'</span>);<br>        expect(response).to.have.property(<span class=\"hljs-string\">'title'</span>);<br>        expect(response.id).to.equal(<span class=\"hljs-number\">1</span>);<br>        expect(response.userId).to.equal(<span class=\"hljs-number\">1</span>);<br>        expect(response.title).to.equal(<span class=\"hljs-string\">'quidem molestiae enim'</span>);<br><br>    })<br>    .expect(<span class=\"hljs-number\">200</span>, done);",
      "isRoot": false,
      "uuid": "1e375a48-305b-44ff-bf9d-e86564adf430",
      "parentUUID": "ce11fcd1-c8e4-4697-925b-cbb7c3b2a53c",
      "skipped": false
    },
    {
      "title": "should return a 200 OK status code for GET All /albums using expect method",
      "fullTitle": "@get should return a 200 OK status code for GET All /albums using expect method",
      "timedOut": false,
      "duration": 14,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "utils.httpGET(<span class=\"hljs-string\">'/albums/'</span>, {})<br>    .set(<span class=\"hljs-string\">'content-type'</span>, <span class=\"hljs-string\">'application/json; charset=utf-8'</span>)<br>    <span class=\"hljs-comment\">// .expect(function (res) {</span><br>    <span class=\"hljs-comment\">//     const response = res.body;</span><br>    <span class=\"hljs-comment\">//     console.log(response);</span><br>    <span class=\"hljs-comment\">// })</span><br>    .expect(<span class=\"hljs-number\">200</span>, done);",
      "isRoot": false,
      "uuid": "52e6b5c2-ac14-4e7d-acc9-ff1f646cd960",
      "parentUUID": "ce11fcd1-c8e4-4697-925b-cbb7c3b2a53c",
      "skipped": false
    },
    {
      "title": "should return a 200 OK status code for Comment ID 1",
      "fullTitle": "@get should return a 200 OK status code for Comment ID 1",
      "timedOut": false,
      "duration": 11,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "utils.httpGET(<span class=\"hljs-string\">'/comments/1'</span>, {})<br>    .set(<span class=\"hljs-string\">'content-type'</span>, <span class=\"hljs-string\">'application/json; charset=utf-8'</span>)<br>    .expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">res</span>) </span>{<br>        <span class=\"hljs-keyword\">const</span> response = res.body;<br>        <span class=\"hljs-comment\">//console.log(response);</span><br>        <span class=\"hljs-keyword\">return</span> assert.deepEqual(response,<br>            {<br>                <span class=\"hljs-string\">\"postId\"</span>: <span class=\"hljs-number\">1</span>,<br>                <span class=\"hljs-string\">\"id\"</span>: <span class=\"hljs-number\">1</span>,<br>                <span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"id labore ex et quam laborum\"</span>,<br>                <span class=\"hljs-string\">\"email\"</span>: <span class=\"hljs-string\">\"Eliseo@gardner.biz\"</span>,<br>                <span class=\"hljs-string\">\"body\"</span>: <span class=\"hljs-string\">\"laudantium enim quasi est quidem magnam voluptate ipsam eos\\ntempora quo necessitatibus\\ndolor quam autem quasi\\nreiciendis et nam sapiente accusantium\"</span><br>            })<br>    })<br>    .expect(<span class=\"hljs-number\">200</span>, done);",
      "isRoot": false,
      "uuid": "b5a5b2a4-a42f-4a73-b055-890e16131963",
      "parentUUID": "0b114e8e-6b7a-49e0-a7c0-9d7991d98707",
      "skipped": false
    },
    {
      "title": "should return a 200 OK status code for comment ID 1 using expect method",
      "fullTitle": "@get should return a 200 OK status code for comment ID 1 using expect method",
      "timedOut": false,
      "duration": 9,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "utils.httpGET(<span class=\"hljs-string\">'/comments/1'</span>, {})<br>    .set(<span class=\"hljs-string\">'content-type'</span>, <span class=\"hljs-string\">'application/json; charset=utf-8'</span>)<br>    .expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">res</span>) </span>{<br>        <span class=\"hljs-keyword\">const</span> response = res.body;<br>        <span class=\"hljs-comment\">//console.log(response);</span><br>        expect(response).to.have.property(<span class=\"hljs-string\">'postId'</span>);<br>        expect(response).to.have.property(<span class=\"hljs-string\">'id'</span>);<br>        expect(response).to.have.property(<span class=\"hljs-string\">'name'</span>);<br>        expect(response).to.have.property(<span class=\"hljs-string\">'email'</span>);<br>        expect(response).to.have.property(<span class=\"hljs-string\">'body'</span>);<br>        expect(response.id).to.equal(<span class=\"hljs-number\">1</span>);<br>        expect(response.email).to.equal(<span class=\"hljs-string\">'Eliseo@gardner.biz'</span>);<br>        expect(response.name).to.equal(<span class=\"hljs-string\">'id labore ex et quam laborum'</span>);<br><br>    })<br>    .expect(<span class=\"hljs-number\">200</span>, done);",
      "isRoot": false,
      "uuid": "86395917-20ea-4913-9af6-e20aba607940",
      "parentUUID": "0b114e8e-6b7a-49e0-a7c0-9d7991d98707",
      "skipped": false
    },
    {
      "title": "should return a 200 OK status code for GET All /comments using expect method",
      "fullTitle": "@get should return a 200 OK status code for GET All /comments using expect method",
      "timedOut": false,
      "duration": 30,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "utils.httpGET(<span class=\"hljs-string\">'/comments/'</span>, {})<br>    .set(<span class=\"hljs-string\">'content-type'</span>, <span class=\"hljs-string\">'application/json; charset=utf-8'</span>)<br>    <span class=\"hljs-comment\">// .expect(function (res) {</span><br>    <span class=\"hljs-comment\">//     const response = res.body;</span><br>    <span class=\"hljs-comment\">//     console.log(response);</span><br>    <span class=\"hljs-comment\">// })</span><br>    .expect(<span class=\"hljs-number\">200</span>, done);",
      "isRoot": false,
      "uuid": "693d6383-6002-4673-9bb8-ccbfc0c7a931",
      "parentUUID": "0b114e8e-6b7a-49e0-a7c0-9d7991d98707",
      "skipped": false
    },
    {
      "title": "should return a 200 code after deleting fake postId 100",
      "fullTitle": "@delete should return a 200 code after deleting fake postId 100",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "utils.httpDELETE(<span class=\"hljs-string\">'/posts/101'</span>, {})<br>   .send(<br>       {<br>           id: <span class=\"hljs-number\">101</span>,<br>           title: <span class=\"hljs-string\">'foo'</span>,<br>           body: <span class=\"hljs-string\">'bar'</span>,<br>           userId: <span class=\"hljs-number\">1</span><br>       }<br>   )<br>   .expect(<span class=\"hljs-string\">'content-type'</span>, <span class=\"hljs-string\">'application/json; charset=utf-8'</span>)<br>   .expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">res</span>) </span>{<br>       <span class=\"hljs-keyword\">const</span> response = res.body;<br>       <span class=\"hljs-comment\">//console.log(response)</span><br>       <span class=\"hljs-keyword\">return</span> assert.deepEqual(response,<br>           {} <span class=\"hljs-comment\">//return empty response</span><br>       );<br>   })<br>    .expect(<span class=\"hljs-number\">200</span>);",
      "isRoot": false,
      "uuid": "57c6900f-aa80-4952-872e-5a5a4637a06d",
      "parentUUID": "8ddaea0b-cc60-440d-b408-4cecd89ba3bb",
      "skipped": false
    },
    {
      "title": "should return a 200 OK status code for PostID 1",
      "fullTitle": "@get should return a 200 OK status code for PostID 1",
      "timedOut": false,
      "duration": 8,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "utils.httpGET(<span class=\"hljs-string\">'/posts/1'</span>, {})<br>    .set(<span class=\"hljs-string\">'content-type'</span>, <span class=\"hljs-string\">'application/json; charset=utf-8'</span>)<br>    .expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">res</span>) </span>{<br>        <span class=\"hljs-keyword\">const</span> response = res.body;<br>        <span class=\"hljs-comment\">//console.log(response);</span><br>        <span class=\"hljs-keyword\">return</span> assert.deepEqual(response,<br>            {<br>                <span class=\"hljs-string\">\"id\"</span>: <span class=\"hljs-string\">\"1\"</span>,<br>                <span class=\"hljs-string\">\"title\"</span>: <span class=\"hljs-string\">\"foo\"</span>,<br>                <span class=\"hljs-string\">\"body\"</span>: <span class=\"hljs-string\">\"bar\"</span>,<br>                <span class=\"hljs-string\">\"userId\"</span>: <span class=\"hljs-number\">1</span><br>            })<br>    })<br>    .expect(<span class=\"hljs-number\">200</span>, done);",
      "isRoot": false,
      "uuid": "084ba20f-ad18-4e82-994e-d3597e4a24ca",
      "parentUUID": "c578bd52-836e-4b44-8f0b-71ebb7f603fb",
      "skipped": false
    },
    {
      "title": "should return a 200 OK status code for PostID 1 using expect method",
      "fullTitle": "@get should return a 200 OK status code for PostID 1 using expect method",
      "timedOut": false,
      "duration": 7,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "utils.httpGET(<span class=\"hljs-string\">'/posts/1'</span>, {})<br>    .set(<span class=\"hljs-string\">'content-type'</span>, <span class=\"hljs-string\">'application/json; charset=utf-8'</span>)<br>    .expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">res</span>) </span>{<br>        <span class=\"hljs-keyword\">const</span> response = res.body;<br>        <span class=\"hljs-comment\">//console.log(response);</span><br>        expect(response).to.have.property(<span class=\"hljs-string\">'id'</span>);<br>        expect(response).to.have.property(<span class=\"hljs-string\">'title'</span>);<br>        expect(response).to.have.property(<span class=\"hljs-string\">'body'</span>);<br>        expect(response).to.have.property(<span class=\"hljs-string\">'userId'</span>);<br>        expect(response.id).to.equal(<span class=\"hljs-string\">'1'</span>);<br>    })<br>    .expect(<span class=\"hljs-number\">200</span>, done);",
      "isRoot": false,
      "uuid": "48efe8a3-ba31-49a1-80ee-e3fb98ffcf27",
      "parentUUID": "c578bd52-836e-4b44-8f0b-71ebb7f603fb",
      "skipped": false
    },
    {
      "title": "should return a 200 OK status code for PostID 1 using expect method",
      "fullTitle": "@get should return a 200 OK status code for PostID 1 using expect method",
      "timedOut": false,
      "duration": 16,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "utils.httpGET(<span class=\"hljs-string\">'/posts/'</span>, {})<br>    .set(<span class=\"hljs-string\">'content-type'</span>, <span class=\"hljs-string\">'application/json; charset=utf-8'</span>)<br>    <span class=\"hljs-comment\">// .expect(function (res) {</span><br>    <span class=\"hljs-comment\">//     const response = res.body;</span><br>    <span class=\"hljs-comment\">//     console.log(response);</span><br>    <span class=\"hljs-comment\">// })</span><br>    .expect(<span class=\"hljs-number\">200</span>, done);",
      "isRoot": false,
      "uuid": "6682b099-b086-4d11-a0c2-9bc9f2f2d49b",
      "parentUUID": "c578bd52-836e-4b44-8f0b-71ebb7f603fb",
      "skipped": false
    },
    {
      "title": "should return a 201 code after posting",
      "fullTitle": "@post should return a 201 code after posting",
      "timedOut": false,
      "duration": 69,
      "state": "passed",
      "speed": "medium",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "utils.httpPOST(<span class=\"hljs-string\">'/posts'</span>, {})<br>    .send({title: <span class=\"hljs-string\">'foo'</span>, body: <span class=\"hljs-string\">'bar'</span>, userId: <span class=\"hljs-number\">1</span>})<br>    .expect(<span class=\"hljs-string\">'content-type'</span>, <span class=\"hljs-string\">'application/json; charset=utf-8'</span>)<br>    .expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">res</span>) </span>{<br>        <span class=\"hljs-keyword\">const</span> response = res.body;<br>        <span class=\"hljs-comment\">//console.log(response);</span><br>        expect(response.title).to.equal(<span class=\"hljs-string\">'foo'</span>);<br>        expect(response.body).to.equal(<span class=\"hljs-string\">'bar'</span>);<br>        expect(response.userId).to.equal(<span class=\"hljs-number\">1</span>);<br>    })<br>    .expect(<span class=\"hljs-number\">201</span>, done)",
      "isRoot": false,
      "uuid": "1cc2514e-7de4-4c6a-acfd-6bad7e2340fe",
      "parentUUID": "5c0ed0c8-cc21-4d43-931a-2de5a5e30a05",
      "skipped": false
    },
    {
      "title": "should return a 200 code after updating postId 1",
      "fullTitle": "@put should return a 200 code after updating postId 1",
      "timedOut": false,
      "duration": 17,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "utils.httpPUT(<span class=\"hljs-string\">'/posts/20'</span>, {})<br>    .send(<br>        {<br>            id: <span class=\"hljs-number\">20</span>,<br>            title: <span class=\"hljs-string\">'candy crush'</span>,<br>            body: <span class=\"hljs-string\">'sodalicious juicy'</span>,<br>            userId: <span class=\"hljs-number\">1</span><br>        }<br>    )<br>    .expect(<span class=\"hljs-string\">'content-type'</span>, <span class=\"hljs-string\">'application/json; charset=utf-8'</span>)<br>    .expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">res</span>) </span>{<br>        <span class=\"hljs-keyword\">const</span> response = res.body;<br>        <span class=\"hljs-comment\">//console.log(response);</span><br>        expect(response.id).to.equal(<span class=\"hljs-string\">'20'</span>);<br>        expect(response.title).to.equal(<span class=\"hljs-string\">'candy crush'</span>);<br>        expect(response.body).to.equal(<span class=\"hljs-string\">'sodalicious juicy'</span>);<br>        expect(response.userId).to.equal(<span class=\"hljs-number\">1</span>);<br>    })<br>    .expect(<span class=\"hljs-number\">200</span>, done);",
      "isRoot": false,
      "uuid": "946b0fa0-216d-497e-aa3c-cf5fc1607a66",
      "parentUUID": "6ff5de21-3cc0-4ed7-9002-239efd827303",
      "skipped": false
    },
    {
      "title": "should return a 200 code after updating postId 1",
      "fullTitle": "@put should return a 200 code after updating postId 1",
      "timedOut": false,
      "duration": 13,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "utils.httpPUT(<span class=\"hljs-string\">'/posts/1'</span>, {})<br>    .send(<br>        {<br>            id: <span class=\"hljs-number\">1</span>,<br>            title: <span class=\"hljs-string\">'foo'</span>,<br>            body: <span class=\"hljs-string\">'bar'</span>,<br>            userId: <span class=\"hljs-number\">1</span><br>        }<br>    )<br>    .expect(<span class=\"hljs-string\">'content-type'</span>, <span class=\"hljs-string\">'application/json; charset=utf-8'</span>)<br>    .expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">res</span>) </span>{<br>        <span class=\"hljs-keyword\">const</span> response = res.body;<br>        <span class=\"hljs-comment\">//console.log(response);</span><br>        expect(response.id).to.equal(<span class=\"hljs-string\">'1'</span>);<br>        expect(response.title).to.equal(<span class=\"hljs-string\">'foo'</span>);<br>        expect(response.body).to.equal(<span class=\"hljs-string\">'bar'</span>);<br>        expect(response.userId).to.equal(<span class=\"hljs-number\">1</span>);<br>    })<br>    .expect(<span class=\"hljs-number\">200</span>, done);",
      "isRoot": false,
      "uuid": "32bf2745-7bb4-48c4-8380-a7a485351b5f",
      "parentUUID": "6ff5de21-3cc0-4ed7-9002-239efd827303",
      "skipped": false
    },
    {
      "title": "should return a 200 OK status code for User ID 1",
      "fullTitle": "@get should return a 200 OK status code for User ID 1",
      "timedOut": false,
      "duration": 13,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "utils.httpGET(<span class=\"hljs-string\">'/users/1'</span>, {})<br>    .set(<span class=\"hljs-string\">'content-type'</span>, <span class=\"hljs-string\">'application/json; charset=utf-8'</span>)<br>    .expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">res</span>) </span>{<br>        <span class=\"hljs-keyword\">const</span> response = res.body;<br>        <span class=\"hljs-comment\">//console.log(response);</span><br>        <span class=\"hljs-keyword\">return</span> assert.deepEqual(response,<br>            {<br>                <span class=\"hljs-string\">\"id\"</span>: <span class=\"hljs-number\">1</span>,<br>                <span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"Leanne Graham\"</span>,<br>                <span class=\"hljs-string\">\"username\"</span>: <span class=\"hljs-string\">\"Bret\"</span>,<br>                <span class=\"hljs-string\">\"email\"</span>: <span class=\"hljs-string\">\"Sincere@april.biz\"</span>,<br>                <span class=\"hljs-string\">\"address\"</span>: {<br>                    <span class=\"hljs-string\">\"street\"</span>: <span class=\"hljs-string\">\"Kulas Light\"</span>,<br>                    <span class=\"hljs-string\">\"suite\"</span>: <span class=\"hljs-string\">\"Apt. 556\"</span>,<br>                    <span class=\"hljs-string\">\"city\"</span>: <span class=\"hljs-string\">\"Gwenborough\"</span>,<br>                    <span class=\"hljs-string\">\"zipcode\"</span>: <span class=\"hljs-string\">\"92998-3874\"</span>,<br>                    <span class=\"hljs-string\">\"geo\"</span>: {<br>                        <span class=\"hljs-string\">\"lat\"</span>: <span class=\"hljs-string\">\"-37.3159\"</span>,<br>                        <span class=\"hljs-string\">\"lng\"</span>: <span class=\"hljs-string\">\"81.1496\"</span><br>                    }<br>                },<br>                <span class=\"hljs-string\">\"phone\"</span>: <span class=\"hljs-string\">\"1-770-736-8031 x56442\"</span>,<br>                <span class=\"hljs-string\">\"website\"</span>: <span class=\"hljs-string\">\"hildegard.org\"</span>,<br>                <span class=\"hljs-string\">\"company\"</span>: {<br>                    <span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"Romaguera-Crona\"</span>,<br>                    <span class=\"hljs-string\">\"catchPhrase\"</span>: <span class=\"hljs-string\">\"Multi-layered client-server neural-net\"</span>,<br>                    <span class=\"hljs-string\">\"bs\"</span>: <span class=\"hljs-string\">\"harness real-time e-markets\"</span><br>                }<br>            })<br>    })<br>    .expect(<span class=\"hljs-number\">200</span>, done);",
      "isRoot": false,
      "uuid": "98b0c096-a5ec-4aba-a31b-948ef54e09e0",
      "parentUUID": "8d8bbd13-8ce5-41c1-b0a2-632c8019d272",
      "skipped": false
    },
    {
      "title": "should return a 200 OK status code for userId 1 using expect method",
      "fullTitle": "@get should return a 200 OK status code for userId 1 using expect method",
      "timedOut": false,
      "duration": 12,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "utils.httpGET(<span class=\"hljs-string\">'/users/1'</span>, {})<br>    .set(<span class=\"hljs-string\">'content-type'</span>, <span class=\"hljs-string\">'application/json; charset=utf-8'</span>)<br>    .expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">res</span>) </span>{<br>        <span class=\"hljs-keyword\">const</span> response = res.body;<br>        <span class=\"hljs-comment\">//console.log(response);</span><br>        expect(response).to.have.property(<span class=\"hljs-string\">'id'</span>);<br>        expect(response).to.have.property(<span class=\"hljs-string\">'name'</span>);<br>        expect(response).to.have.property(<span class=\"hljs-string\">'username'</span>);<br>        expect(response).to.have.property(<span class=\"hljs-string\">'email'</span>);<br>        expect(response.id).to.equal(<span class=\"hljs-number\">1</span>);<br>        expect(response.email).to.equal(<span class=\"hljs-string\">'Sincere@april.biz'</span>);<br>        expect(response.address.city).to.equal(<span class=\"hljs-string\">'Gwenborough'</span>);<br><br>    })<br>    .expect(<span class=\"hljs-number\">200</span>, done);",
      "isRoot": false,
      "uuid": "c5209f4a-f63c-4854-a4da-51699fb530ee",
      "parentUUID": "8d8bbd13-8ce5-41c1-b0a2-632c8019d272",
      "skipped": false
    },
    {
      "title": "should return a 200 OK status code for GET All /users using expect method",
      "fullTitle": "@get should return a 200 OK status code for GET All /users using expect method",
      "timedOut": false,
      "duration": 11,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "utils.httpGET(<span class=\"hljs-string\">'/users/'</span>, {})<br>    .set(<span class=\"hljs-string\">'content-type'</span>, <span class=\"hljs-string\">'application/json; charset=utf-8'</span>)<br>    <span class=\"hljs-comment\">// .expect(function (res) {</span><br>    <span class=\"hljs-comment\">//     const response = res.body;</span><br>    <span class=\"hljs-comment\">//     console.log(response);</span><br>    <span class=\"hljs-comment\">// })</span><br>    .expect(<span class=\"hljs-number\">200</span>, done);",
      "isRoot": false,
      "uuid": "49288ea9-a16c-4c65-b747-bd3bab45c5ec",
      "parentUUID": "8d8bbd13-8ce5-41c1-b0a2-632c8019d272",
      "skipped": false
    }
  ],
  "allPending": [],
  "allPasses": [
    {
      "title": "should return a 200 OK status code for Album ID 1",
      "fullTitle": "@get should return a 200 OK status code for Album ID 1",
      "timedOut": false,
      "duration": 32,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "utils.httpGET(<span class=\"hljs-string\">'/albums/1'</span>, {})<br>    .set(<span class=\"hljs-string\">'content-type'</span>, <span class=\"hljs-string\">'application/json; charset=utf-8'</span>)<br>    .expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">res</span>) </span>{<br>        <span class=\"hljs-keyword\">const</span> response = res.body;<br>        <span class=\"hljs-comment\">//console.log(response);</span><br>        <span class=\"hljs-keyword\">return</span> assert.deepEqual(response,<br>            {<br>                <span class=\"hljs-string\">\"userId\"</span>: <span class=\"hljs-number\">1</span>,<br>                <span class=\"hljs-string\">\"id\"</span>: <span class=\"hljs-number\">1</span>,<br>                <span class=\"hljs-string\">\"title\"</span>: <span class=\"hljs-string\">\"quidem molestiae enim\"</span><br>            })<br>    })<br>    .expect(<span class=\"hljs-number\">200</span>, done);",
      "isRoot": false,
      "uuid": "4a1dadba-db99-4e15-87a0-077f3c061a3a",
      "parentUUID": "ce11fcd1-c8e4-4697-925b-cbb7c3b2a53c",
      "skipped": false
    },
    {
      "title": "should return a 200 OK status code for Album ID 1 using expect method",
      "fullTitle": "@get should return a 200 OK status code for Album ID 1 using expect method",
      "timedOut": false,
      "duration": 14,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "utils.httpGET(<span class=\"hljs-string\">'/albums/1'</span>, {})<br>    .set(<span class=\"hljs-string\">'content-type'</span>, <span class=\"hljs-string\">'application/json; charset=utf-8'</span>)<br>    .expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">res</span>) </span>{<br>         <span class=\"hljs-keyword\">const</span> response = res.body;<br>        <span class=\"hljs-comment\">// console.log(response);</span><br>        expect(response).to.have.property(<span class=\"hljs-string\">'userId'</span>);<br>        expect(response).to.have.property(<span class=\"hljs-string\">'id'</span>);<br>        expect(response).to.have.property(<span class=\"hljs-string\">'title'</span>);<br>        expect(response.id).to.equal(<span class=\"hljs-number\">1</span>);<br>        expect(response.userId).to.equal(<span class=\"hljs-number\">1</span>);<br>        expect(response.title).to.equal(<span class=\"hljs-string\">'quidem molestiae enim'</span>);<br><br>    })<br>    .expect(<span class=\"hljs-number\">200</span>, done);",
      "isRoot": false,
      "uuid": "2d3b8d18-f784-47f0-83cb-1c4a02a14f9a",
      "parentUUID": "ce11fcd1-c8e4-4697-925b-cbb7c3b2a53c",
      "skipped": false
    },
    {
      "title": "should return a 200 OK status code for GET All /albums using expect method",
      "fullTitle": "@get should return a 200 OK status code for GET All /albums using expect method",
      "timedOut": false,
      "duration": 14,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "utils.httpGET(<span class=\"hljs-string\">'/albums/'</span>, {})<br>    .set(<span class=\"hljs-string\">'content-type'</span>, <span class=\"hljs-string\">'application/json; charset=utf-8'</span>)<br>    <span class=\"hljs-comment\">// .expect(function (res) {</span><br>    <span class=\"hljs-comment\">//     const response = res.body;</span><br>    <span class=\"hljs-comment\">//     console.log(response);</span><br>    <span class=\"hljs-comment\">// })</span><br>    .expect(<span class=\"hljs-number\">200</span>, done);",
      "isRoot": false,
      "uuid": "42151775-9b46-4c9a-a084-f32d4aedfc57",
      "parentUUID": "ce11fcd1-c8e4-4697-925b-cbb7c3b2a53c",
      "skipped": false
    },
    {
      "title": "should return a 200 OK status code for Comment ID 1",
      "fullTitle": "@get should return a 200 OK status code for Comment ID 1",
      "timedOut": false,
      "duration": 11,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "utils.httpGET(<span class=\"hljs-string\">'/comments/1'</span>, {})<br>    .set(<span class=\"hljs-string\">'content-type'</span>, <span class=\"hljs-string\">'application/json; charset=utf-8'</span>)<br>    .expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">res</span>) </span>{<br>        <span class=\"hljs-keyword\">const</span> response = res.body;<br>        <span class=\"hljs-comment\">//console.log(response);</span><br>        <span class=\"hljs-keyword\">return</span> assert.deepEqual(response,<br>            {<br>                <span class=\"hljs-string\">\"postId\"</span>: <span class=\"hljs-number\">1</span>,<br>                <span class=\"hljs-string\">\"id\"</span>: <span class=\"hljs-number\">1</span>,<br>                <span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"id labore ex et quam laborum\"</span>,<br>                <span class=\"hljs-string\">\"email\"</span>: <span class=\"hljs-string\">\"Eliseo@gardner.biz\"</span>,<br>                <span class=\"hljs-string\">\"body\"</span>: <span class=\"hljs-string\">\"laudantium enim quasi est quidem magnam voluptate ipsam eos\\ntempora quo necessitatibus\\ndolor quam autem quasi\\nreiciendis et nam sapiente accusantium\"</span><br>            })<br>    })<br>    .expect(<span class=\"hljs-number\">200</span>, done);",
      "isRoot": false,
      "uuid": "c554db65-359c-4117-bf40-a1413117d60f",
      "parentUUID": "0b114e8e-6b7a-49e0-a7c0-9d7991d98707",
      "skipped": false
    },
    {
      "title": "should return a 200 OK status code for comment ID 1 using expect method",
      "fullTitle": "@get should return a 200 OK status code for comment ID 1 using expect method",
      "timedOut": false,
      "duration": 9,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "utils.httpGET(<span class=\"hljs-string\">'/comments/1'</span>, {})<br>    .set(<span class=\"hljs-string\">'content-type'</span>, <span class=\"hljs-string\">'application/json; charset=utf-8'</span>)<br>    .expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">res</span>) </span>{<br>        <span class=\"hljs-keyword\">const</span> response = res.body;<br>        <span class=\"hljs-comment\">//console.log(response);</span><br>        expect(response).to.have.property(<span class=\"hljs-string\">'postId'</span>);<br>        expect(response).to.have.property(<span class=\"hljs-string\">'id'</span>);<br>        expect(response).to.have.property(<span class=\"hljs-string\">'name'</span>);<br>        expect(response).to.have.property(<span class=\"hljs-string\">'email'</span>);<br>        expect(response).to.have.property(<span class=\"hljs-string\">'body'</span>);<br>        expect(response.id).to.equal(<span class=\"hljs-number\">1</span>);<br>        expect(response.email).to.equal(<span class=\"hljs-string\">'Eliseo@gardner.biz'</span>);<br>        expect(response.name).to.equal(<span class=\"hljs-string\">'id labore ex et quam laborum'</span>);<br><br>    })<br>    .expect(<span class=\"hljs-number\">200</span>, done);",
      "isRoot": false,
      "uuid": "2e00847b-76ae-4270-b914-63ed9a6d3c2b",
      "parentUUID": "0b114e8e-6b7a-49e0-a7c0-9d7991d98707",
      "skipped": false
    },
    {
      "title": "should return a 200 OK status code for GET All /comments using expect method",
      "fullTitle": "@get should return a 200 OK status code for GET All /comments using expect method",
      "timedOut": false,
      "duration": 30,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "utils.httpGET(<span class=\"hljs-string\">'/comments/'</span>, {})<br>    .set(<span class=\"hljs-string\">'content-type'</span>, <span class=\"hljs-string\">'application/json; charset=utf-8'</span>)<br>    <span class=\"hljs-comment\">// .expect(function (res) {</span><br>    <span class=\"hljs-comment\">//     const response = res.body;</span><br>    <span class=\"hljs-comment\">//     console.log(response);</span><br>    <span class=\"hljs-comment\">// })</span><br>    .expect(<span class=\"hljs-number\">200</span>, done);",
      "isRoot": false,
      "uuid": "febfae4e-2c9a-43e1-9f47-b95c34047f0f",
      "parentUUID": "0b114e8e-6b7a-49e0-a7c0-9d7991d98707",
      "skipped": false
    },
    {
      "title": "should return a 200 code after deleting fake postId 100",
      "fullTitle": "@delete should return a 200 code after deleting fake postId 100",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "utils.httpDELETE(<span class=\"hljs-string\">'/posts/101'</span>, {})<br>   .send(<br>       {<br>           id: <span class=\"hljs-number\">101</span>,<br>           title: <span class=\"hljs-string\">'foo'</span>,<br>           body: <span class=\"hljs-string\">'bar'</span>,<br>           userId: <span class=\"hljs-number\">1</span><br>       }<br>   )<br>   .expect(<span class=\"hljs-string\">'content-type'</span>, <span class=\"hljs-string\">'application/json; charset=utf-8'</span>)<br>   .expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">res</span>) </span>{<br>       <span class=\"hljs-keyword\">const</span> response = res.body;<br>       <span class=\"hljs-comment\">//console.log(response)</span><br>       <span class=\"hljs-keyword\">return</span> assert.deepEqual(response,<br>           {} <span class=\"hljs-comment\">//return empty response</span><br>       );<br>   })<br>    .expect(<span class=\"hljs-number\">200</span>);",
      "isRoot": false,
      "uuid": "0be6863c-7be2-43dc-8e53-576288976e6b",
      "parentUUID": "8ddaea0b-cc60-440d-b408-4cecd89ba3bb",
      "skipped": false
    },
    {
      "title": "should return a 200 OK status code for PostID 1",
      "fullTitle": "@get should return a 200 OK status code for PostID 1",
      "timedOut": false,
      "duration": 8,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "utils.httpGET(<span class=\"hljs-string\">'/posts/1'</span>, {})<br>    .set(<span class=\"hljs-string\">'content-type'</span>, <span class=\"hljs-string\">'application/json; charset=utf-8'</span>)<br>    .expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">res</span>) </span>{<br>        <span class=\"hljs-keyword\">const</span> response = res.body;<br>        <span class=\"hljs-comment\">//console.log(response);</span><br>        <span class=\"hljs-keyword\">return</span> assert.deepEqual(response,<br>            {<br>                <span class=\"hljs-string\">\"id\"</span>: <span class=\"hljs-string\">\"1\"</span>,<br>                <span class=\"hljs-string\">\"title\"</span>: <span class=\"hljs-string\">\"foo\"</span>,<br>                <span class=\"hljs-string\">\"body\"</span>: <span class=\"hljs-string\">\"bar\"</span>,<br>                <span class=\"hljs-string\">\"userId\"</span>: <span class=\"hljs-number\">1</span><br>            })<br>    })<br>    .expect(<span class=\"hljs-number\">200</span>, done);",
      "isRoot": false,
      "uuid": "6836e8c1-78bc-4b3c-9777-59db30f05e14",
      "parentUUID": "c578bd52-836e-4b44-8f0b-71ebb7f603fb",
      "skipped": false
    },
    {
      "title": "should return a 200 OK status code for PostID 1 using expect method",
      "fullTitle": "@get should return a 200 OK status code for PostID 1 using expect method",
      "timedOut": false,
      "duration": 7,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "utils.httpGET(<span class=\"hljs-string\">'/posts/1'</span>, {})<br>    .set(<span class=\"hljs-string\">'content-type'</span>, <span class=\"hljs-string\">'application/json; charset=utf-8'</span>)<br>    .expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">res</span>) </span>{<br>        <span class=\"hljs-keyword\">const</span> response = res.body;<br>        <span class=\"hljs-comment\">//console.log(response);</span><br>        expect(response).to.have.property(<span class=\"hljs-string\">'id'</span>);<br>        expect(response).to.have.property(<span class=\"hljs-string\">'title'</span>);<br>        expect(response).to.have.property(<span class=\"hljs-string\">'body'</span>);<br>        expect(response).to.have.property(<span class=\"hljs-string\">'userId'</span>);<br>        expect(response.id).to.equal(<span class=\"hljs-string\">'1'</span>);<br>    })<br>    .expect(<span class=\"hljs-number\">200</span>, done);",
      "isRoot": false,
      "uuid": "0c41d1b8-d1d0-4767-b987-8808c3c85a06",
      "parentUUID": "c578bd52-836e-4b44-8f0b-71ebb7f603fb",
      "skipped": false
    },
    {
      "title": "should return a 200 OK status code for PostID 1 using expect method",
      "fullTitle": "@get should return a 200 OK status code for PostID 1 using expect method",
      "timedOut": false,
      "duration": 16,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "utils.httpGET(<span class=\"hljs-string\">'/posts/'</span>, {})<br>    .set(<span class=\"hljs-string\">'content-type'</span>, <span class=\"hljs-string\">'application/json; charset=utf-8'</span>)<br>    <span class=\"hljs-comment\">// .expect(function (res) {</span><br>    <span class=\"hljs-comment\">//     const response = res.body;</span><br>    <span class=\"hljs-comment\">//     console.log(response);</span><br>    <span class=\"hljs-comment\">// })</span><br>    .expect(<span class=\"hljs-number\">200</span>, done);",
      "isRoot": false,
      "uuid": "c57443b8-15e4-4f4d-8e85-59527d2af7e0",
      "parentUUID": "c578bd52-836e-4b44-8f0b-71ebb7f603fb",
      "skipped": false
    },
    {
      "title": "should return a 201 code after posting",
      "fullTitle": "@post should return a 201 code after posting",
      "timedOut": false,
      "duration": 69,
      "state": "passed",
      "speed": "medium",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "utils.httpPOST(<span class=\"hljs-string\">'/posts'</span>, {})<br>    .send({title: <span class=\"hljs-string\">'foo'</span>, body: <span class=\"hljs-string\">'bar'</span>, userId: <span class=\"hljs-number\">1</span>})<br>    .expect(<span class=\"hljs-string\">'content-type'</span>, <span class=\"hljs-string\">'application/json; charset=utf-8'</span>)<br>    .expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">res</span>) </span>{<br>        <span class=\"hljs-keyword\">const</span> response = res.body;<br>        <span class=\"hljs-comment\">//console.log(response);</span><br>        expect(response.title).to.equal(<span class=\"hljs-string\">'foo'</span>);<br>        expect(response.body).to.equal(<span class=\"hljs-string\">'bar'</span>);<br>        expect(response.userId).to.equal(<span class=\"hljs-number\">1</span>);<br>    })<br>    .expect(<span class=\"hljs-number\">201</span>, done)",
      "isRoot": false,
      "uuid": "bdae04cb-e422-4be3-ad8b-30bcb5677140",
      "parentUUID": "5c0ed0c8-cc21-4d43-931a-2de5a5e30a05",
      "skipped": false
    },
    {
      "title": "should return a 200 code after updating postId 1",
      "fullTitle": "@put should return a 200 code after updating postId 1",
      "timedOut": false,
      "duration": 17,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "utils.httpPUT(<span class=\"hljs-string\">'/posts/20'</span>, {})<br>    .send(<br>        {<br>            id: <span class=\"hljs-number\">20</span>,<br>            title: <span class=\"hljs-string\">'candy crush'</span>,<br>            body: <span class=\"hljs-string\">'sodalicious juicy'</span>,<br>            userId: <span class=\"hljs-number\">1</span><br>        }<br>    )<br>    .expect(<span class=\"hljs-string\">'content-type'</span>, <span class=\"hljs-string\">'application/json; charset=utf-8'</span>)<br>    .expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">res</span>) </span>{<br>        <span class=\"hljs-keyword\">const</span> response = res.body;<br>        <span class=\"hljs-comment\">//console.log(response);</span><br>        expect(response.id).to.equal(<span class=\"hljs-string\">'20'</span>);<br>        expect(response.title).to.equal(<span class=\"hljs-string\">'candy crush'</span>);<br>        expect(response.body).to.equal(<span class=\"hljs-string\">'sodalicious juicy'</span>);<br>        expect(response.userId).to.equal(<span class=\"hljs-number\">1</span>);<br>    })<br>    .expect(<span class=\"hljs-number\">200</span>, done);",
      "isRoot": false,
      "uuid": "f0db7003-f779-4363-8058-465dba14738a",
      "parentUUID": "6ff5de21-3cc0-4ed7-9002-239efd827303",
      "skipped": false
    },
    {
      "title": "should return a 200 code after updating postId 1",
      "fullTitle": "@put should return a 200 code after updating postId 1",
      "timedOut": false,
      "duration": 13,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "utils.httpPUT(<span class=\"hljs-string\">'/posts/1'</span>, {})<br>    .send(<br>        {<br>            id: <span class=\"hljs-number\">1</span>,<br>            title: <span class=\"hljs-string\">'foo'</span>,<br>            body: <span class=\"hljs-string\">'bar'</span>,<br>            userId: <span class=\"hljs-number\">1</span><br>        }<br>    )<br>    .expect(<span class=\"hljs-string\">'content-type'</span>, <span class=\"hljs-string\">'application/json; charset=utf-8'</span>)<br>    .expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">res</span>) </span>{<br>        <span class=\"hljs-keyword\">const</span> response = res.body;<br>        <span class=\"hljs-comment\">//console.log(response);</span><br>        expect(response.id).to.equal(<span class=\"hljs-string\">'1'</span>);<br>        expect(response.title).to.equal(<span class=\"hljs-string\">'foo'</span>);<br>        expect(response.body).to.equal(<span class=\"hljs-string\">'bar'</span>);<br>        expect(response.userId).to.equal(<span class=\"hljs-number\">1</span>);<br>    })<br>    .expect(<span class=\"hljs-number\">200</span>, done);",
      "isRoot": false,
      "uuid": "a2687a11-bb0e-4e85-be93-be827e5b6127",
      "parentUUID": "6ff5de21-3cc0-4ed7-9002-239efd827303",
      "skipped": false
    },
    {
      "title": "should return a 200 OK status code for User ID 1",
      "fullTitle": "@get should return a 200 OK status code for User ID 1",
      "timedOut": false,
      "duration": 13,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "utils.httpGET(<span class=\"hljs-string\">'/users/1'</span>, {})<br>    .set(<span class=\"hljs-string\">'content-type'</span>, <span class=\"hljs-string\">'application/json; charset=utf-8'</span>)<br>    .expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">res</span>) </span>{<br>        <span class=\"hljs-keyword\">const</span> response = res.body;<br>        <span class=\"hljs-comment\">//console.log(response);</span><br>        <span class=\"hljs-keyword\">return</span> assert.deepEqual(response,<br>            {<br>                <span class=\"hljs-string\">\"id\"</span>: <span class=\"hljs-number\">1</span>,<br>                <span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"Leanne Graham\"</span>,<br>                <span class=\"hljs-string\">\"username\"</span>: <span class=\"hljs-string\">\"Bret\"</span>,<br>                <span class=\"hljs-string\">\"email\"</span>: <span class=\"hljs-string\">\"Sincere@april.biz\"</span>,<br>                <span class=\"hljs-string\">\"address\"</span>: {<br>                    <span class=\"hljs-string\">\"street\"</span>: <span class=\"hljs-string\">\"Kulas Light\"</span>,<br>                    <span class=\"hljs-string\">\"suite\"</span>: <span class=\"hljs-string\">\"Apt. 556\"</span>,<br>                    <span class=\"hljs-string\">\"city\"</span>: <span class=\"hljs-string\">\"Gwenborough\"</span>,<br>                    <span class=\"hljs-string\">\"zipcode\"</span>: <span class=\"hljs-string\">\"92998-3874\"</span>,<br>                    <span class=\"hljs-string\">\"geo\"</span>: {<br>                        <span class=\"hljs-string\">\"lat\"</span>: <span class=\"hljs-string\">\"-37.3159\"</span>,<br>                        <span class=\"hljs-string\">\"lng\"</span>: <span class=\"hljs-string\">\"81.1496\"</span><br>                    }<br>                },<br>                <span class=\"hljs-string\">\"phone\"</span>: <span class=\"hljs-string\">\"1-770-736-8031 x56442\"</span>,<br>                <span class=\"hljs-string\">\"website\"</span>: <span class=\"hljs-string\">\"hildegard.org\"</span>,<br>                <span class=\"hljs-string\">\"company\"</span>: {<br>                    <span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"Romaguera-Crona\"</span>,<br>                    <span class=\"hljs-string\">\"catchPhrase\"</span>: <span class=\"hljs-string\">\"Multi-layered client-server neural-net\"</span>,<br>                    <span class=\"hljs-string\">\"bs\"</span>: <span class=\"hljs-string\">\"harness real-time e-markets\"</span><br>                }<br>            })<br>    })<br>    .expect(<span class=\"hljs-number\">200</span>, done);",
      "isRoot": false,
      "uuid": "a9043c47-328c-413c-b8cb-ddf2fffe9649",
      "parentUUID": "8d8bbd13-8ce5-41c1-b0a2-632c8019d272",
      "skipped": false
    },
    {
      "title": "should return a 200 OK status code for userId 1 using expect method",
      "fullTitle": "@get should return a 200 OK status code for userId 1 using expect method",
      "timedOut": false,
      "duration": 12,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "utils.httpGET(<span class=\"hljs-string\">'/users/1'</span>, {})<br>    .set(<span class=\"hljs-string\">'content-type'</span>, <span class=\"hljs-string\">'application/json; charset=utf-8'</span>)<br>    .expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">res</span>) </span>{<br>        <span class=\"hljs-keyword\">const</span> response = res.body;<br>        <span class=\"hljs-comment\">//console.log(response);</span><br>        expect(response).to.have.property(<span class=\"hljs-string\">'id'</span>);<br>        expect(response).to.have.property(<span class=\"hljs-string\">'name'</span>);<br>        expect(response).to.have.property(<span class=\"hljs-string\">'username'</span>);<br>        expect(response).to.have.property(<span class=\"hljs-string\">'email'</span>);<br>        expect(response.id).to.equal(<span class=\"hljs-number\">1</span>);<br>        expect(response.email).to.equal(<span class=\"hljs-string\">'Sincere@april.biz'</span>);<br>        expect(response.address.city).to.equal(<span class=\"hljs-string\">'Gwenborough'</span>);<br><br>    })<br>    .expect(<span class=\"hljs-number\">200</span>, done);",
      "isRoot": false,
      "uuid": "0f98c8cc-4168-4d7e-bb92-99caf49671e6",
      "parentUUID": "8d8bbd13-8ce5-41c1-b0a2-632c8019d272",
      "skipped": false
    },
    {
      "title": "should return a 200 OK status code for GET All /users using expect method",
      "fullTitle": "@get should return a 200 OK status code for GET All /users using expect method",
      "timedOut": false,
      "duration": 11,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "utils.httpGET(<span class=\"hljs-string\">'/users/'</span>, {})<br>    .set(<span class=\"hljs-string\">'content-type'</span>, <span class=\"hljs-string\">'application/json; charset=utf-8'</span>)<br>    <span class=\"hljs-comment\">// .expect(function (res) {</span><br>    <span class=\"hljs-comment\">//     const response = res.body;</span><br>    <span class=\"hljs-comment\">//     console.log(response);</span><br>    <span class=\"hljs-comment\">// })</span><br>    .expect(<span class=\"hljs-number\">200</span>, done);",
      "isRoot": false,
      "uuid": "5777e6f9-742f-432d-bb3f-72b93c77258f",
      "parentUUID": "8d8bbd13-8ce5-41c1-b0a2-632c8019d272",
      "skipped": false
    }
  ],
  "allFailures": [],
  "copyrightYear": 2016
}