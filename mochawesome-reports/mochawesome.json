{
  "reportTitle": "apiAutomatedTest",
  "stats": {
    "suites": 7,
    "tests": 16,
    "passes": 16,
    "pending": 0,
    "failures": 0,
    "start": "2016-11-29T21:48:39.170Z",
    "end": "2016-11-29T21:48:39.467Z",
    "duration": 297,
    "testsRegistered": 16,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false,
    "passPercentClass": "success",
    "pendingPercentClass": "danger"
  },
  "suites": {
    "title": "",
    "suites": [
      {
        "title": "@get",
        "suites": [],
        "tests": [
          {
            "title": "should return a 200 OK status code for Album ID 1",
            "fullTitle": "@get should return a 200 OK status code for Album ID 1",
            "timedOut": false,
            "duration": 35,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "utils.httpGET(<span class=\"hljs-string\">'/albums/1'</span>, {})<br>    .set(<span class=\"hljs-string\">'content-type'</span>, <span class=\"hljs-string\">'application/json; charset=utf-8'</span>)<br>    .expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">res</span>) </span>{<br>        <span class=\"hljs-keyword\">const</span> response = res.body;<br>        <span class=\"hljs-comment\">//console.log(response);</span><br>        <span class=\"hljs-keyword\">return</span> assert.deepEqual(response,<br>            {<br>                <span class=\"hljs-string\">\"userId\"</span>: <span class=\"hljs-number\">1</span>,<br>                <span class=\"hljs-string\">\"id\"</span>: <span class=\"hljs-number\">1</span>,<br>                <span class=\"hljs-string\">\"title\"</span>: <span class=\"hljs-string\">\"quidem molestiae enim\"</span><br>            })<br>    })<br>    .expect(<span class=\"hljs-number\">200</span>, done);",
            "isRoot": false,
            "uuid": "c2fdb132-a95b-453a-8e17-bbba2fb4313a",
            "parentUUID": "ab7abcbc-8fff-46a4-a5db-5b87eba3d260",
            "skipped": false
          },
          {
            "title": "should return a 200 OK status code for Album ID 1 using expect method",
            "fullTitle": "@get should return a 200 OK status code for Album ID 1 using expect method",
            "timedOut": false,
            "duration": 16,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "utils.httpGET(<span class=\"hljs-string\">'/albums/1'</span>, {})<br>    .set(<span class=\"hljs-string\">'content-type'</span>, <span class=\"hljs-string\">'application/json; charset=utf-8'</span>)<br>    .expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">res</span>) </span>{<br>         <span class=\"hljs-keyword\">const</span> response = res.body;<br>        <span class=\"hljs-comment\">// console.log(response);</span><br>        expect(response).to.have.property(<span class=\"hljs-string\">'userId'</span>);<br>        expect(response).to.have.property(<span class=\"hljs-string\">'id'</span>);<br>        expect(response).to.have.property(<span class=\"hljs-string\">'title'</span>);<br>        expect(response.id).to.equal(<span class=\"hljs-number\">1</span>);<br>        expect(response.userId).to.equal(<span class=\"hljs-number\">1</span>);<br>        expect(response.title).to.equal(<span class=\"hljs-string\">'quidem molestiae enim'</span>);<br><br>    })<br>    .expect(<span class=\"hljs-number\">200</span>, done);",
            "isRoot": false,
            "uuid": "c0e24f30-3ff7-4815-ac22-37222527e7e9",
            "parentUUID": "ab7abcbc-8fff-46a4-a5db-5b87eba3d260",
            "skipped": false
          },
          {
            "title": "should return a 200 OK status code for GET /comments using expect method",
            "fullTitle": "@get should return a 200 OK status code for GET /comments using expect method",
            "timedOut": false,
            "duration": 17,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "utils.httpGET(<span class=\"hljs-string\">'/albums/'</span>, {})<br>    .set(<span class=\"hljs-string\">'content-type'</span>, <span class=\"hljs-string\">'application/json; charset=utf-8'</span>)<br>    <span class=\"hljs-comment\">// .expect(function (res) {</span><br>    <span class=\"hljs-comment\">//     const response = res.body;</span><br>    <span class=\"hljs-comment\">//     console.log(response);</span><br>    <span class=\"hljs-comment\">// })</span><br>    .expect(<span class=\"hljs-number\">200</span>, done);",
            "isRoot": false,
            "uuid": "df387841-3912-45b9-98fd-257277f5a2b6",
            "parentUUID": "ab7abcbc-8fff-46a4-a5db-5b87eba3d260",
            "skipped": false
          }
        ],
        "pending": [],
        "root": false,
        "_timeout": 3000,
        "file": "/test/albums/GET/getALBUM_200.js",
        "uuid": "ab7abcbc-8fff-46a4-a5db-5b87eba3d260",
        "fullFile": "/Users/garsenius/github/apiAutomatedTest/test/albums/GET/getALBUM_200.js",
        "passes": [
          {
            "title": "should return a 200 OK status code for Album ID 1",
            "fullTitle": "@get should return a 200 OK status code for Album ID 1",
            "timedOut": false,
            "duration": 35,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "utils.httpGET(<span class=\"hljs-string\">'/albums/1'</span>, {})<br>    .set(<span class=\"hljs-string\">'content-type'</span>, <span class=\"hljs-string\">'application/json; charset=utf-8'</span>)<br>    .expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">res</span>) </span>{<br>        <span class=\"hljs-keyword\">const</span> response = res.body;<br>        <span class=\"hljs-comment\">//console.log(response);</span><br>        <span class=\"hljs-keyword\">return</span> assert.deepEqual(response,<br>            {<br>                <span class=\"hljs-string\">\"userId\"</span>: <span class=\"hljs-number\">1</span>,<br>                <span class=\"hljs-string\">\"id\"</span>: <span class=\"hljs-number\">1</span>,<br>                <span class=\"hljs-string\">\"title\"</span>: <span class=\"hljs-string\">\"quidem molestiae enim\"</span><br>            })<br>    })<br>    .expect(<span class=\"hljs-number\">200</span>, done);",
            "isRoot": false,
            "uuid": "c2fdb132-a95b-453a-8e17-bbba2fb4313a",
            "parentUUID": "ab7abcbc-8fff-46a4-a5db-5b87eba3d260",
            "skipped": false
          },
          {
            "title": "should return a 200 OK status code for Album ID 1 using expect method",
            "fullTitle": "@get should return a 200 OK status code for Album ID 1 using expect method",
            "timedOut": false,
            "duration": 16,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "utils.httpGET(<span class=\"hljs-string\">'/albums/1'</span>, {})<br>    .set(<span class=\"hljs-string\">'content-type'</span>, <span class=\"hljs-string\">'application/json; charset=utf-8'</span>)<br>    .expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">res</span>) </span>{<br>         <span class=\"hljs-keyword\">const</span> response = res.body;<br>        <span class=\"hljs-comment\">// console.log(response);</span><br>        expect(response).to.have.property(<span class=\"hljs-string\">'userId'</span>);<br>        expect(response).to.have.property(<span class=\"hljs-string\">'id'</span>);<br>        expect(response).to.have.property(<span class=\"hljs-string\">'title'</span>);<br>        expect(response.id).to.equal(<span class=\"hljs-number\">1</span>);<br>        expect(response.userId).to.equal(<span class=\"hljs-number\">1</span>);<br>        expect(response.title).to.equal(<span class=\"hljs-string\">'quidem molestiae enim'</span>);<br><br>    })<br>    .expect(<span class=\"hljs-number\">200</span>, done);",
            "isRoot": false,
            "uuid": "c0e24f30-3ff7-4815-ac22-37222527e7e9",
            "parentUUID": "ab7abcbc-8fff-46a4-a5db-5b87eba3d260",
            "skipped": false
          },
          {
            "title": "should return a 200 OK status code for GET /comments using expect method",
            "fullTitle": "@get should return a 200 OK status code for GET /comments using expect method",
            "timedOut": false,
            "duration": 17,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "utils.httpGET(<span class=\"hljs-string\">'/albums/'</span>, {})<br>    .set(<span class=\"hljs-string\">'content-type'</span>, <span class=\"hljs-string\">'application/json; charset=utf-8'</span>)<br>    <span class=\"hljs-comment\">// .expect(function (res) {</span><br>    <span class=\"hljs-comment\">//     const response = res.body;</span><br>    <span class=\"hljs-comment\">//     console.log(response);</span><br>    <span class=\"hljs-comment\">// })</span><br>    .expect(<span class=\"hljs-number\">200</span>, done);",
            "isRoot": false,
            "uuid": "df387841-3912-45b9-98fd-257277f5a2b6",
            "parentUUID": "ab7abcbc-8fff-46a4-a5db-5b87eba3d260",
            "skipped": false
          }
        ],
        "failures": [],
        "skipped": [],
        "hasTests": true,
        "hasSuites": false,
        "totalTests": 3,
        "totalPasses": 3,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": true,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 68
      },
      {
        "title": "@get",
        "suites": [],
        "tests": [
          {
            "title": "should return a 200 OK status code for Comment ID 1",
            "fullTitle": "@get should return a 200 OK status code for Comment ID 1",
            "timedOut": false,
            "duration": 14,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "utils.httpGET(<span class=\"hljs-string\">'/comments/1'</span>, {})<br>    .set(<span class=\"hljs-string\">'content-type'</span>, <span class=\"hljs-string\">'application/json; charset=utf-8'</span>)<br>    .expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">res</span>) </span>{<br>        <span class=\"hljs-keyword\">const</span> response = res.body;<br>        <span class=\"hljs-comment\">//console.log(response);</span><br>        <span class=\"hljs-keyword\">return</span> assert.deepEqual(response,<br>            {<br>                <span class=\"hljs-string\">\"postId\"</span>: <span class=\"hljs-number\">1</span>,<br>                <span class=\"hljs-string\">\"id\"</span>: <span class=\"hljs-number\">1</span>,<br>                <span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"id labore ex et quam laborum\"</span>,<br>                <span class=\"hljs-string\">\"email\"</span>: <span class=\"hljs-string\">\"Eliseo@gardner.biz\"</span>,<br>                <span class=\"hljs-string\">\"body\"</span>: <span class=\"hljs-string\">\"laudantium enim quasi est quidem magnam voluptate ipsam eos\\ntempora quo necessitatibus\\ndolor quam autem quasi\\nreiciendis et nam sapiente accusantium\"</span><br>            })<br>    })<br>    .expect(<span class=\"hljs-number\">200</span>, done);",
            "isRoot": false,
            "uuid": "42d5861d-c390-45e0-8626-7b6328d5a405",
            "parentUUID": "3cd3811b-5cb1-4423-8894-dcf0bd8a7d6f",
            "skipped": false
          },
          {
            "title": "should return a 200 OK status code for comment ID 1 using expect method",
            "fullTitle": "@get should return a 200 OK status code for comment ID 1 using expect method",
            "timedOut": false,
            "duration": 14,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "utils.httpGET(<span class=\"hljs-string\">'/comments/1'</span>, {})<br>    .set(<span class=\"hljs-string\">'content-type'</span>, <span class=\"hljs-string\">'application/json; charset=utf-8'</span>)<br>    .expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">res</span>) </span>{<br>        <span class=\"hljs-keyword\">const</span> response = res.body;<br>        <span class=\"hljs-comment\">//console.log(response);</span><br>        expect(response).to.have.property(<span class=\"hljs-string\">'postId'</span>);<br>        expect(response).to.have.property(<span class=\"hljs-string\">'id'</span>);<br>        expect(response).to.have.property(<span class=\"hljs-string\">'name'</span>);<br>        expect(response).to.have.property(<span class=\"hljs-string\">'email'</span>);<br>        expect(response).to.have.property(<span class=\"hljs-string\">'body'</span>);<br>        expect(response.id).to.equal(<span class=\"hljs-number\">1</span>);<br>        expect(response.email).to.equal(<span class=\"hljs-string\">'Eliseo@gardner.biz'</span>);<br>        expect(response.name).to.equal(<span class=\"hljs-string\">'id labore ex et quam laborum'</span>);<br><br>    })<br>    .expect(<span class=\"hljs-number\">200</span>, done);",
            "isRoot": false,
            "uuid": "8656ae7d-4764-47a2-86e9-6eecefc66faa",
            "parentUUID": "3cd3811b-5cb1-4423-8894-dcf0bd8a7d6f",
            "skipped": false
          },
          {
            "title": "should return a 200 OK status code for GET /comments using expect method",
            "fullTitle": "@get should return a 200 OK status code for GET /comments using expect method",
            "timedOut": false,
            "duration": 31,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "utils.httpGET(<span class=\"hljs-string\">'/comments/'</span>, {})<br>    .set(<span class=\"hljs-string\">'content-type'</span>, <span class=\"hljs-string\">'application/json; charset=utf-8'</span>)<br>    <span class=\"hljs-comment\">// .expect(function (res) {</span><br>    <span class=\"hljs-comment\">//     const response = res.body;</span><br>    <span class=\"hljs-comment\">//     console.log(response);</span><br>    <span class=\"hljs-comment\">// })</span><br>    .expect(<span class=\"hljs-number\">200</span>, done);",
            "isRoot": false,
            "uuid": "275e6632-c527-4a97-9763-5ca13bbea29c",
            "parentUUID": "3cd3811b-5cb1-4423-8894-dcf0bd8a7d6f",
            "skipped": false
          }
        ],
        "pending": [],
        "root": false,
        "_timeout": 3000,
        "file": "/test/comments/GET/getCOMMENT_200.js",
        "uuid": "3cd3811b-5cb1-4423-8894-dcf0bd8a7d6f",
        "fullFile": "/Users/garsenius/github/apiAutomatedTest/test/comments/GET/getCOMMENT_200.js",
        "passes": [
          {
            "title": "should return a 200 OK status code for Comment ID 1",
            "fullTitle": "@get should return a 200 OK status code for Comment ID 1",
            "timedOut": false,
            "duration": 14,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "utils.httpGET(<span class=\"hljs-string\">'/comments/1'</span>, {})<br>    .set(<span class=\"hljs-string\">'content-type'</span>, <span class=\"hljs-string\">'application/json; charset=utf-8'</span>)<br>    .expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">res</span>) </span>{<br>        <span class=\"hljs-keyword\">const</span> response = res.body;<br>        <span class=\"hljs-comment\">//console.log(response);</span><br>        <span class=\"hljs-keyword\">return</span> assert.deepEqual(response,<br>            {<br>                <span class=\"hljs-string\">\"postId\"</span>: <span class=\"hljs-number\">1</span>,<br>                <span class=\"hljs-string\">\"id\"</span>: <span class=\"hljs-number\">1</span>,<br>                <span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"id labore ex et quam laborum\"</span>,<br>                <span class=\"hljs-string\">\"email\"</span>: <span class=\"hljs-string\">\"Eliseo@gardner.biz\"</span>,<br>                <span class=\"hljs-string\">\"body\"</span>: <span class=\"hljs-string\">\"laudantium enim quasi est quidem magnam voluptate ipsam eos\\ntempora quo necessitatibus\\ndolor quam autem quasi\\nreiciendis et nam sapiente accusantium\"</span><br>            })<br>    })<br>    .expect(<span class=\"hljs-number\">200</span>, done);",
            "isRoot": false,
            "uuid": "42d5861d-c390-45e0-8626-7b6328d5a405",
            "parentUUID": "3cd3811b-5cb1-4423-8894-dcf0bd8a7d6f",
            "skipped": false
          },
          {
            "title": "should return a 200 OK status code for comment ID 1 using expect method",
            "fullTitle": "@get should return a 200 OK status code for comment ID 1 using expect method",
            "timedOut": false,
            "duration": 14,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "utils.httpGET(<span class=\"hljs-string\">'/comments/1'</span>, {})<br>    .set(<span class=\"hljs-string\">'content-type'</span>, <span class=\"hljs-string\">'application/json; charset=utf-8'</span>)<br>    .expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">res</span>) </span>{<br>        <span class=\"hljs-keyword\">const</span> response = res.body;<br>        <span class=\"hljs-comment\">//console.log(response);</span><br>        expect(response).to.have.property(<span class=\"hljs-string\">'postId'</span>);<br>        expect(response).to.have.property(<span class=\"hljs-string\">'id'</span>);<br>        expect(response).to.have.property(<span class=\"hljs-string\">'name'</span>);<br>        expect(response).to.have.property(<span class=\"hljs-string\">'email'</span>);<br>        expect(response).to.have.property(<span class=\"hljs-string\">'body'</span>);<br>        expect(response.id).to.equal(<span class=\"hljs-number\">1</span>);<br>        expect(response.email).to.equal(<span class=\"hljs-string\">'Eliseo@gardner.biz'</span>);<br>        expect(response.name).to.equal(<span class=\"hljs-string\">'id labore ex et quam laborum'</span>);<br><br>    })<br>    .expect(<span class=\"hljs-number\">200</span>, done);",
            "isRoot": false,
            "uuid": "8656ae7d-4764-47a2-86e9-6eecefc66faa",
            "parentUUID": "3cd3811b-5cb1-4423-8894-dcf0bd8a7d6f",
            "skipped": false
          },
          {
            "title": "should return a 200 OK status code for GET /comments using expect method",
            "fullTitle": "@get should return a 200 OK status code for GET /comments using expect method",
            "timedOut": false,
            "duration": 31,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "utils.httpGET(<span class=\"hljs-string\">'/comments/'</span>, {})<br>    .set(<span class=\"hljs-string\">'content-type'</span>, <span class=\"hljs-string\">'application/json; charset=utf-8'</span>)<br>    <span class=\"hljs-comment\">// .expect(function (res) {</span><br>    <span class=\"hljs-comment\">//     const response = res.body;</span><br>    <span class=\"hljs-comment\">//     console.log(response);</span><br>    <span class=\"hljs-comment\">// })</span><br>    .expect(<span class=\"hljs-number\">200</span>, done);",
            "isRoot": false,
            "uuid": "275e6632-c527-4a97-9763-5ca13bbea29c",
            "parentUUID": "3cd3811b-5cb1-4423-8894-dcf0bd8a7d6f",
            "skipped": false
          }
        ],
        "failures": [],
        "skipped": [],
        "hasTests": true,
        "hasSuites": false,
        "totalTests": 3,
        "totalPasses": 3,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": true,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 59
      },
      {
        "title": "@delete",
        "suites": [],
        "tests": [
          {
            "title": "should return a 200 code after deleting fake postId 100",
            "fullTitle": "@delete should return a 200 code after deleting fake postId 100",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "utils.httpDELETE(<span class=\"hljs-string\">'/posts/101'</span>, {})<br>   .send(<br>       {<br>           id: <span class=\"hljs-number\">101</span>,<br>           title: <span class=\"hljs-string\">'foo'</span>,<br>           body: <span class=\"hljs-string\">'bar'</span>,<br>           userId: <span class=\"hljs-number\">1</span><br>       }<br>   )<br>   .expect(<span class=\"hljs-string\">'content-type'</span>, <span class=\"hljs-string\">'application/json; charset=utf-8'</span>)<br>   .expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">res</span>) </span>{<br>       <span class=\"hljs-keyword\">const</span> response = res.body;<br>       <span class=\"hljs-comment\">//console.log(response)</span><br>       <span class=\"hljs-keyword\">return</span> assert.deepEqual(response,<br>           {} <span class=\"hljs-comment\">//return empty response</span><br>       );<br>   })<br>    .expect(<span class=\"hljs-number\">200</span>);",
            "isRoot": false,
            "uuid": "fa3e43b1-9609-438c-8526-d49e452205df",
            "parentUUID": "7845ba57-242f-45e6-8bad-71eff861dfe0",
            "skipped": false
          }
        ],
        "pending": [],
        "root": false,
        "_timeout": 3000,
        "file": "/test/posts/DELETE/deletePOST_200.js",
        "uuid": "7845ba57-242f-45e6-8bad-71eff861dfe0",
        "fullFile": "/Users/garsenius/github/apiAutomatedTest/test/posts/DELETE/deletePOST_200.js",
        "passes": [
          {
            "title": "should return a 200 code after deleting fake postId 100",
            "fullTitle": "@delete should return a 200 code after deleting fake postId 100",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "utils.httpDELETE(<span class=\"hljs-string\">'/posts/101'</span>, {})<br>   .send(<br>       {<br>           id: <span class=\"hljs-number\">101</span>,<br>           title: <span class=\"hljs-string\">'foo'</span>,<br>           body: <span class=\"hljs-string\">'bar'</span>,<br>           userId: <span class=\"hljs-number\">1</span><br>       }<br>   )<br>   .expect(<span class=\"hljs-string\">'content-type'</span>, <span class=\"hljs-string\">'application/json; charset=utf-8'</span>)<br>   .expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">res</span>) </span>{<br>       <span class=\"hljs-keyword\">const</span> response = res.body;<br>       <span class=\"hljs-comment\">//console.log(response)</span><br>       <span class=\"hljs-keyword\">return</span> assert.deepEqual(response,<br>           {} <span class=\"hljs-comment\">//return empty response</span><br>       );<br>   })<br>    .expect(<span class=\"hljs-number\">200</span>);",
            "isRoot": false,
            "uuid": "fa3e43b1-9609-438c-8526-d49e452205df",
            "parentUUID": "7845ba57-242f-45e6-8bad-71eff861dfe0",
            "skipped": false
          }
        ],
        "failures": [],
        "skipped": [],
        "hasTests": true,
        "hasSuites": false,
        "totalTests": 1,
        "totalPasses": 1,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": true,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 1
      },
      {
        "title": "@get",
        "suites": [],
        "tests": [
          {
            "title": "should return a 200 OK status code for PostID 1",
            "fullTitle": "@get should return a 200 OK status code for PostID 1",
            "timedOut": false,
            "duration": 9,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "utils.httpGET(<span class=\"hljs-string\">'/posts/1'</span>, {})<br>    .set(<span class=\"hljs-string\">'content-type'</span>, <span class=\"hljs-string\">'application/json; charset=utf-8'</span>)<br>    .expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">res</span>) </span>{<br>        <span class=\"hljs-keyword\">const</span> response = res.body;<br>        <span class=\"hljs-comment\">//console.log(response);</span><br>        <span class=\"hljs-keyword\">return</span> assert.deepEqual(response,<br>            {<br>                <span class=\"hljs-string\">\"id\"</span>: <span class=\"hljs-string\">\"1\"</span>,<br>                <span class=\"hljs-string\">\"title\"</span>: <span class=\"hljs-string\">\"foo\"</span>,<br>                <span class=\"hljs-string\">\"body\"</span>: <span class=\"hljs-string\">\"bar\"</span>,<br>                <span class=\"hljs-string\">\"userId\"</span>: <span class=\"hljs-number\">1</span><br>            })<br>    })<br>    .expect(<span class=\"hljs-number\">200</span>, done);",
            "isRoot": false,
            "uuid": "352de203-4e4e-485b-8423-28d48f8a93ad",
            "parentUUID": "b08b9dd8-a3d6-401e-a260-db93867b2d1b",
            "skipped": false
          },
          {
            "title": "should return a 200 OK status code for PostID 1 using expect method",
            "fullTitle": "@get should return a 200 OK status code for PostID 1 using expect method",
            "timedOut": false,
            "duration": 7,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "utils.httpGET(<span class=\"hljs-string\">'/posts/1'</span>, {})<br>    .set(<span class=\"hljs-string\">'content-type'</span>, <span class=\"hljs-string\">'application/json; charset=utf-8'</span>)<br>    .expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">res</span>) </span>{<br>        <span class=\"hljs-keyword\">const</span> response = res.body;<br>        <span class=\"hljs-comment\">//console.log(response);</span><br>        expect(response).to.have.property(<span class=\"hljs-string\">'id'</span>);<br>        expect(response).to.have.property(<span class=\"hljs-string\">'title'</span>);<br>        expect(response).to.have.property(<span class=\"hljs-string\">'body'</span>);<br>        expect(response).to.have.property(<span class=\"hljs-string\">'userId'</span>);<br>        expect(response.id).to.equal(<span class=\"hljs-string\">'1'</span>);<br>    })<br>    .expect(<span class=\"hljs-number\">200</span>, done);",
            "isRoot": false,
            "uuid": "bc41f58e-9b32-42c9-9296-b51069d72ece",
            "parentUUID": "b08b9dd8-a3d6-401e-a260-db93867b2d1b",
            "skipped": false
          },
          {
            "title": "should return a 200 OK status code for PostID 1 using expect method",
            "fullTitle": "@get should return a 200 OK status code for PostID 1 using expect method",
            "timedOut": false,
            "duration": 11,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "utils.httpGET(<span class=\"hljs-string\">'/posts/'</span>, {})<br>    .set(<span class=\"hljs-string\">'content-type'</span>, <span class=\"hljs-string\">'application/json; charset=utf-8'</span>)<br>    <span class=\"hljs-comment\">// .expect(function (res) {</span><br>    <span class=\"hljs-comment\">//     const response = res.body;</span><br>    <span class=\"hljs-comment\">//     console.log(response);</span><br>    <span class=\"hljs-comment\">// })</span><br>    .expect(<span class=\"hljs-number\">200</span>, done);",
            "isRoot": false,
            "uuid": "5ec00e01-7998-479a-b068-b15572b66145",
            "parentUUID": "b08b9dd8-a3d6-401e-a260-db93867b2d1b",
            "skipped": false
          }
        ],
        "pending": [],
        "root": false,
        "_timeout": 3000,
        "file": "/test/posts/GET/getPOST_200.js",
        "uuid": "b08b9dd8-a3d6-401e-a260-db93867b2d1b",
        "fullFile": "/Users/garsenius/github/apiAutomatedTest/test/posts/GET/getPOST_200.js",
        "passes": [
          {
            "title": "should return a 200 OK status code for PostID 1",
            "fullTitle": "@get should return a 200 OK status code for PostID 1",
            "timedOut": false,
            "duration": 9,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "utils.httpGET(<span class=\"hljs-string\">'/posts/1'</span>, {})<br>    .set(<span class=\"hljs-string\">'content-type'</span>, <span class=\"hljs-string\">'application/json; charset=utf-8'</span>)<br>    .expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">res</span>) </span>{<br>        <span class=\"hljs-keyword\">const</span> response = res.body;<br>        <span class=\"hljs-comment\">//console.log(response);</span><br>        <span class=\"hljs-keyword\">return</span> assert.deepEqual(response,<br>            {<br>                <span class=\"hljs-string\">\"id\"</span>: <span class=\"hljs-string\">\"1\"</span>,<br>                <span class=\"hljs-string\">\"title\"</span>: <span class=\"hljs-string\">\"foo\"</span>,<br>                <span class=\"hljs-string\">\"body\"</span>: <span class=\"hljs-string\">\"bar\"</span>,<br>                <span class=\"hljs-string\">\"userId\"</span>: <span class=\"hljs-number\">1</span><br>            })<br>    })<br>    .expect(<span class=\"hljs-number\">200</span>, done);",
            "isRoot": false,
            "uuid": "352de203-4e4e-485b-8423-28d48f8a93ad",
            "parentUUID": "b08b9dd8-a3d6-401e-a260-db93867b2d1b",
            "skipped": false
          },
          {
            "title": "should return a 200 OK status code for PostID 1 using expect method",
            "fullTitle": "@get should return a 200 OK status code for PostID 1 using expect method",
            "timedOut": false,
            "duration": 7,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "utils.httpGET(<span class=\"hljs-string\">'/posts/1'</span>, {})<br>    .set(<span class=\"hljs-string\">'content-type'</span>, <span class=\"hljs-string\">'application/json; charset=utf-8'</span>)<br>    .expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">res</span>) </span>{<br>        <span class=\"hljs-keyword\">const</span> response = res.body;<br>        <span class=\"hljs-comment\">//console.log(response);</span><br>        expect(response).to.have.property(<span class=\"hljs-string\">'id'</span>);<br>        expect(response).to.have.property(<span class=\"hljs-string\">'title'</span>);<br>        expect(response).to.have.property(<span class=\"hljs-string\">'body'</span>);<br>        expect(response).to.have.property(<span class=\"hljs-string\">'userId'</span>);<br>        expect(response.id).to.equal(<span class=\"hljs-string\">'1'</span>);<br>    })<br>    .expect(<span class=\"hljs-number\">200</span>, done);",
            "isRoot": false,
            "uuid": "bc41f58e-9b32-42c9-9296-b51069d72ece",
            "parentUUID": "b08b9dd8-a3d6-401e-a260-db93867b2d1b",
            "skipped": false
          },
          {
            "title": "should return a 200 OK status code for PostID 1 using expect method",
            "fullTitle": "@get should return a 200 OK status code for PostID 1 using expect method",
            "timedOut": false,
            "duration": 11,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "utils.httpGET(<span class=\"hljs-string\">'/posts/'</span>, {})<br>    .set(<span class=\"hljs-string\">'content-type'</span>, <span class=\"hljs-string\">'application/json; charset=utf-8'</span>)<br>    <span class=\"hljs-comment\">// .expect(function (res) {</span><br>    <span class=\"hljs-comment\">//     const response = res.body;</span><br>    <span class=\"hljs-comment\">//     console.log(response);</span><br>    <span class=\"hljs-comment\">// })</span><br>    .expect(<span class=\"hljs-number\">200</span>, done);",
            "isRoot": false,
            "uuid": "5ec00e01-7998-479a-b068-b15572b66145",
            "parentUUID": "b08b9dd8-a3d6-401e-a260-db93867b2d1b",
            "skipped": false
          }
        ],
        "failures": [],
        "skipped": [],
        "hasTests": true,
        "hasSuites": false,
        "totalTests": 3,
        "totalPasses": 3,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": true,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 27
      },
      {
        "title": "@post",
        "suites": [],
        "tests": [
          {
            "title": "should return a 201 code after posting",
            "fullTitle": "@post should return a 201 code after posting",
            "timedOut": false,
            "duration": 82,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "utils.httpPOST(<span class=\"hljs-string\">'/posts'</span>, {})<br>    .send({title: <span class=\"hljs-string\">'foo'</span>, body: <span class=\"hljs-string\">'bar'</span>, userId: <span class=\"hljs-number\">1</span>})<br>    .expect(<span class=\"hljs-string\">'content-type'</span>, <span class=\"hljs-string\">'application/json; charset=utf-8'</span>)<br>    .expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">res</span>) </span>{<br>        <span class=\"hljs-keyword\">const</span> response = res.body;<br>        <span class=\"hljs-comment\">//console.log(response);</span><br>        expect(response.title).to.equal(<span class=\"hljs-string\">'foo'</span>);<br>        expect(response.body).to.equal(<span class=\"hljs-string\">'bar'</span>);<br>        expect(response.userId).to.equal(<span class=\"hljs-number\">1</span>);<br>    })<br>    .expect(<span class=\"hljs-number\">201</span>, done)",
            "isRoot": false,
            "uuid": "e9bc19d4-0b54-4d75-ad87-7cb0ad700d16",
            "parentUUID": "8e51f744-70a8-46d7-b1a2-675e8be177b5",
            "skipped": false
          }
        ],
        "pending": [],
        "root": false,
        "_timeout": 3000,
        "file": "/test/posts/POST/postPOST_201.js",
        "uuid": "8e51f744-70a8-46d7-b1a2-675e8be177b5",
        "fullFile": "/Users/garsenius/github/apiAutomatedTest/test/posts/POST/postPOST_201.js",
        "passes": [
          {
            "title": "should return a 201 code after posting",
            "fullTitle": "@post should return a 201 code after posting",
            "timedOut": false,
            "duration": 82,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "utils.httpPOST(<span class=\"hljs-string\">'/posts'</span>, {})<br>    .send({title: <span class=\"hljs-string\">'foo'</span>, body: <span class=\"hljs-string\">'bar'</span>, userId: <span class=\"hljs-number\">1</span>})<br>    .expect(<span class=\"hljs-string\">'content-type'</span>, <span class=\"hljs-string\">'application/json; charset=utf-8'</span>)<br>    .expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">res</span>) </span>{<br>        <span class=\"hljs-keyword\">const</span> response = res.body;<br>        <span class=\"hljs-comment\">//console.log(response);</span><br>        expect(response.title).to.equal(<span class=\"hljs-string\">'foo'</span>);<br>        expect(response.body).to.equal(<span class=\"hljs-string\">'bar'</span>);<br>        expect(response.userId).to.equal(<span class=\"hljs-number\">1</span>);<br>    })<br>    .expect(<span class=\"hljs-number\">201</span>, done)",
            "isRoot": false,
            "uuid": "e9bc19d4-0b54-4d75-ad87-7cb0ad700d16",
            "parentUUID": "8e51f744-70a8-46d7-b1a2-675e8be177b5",
            "skipped": false
          }
        ],
        "failures": [],
        "skipped": [],
        "hasTests": true,
        "hasSuites": false,
        "totalTests": 1,
        "totalPasses": 1,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": true,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 82
      },
      {
        "title": "@put",
        "suites": [],
        "tests": [
          {
            "title": "should return a 200 code after updating postId 1",
            "fullTitle": "@put should return a 200 code after updating postId 1",
            "timedOut": false,
            "duration": 11,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "utils.httpPUT(<span class=\"hljs-string\">'/posts/20'</span>, {})<br>    .send(<br>        {<br>            id: <span class=\"hljs-number\">20</span>,<br>            title: <span class=\"hljs-string\">'candy crush'</span>,<br>            body: <span class=\"hljs-string\">'sodalicious juicy'</span>,<br>            userId: <span class=\"hljs-number\">1</span><br>        }<br>    )<br>    .expect(<span class=\"hljs-string\">'content-type'</span>, <span class=\"hljs-string\">'application/json; charset=utf-8'</span>)<br>    .expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">res</span>) </span>{<br>        <span class=\"hljs-keyword\">const</span> response = res.body;<br>        <span class=\"hljs-comment\">//console.log(response);</span><br>        expect(response.id).to.equal(<span class=\"hljs-string\">'20'</span>);<br>        expect(response.title).to.equal(<span class=\"hljs-string\">'candy crush'</span>);<br>        expect(response.body).to.equal(<span class=\"hljs-string\">'sodalicious juicy'</span>);<br>        expect(response.userId).to.equal(<span class=\"hljs-number\">1</span>);<br>    })<br>    .expect(<span class=\"hljs-number\">200</span>, done);",
            "isRoot": false,
            "uuid": "b5a5341a-acf3-427a-baf6-e99931649838",
            "parentUUID": "687d97bd-4758-4350-aab2-0872e6006439",
            "skipped": false
          },
          {
            "title": "should return a 200 code after updating postId 1",
            "fullTitle": "@put should return a 200 code after updating postId 1",
            "timedOut": false,
            "duration": 7,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "utils.httpPUT(<span class=\"hljs-string\">'/posts/1'</span>, {})<br>    .send(<br>        {<br>            id: <span class=\"hljs-number\">1</span>,<br>            title: <span class=\"hljs-string\">'foo'</span>,<br>            body: <span class=\"hljs-string\">'bar'</span>,<br>            userId: <span class=\"hljs-number\">1</span><br>        }<br>    )<br>    .expect(<span class=\"hljs-string\">'content-type'</span>, <span class=\"hljs-string\">'application/json; charset=utf-8'</span>)<br>    .expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">res</span>) </span>{<br>        <span class=\"hljs-keyword\">const</span> response = res.body;<br>        <span class=\"hljs-comment\">//console.log(response);</span><br>        expect(response.id).to.equal(<span class=\"hljs-string\">'1'</span>);<br>        expect(response.title).to.equal(<span class=\"hljs-string\">'foo'</span>);<br>        expect(response.body).to.equal(<span class=\"hljs-string\">'bar'</span>);<br>        expect(response.userId).to.equal(<span class=\"hljs-number\">1</span>);<br>    })<br>    .expect(<span class=\"hljs-number\">200</span>, done);",
            "isRoot": false,
            "uuid": "25ffac55-b8c5-4ea5-af10-fd751f99e3ae",
            "parentUUID": "687d97bd-4758-4350-aab2-0872e6006439",
            "skipped": false
          }
        ],
        "pending": [],
        "root": false,
        "_timeout": 3000,
        "file": "/test/posts/PUT/updatePOST_200.js",
        "uuid": "687d97bd-4758-4350-aab2-0872e6006439",
        "fullFile": "/Users/garsenius/github/apiAutomatedTest/test/posts/PUT/updatePOST_200.js",
        "passes": [
          {
            "title": "should return a 200 code after updating postId 1",
            "fullTitle": "@put should return a 200 code after updating postId 1",
            "timedOut": false,
            "duration": 11,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "utils.httpPUT(<span class=\"hljs-string\">'/posts/20'</span>, {})<br>    .send(<br>        {<br>            id: <span class=\"hljs-number\">20</span>,<br>            title: <span class=\"hljs-string\">'candy crush'</span>,<br>            body: <span class=\"hljs-string\">'sodalicious juicy'</span>,<br>            userId: <span class=\"hljs-number\">1</span><br>        }<br>    )<br>    .expect(<span class=\"hljs-string\">'content-type'</span>, <span class=\"hljs-string\">'application/json; charset=utf-8'</span>)<br>    .expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">res</span>) </span>{<br>        <span class=\"hljs-keyword\">const</span> response = res.body;<br>        <span class=\"hljs-comment\">//console.log(response);</span><br>        expect(response.id).to.equal(<span class=\"hljs-string\">'20'</span>);<br>        expect(response.title).to.equal(<span class=\"hljs-string\">'candy crush'</span>);<br>        expect(response.body).to.equal(<span class=\"hljs-string\">'sodalicious juicy'</span>);<br>        expect(response.userId).to.equal(<span class=\"hljs-number\">1</span>);<br>    })<br>    .expect(<span class=\"hljs-number\">200</span>, done);",
            "isRoot": false,
            "uuid": "b5a5341a-acf3-427a-baf6-e99931649838",
            "parentUUID": "687d97bd-4758-4350-aab2-0872e6006439",
            "skipped": false
          },
          {
            "title": "should return a 200 code after updating postId 1",
            "fullTitle": "@put should return a 200 code after updating postId 1",
            "timedOut": false,
            "duration": 7,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "utils.httpPUT(<span class=\"hljs-string\">'/posts/1'</span>, {})<br>    .send(<br>        {<br>            id: <span class=\"hljs-number\">1</span>,<br>            title: <span class=\"hljs-string\">'foo'</span>,<br>            body: <span class=\"hljs-string\">'bar'</span>,<br>            userId: <span class=\"hljs-number\">1</span><br>        }<br>    )<br>    .expect(<span class=\"hljs-string\">'content-type'</span>, <span class=\"hljs-string\">'application/json; charset=utf-8'</span>)<br>    .expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">res</span>) </span>{<br>        <span class=\"hljs-keyword\">const</span> response = res.body;<br>        <span class=\"hljs-comment\">//console.log(response);</span><br>        expect(response.id).to.equal(<span class=\"hljs-string\">'1'</span>);<br>        expect(response.title).to.equal(<span class=\"hljs-string\">'foo'</span>);<br>        expect(response.body).to.equal(<span class=\"hljs-string\">'bar'</span>);<br>        expect(response.userId).to.equal(<span class=\"hljs-number\">1</span>);<br>    })<br>    .expect(<span class=\"hljs-number\">200</span>, done);",
            "isRoot": false,
            "uuid": "25ffac55-b8c5-4ea5-af10-fd751f99e3ae",
            "parentUUID": "687d97bd-4758-4350-aab2-0872e6006439",
            "skipped": false
          }
        ],
        "failures": [],
        "skipped": [],
        "hasTests": true,
        "hasSuites": false,
        "totalTests": 2,
        "totalPasses": 2,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": true,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 18
      },
      {
        "title": "@get",
        "suites": [],
        "tests": [
          {
            "title": "should return a 200 OK status code for PostID 1",
            "fullTitle": "@get should return a 200 OK status code for PostID 1",
            "timedOut": false,
            "duration": 8,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "utils.httpGET(<span class=\"hljs-string\">'/users/1'</span>, {})<br>    .set(<span class=\"hljs-string\">'content-type'</span>, <span class=\"hljs-string\">'application/json; charset=utf-8'</span>)<br>    .expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">res</span>) </span>{<br>        <span class=\"hljs-keyword\">const</span> response = res.body;<br>        <span class=\"hljs-comment\">//console.log(response);</span><br>        <span class=\"hljs-keyword\">return</span> assert.deepEqual(response,<br>            {<br>                <span class=\"hljs-string\">\"id\"</span>: <span class=\"hljs-number\">1</span>,<br>                <span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"Leanne Graham\"</span>,<br>                <span class=\"hljs-string\">\"username\"</span>: <span class=\"hljs-string\">\"Bret\"</span>,<br>                <span class=\"hljs-string\">\"email\"</span>: <span class=\"hljs-string\">\"Sincere@april.biz\"</span>,<br>                <span class=\"hljs-string\">\"address\"</span>: {<br>                    <span class=\"hljs-string\">\"street\"</span>: <span class=\"hljs-string\">\"Kulas Light\"</span>,<br>                    <span class=\"hljs-string\">\"suite\"</span>: <span class=\"hljs-string\">\"Apt. 556\"</span>,<br>                    <span class=\"hljs-string\">\"city\"</span>: <span class=\"hljs-string\">\"Gwenborough\"</span>,<br>                    <span class=\"hljs-string\">\"zipcode\"</span>: <span class=\"hljs-string\">\"92998-3874\"</span>,<br>                    <span class=\"hljs-string\">\"geo\"</span>: {<br>                        <span class=\"hljs-string\">\"lat\"</span>: <span class=\"hljs-string\">\"-37.3159\"</span>,<br>                        <span class=\"hljs-string\">\"lng\"</span>: <span class=\"hljs-string\">\"81.1496\"</span><br>                    }<br>                },<br>                <span class=\"hljs-string\">\"phone\"</span>: <span class=\"hljs-string\">\"1-770-736-8031 x56442\"</span>,<br>                <span class=\"hljs-string\">\"website\"</span>: <span class=\"hljs-string\">\"hildegard.org\"</span>,<br>                <span class=\"hljs-string\">\"company\"</span>: {<br>                    <span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"Romaguera-Crona\"</span>,<br>                    <span class=\"hljs-string\">\"catchPhrase\"</span>: <span class=\"hljs-string\">\"Multi-layered client-server neural-net\"</span>,<br>                    <span class=\"hljs-string\">\"bs\"</span>: <span class=\"hljs-string\">\"harness real-time e-markets\"</span><br>                }<br>            })<br>    })<br>    .expect(<span class=\"hljs-number\">200</span>, done);",
            "isRoot": false,
            "uuid": "77ac323e-18a3-4fd1-9884-6c64483146b3",
            "parentUUID": "30663849-7156-433e-a0bd-24672ec8bd09",
            "skipped": false
          },
          {
            "title": "should return a 200 OK status code for userId 1 using expect method",
            "fullTitle": "@get should return a 200 OK status code for userId 1 using expect method",
            "timedOut": false,
            "duration": 8,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "utils.httpGET(<span class=\"hljs-string\">'/users/1'</span>, {})<br>    .set(<span class=\"hljs-string\">'content-type'</span>, <span class=\"hljs-string\">'application/json; charset=utf-8'</span>)<br>    .expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">res</span>) </span>{<br>        <span class=\"hljs-keyword\">const</span> response = res.body;<br>        <span class=\"hljs-comment\">//console.log(response);</span><br>        expect(response).to.have.property(<span class=\"hljs-string\">'id'</span>);<br>        expect(response).to.have.property(<span class=\"hljs-string\">'name'</span>);<br>        expect(response).to.have.property(<span class=\"hljs-string\">'username'</span>);<br>        expect(response).to.have.property(<span class=\"hljs-string\">'email'</span>);<br>        expect(response.id).to.equal(<span class=\"hljs-number\">1</span>);<br>        expect(response.email).to.equal(<span class=\"hljs-string\">'Sincere@april.biz'</span>);<br>        expect(response.address.city).to.equal(<span class=\"hljs-string\">'Gwenborough'</span>);<br><br>    })<br>    .expect(<span class=\"hljs-number\">200</span>, done);",
            "isRoot": false,
            "uuid": "eab4d426-909e-4145-a6a9-d6a993126f27",
            "parentUUID": "30663849-7156-433e-a0bd-24672ec8bd09",
            "skipped": false
          },
          {
            "title": "should return a 200 OK status code for GET /users using expect method",
            "fullTitle": "@get should return a 200 OK status code for GET /users using expect method",
            "timedOut": false,
            "duration": 10,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "utils.httpGET(<span class=\"hljs-string\">'/users/'</span>, {})<br>    .set(<span class=\"hljs-string\">'content-type'</span>, <span class=\"hljs-string\">'application/json; charset=utf-8'</span>)<br>    <span class=\"hljs-comment\">// .expect(function (res) {</span><br>    <span class=\"hljs-comment\">//     const response = res.body;</span><br>    <span class=\"hljs-comment\">//     console.log(response);</span><br>    <span class=\"hljs-comment\">// })</span><br>    .expect(<span class=\"hljs-number\">200</span>, done);",
            "isRoot": false,
            "uuid": "554ef8d3-c31b-469f-bf46-eb44c71a9d98",
            "parentUUID": "30663849-7156-433e-a0bd-24672ec8bd09",
            "skipped": false
          }
        ],
        "pending": [],
        "root": false,
        "_timeout": 3000,
        "file": "/test/users/GET/getUSER_200.js",
        "uuid": "30663849-7156-433e-a0bd-24672ec8bd09",
        "fullFile": "/Users/garsenius/github/apiAutomatedTest/test/users/GET/getUSER_200.js",
        "passes": [
          {
            "title": "should return a 200 OK status code for PostID 1",
            "fullTitle": "@get should return a 200 OK status code for PostID 1",
            "timedOut": false,
            "duration": 8,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "utils.httpGET(<span class=\"hljs-string\">'/users/1'</span>, {})<br>    .set(<span class=\"hljs-string\">'content-type'</span>, <span class=\"hljs-string\">'application/json; charset=utf-8'</span>)<br>    .expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">res</span>) </span>{<br>        <span class=\"hljs-keyword\">const</span> response = res.body;<br>        <span class=\"hljs-comment\">//console.log(response);</span><br>        <span class=\"hljs-keyword\">return</span> assert.deepEqual(response,<br>            {<br>                <span class=\"hljs-string\">\"id\"</span>: <span class=\"hljs-number\">1</span>,<br>                <span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"Leanne Graham\"</span>,<br>                <span class=\"hljs-string\">\"username\"</span>: <span class=\"hljs-string\">\"Bret\"</span>,<br>                <span class=\"hljs-string\">\"email\"</span>: <span class=\"hljs-string\">\"Sincere@april.biz\"</span>,<br>                <span class=\"hljs-string\">\"address\"</span>: {<br>                    <span class=\"hljs-string\">\"street\"</span>: <span class=\"hljs-string\">\"Kulas Light\"</span>,<br>                    <span class=\"hljs-string\">\"suite\"</span>: <span class=\"hljs-string\">\"Apt. 556\"</span>,<br>                    <span class=\"hljs-string\">\"city\"</span>: <span class=\"hljs-string\">\"Gwenborough\"</span>,<br>                    <span class=\"hljs-string\">\"zipcode\"</span>: <span class=\"hljs-string\">\"92998-3874\"</span>,<br>                    <span class=\"hljs-string\">\"geo\"</span>: {<br>                        <span class=\"hljs-string\">\"lat\"</span>: <span class=\"hljs-string\">\"-37.3159\"</span>,<br>                        <span class=\"hljs-string\">\"lng\"</span>: <span class=\"hljs-string\">\"81.1496\"</span><br>                    }<br>                },<br>                <span class=\"hljs-string\">\"phone\"</span>: <span class=\"hljs-string\">\"1-770-736-8031 x56442\"</span>,<br>                <span class=\"hljs-string\">\"website\"</span>: <span class=\"hljs-string\">\"hildegard.org\"</span>,<br>                <span class=\"hljs-string\">\"company\"</span>: {<br>                    <span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"Romaguera-Crona\"</span>,<br>                    <span class=\"hljs-string\">\"catchPhrase\"</span>: <span class=\"hljs-string\">\"Multi-layered client-server neural-net\"</span>,<br>                    <span class=\"hljs-string\">\"bs\"</span>: <span class=\"hljs-string\">\"harness real-time e-markets\"</span><br>                }<br>            })<br>    })<br>    .expect(<span class=\"hljs-number\">200</span>, done);",
            "isRoot": false,
            "uuid": "77ac323e-18a3-4fd1-9884-6c64483146b3",
            "parentUUID": "30663849-7156-433e-a0bd-24672ec8bd09",
            "skipped": false
          },
          {
            "title": "should return a 200 OK status code for userId 1 using expect method",
            "fullTitle": "@get should return a 200 OK status code for userId 1 using expect method",
            "timedOut": false,
            "duration": 8,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "utils.httpGET(<span class=\"hljs-string\">'/users/1'</span>, {})<br>    .set(<span class=\"hljs-string\">'content-type'</span>, <span class=\"hljs-string\">'application/json; charset=utf-8'</span>)<br>    .expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">res</span>) </span>{<br>        <span class=\"hljs-keyword\">const</span> response = res.body;<br>        <span class=\"hljs-comment\">//console.log(response);</span><br>        expect(response).to.have.property(<span class=\"hljs-string\">'id'</span>);<br>        expect(response).to.have.property(<span class=\"hljs-string\">'name'</span>);<br>        expect(response).to.have.property(<span class=\"hljs-string\">'username'</span>);<br>        expect(response).to.have.property(<span class=\"hljs-string\">'email'</span>);<br>        expect(response.id).to.equal(<span class=\"hljs-number\">1</span>);<br>        expect(response.email).to.equal(<span class=\"hljs-string\">'Sincere@april.biz'</span>);<br>        expect(response.address.city).to.equal(<span class=\"hljs-string\">'Gwenborough'</span>);<br><br>    })<br>    .expect(<span class=\"hljs-number\">200</span>, done);",
            "isRoot": false,
            "uuid": "eab4d426-909e-4145-a6a9-d6a993126f27",
            "parentUUID": "30663849-7156-433e-a0bd-24672ec8bd09",
            "skipped": false
          },
          {
            "title": "should return a 200 OK status code for GET /users using expect method",
            "fullTitle": "@get should return a 200 OK status code for GET /users using expect method",
            "timedOut": false,
            "duration": 10,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "utils.httpGET(<span class=\"hljs-string\">'/users/'</span>, {})<br>    .set(<span class=\"hljs-string\">'content-type'</span>, <span class=\"hljs-string\">'application/json; charset=utf-8'</span>)<br>    <span class=\"hljs-comment\">// .expect(function (res) {</span><br>    <span class=\"hljs-comment\">//     const response = res.body;</span><br>    <span class=\"hljs-comment\">//     console.log(response);</span><br>    <span class=\"hljs-comment\">// })</span><br>    .expect(<span class=\"hljs-number\">200</span>, done);",
            "isRoot": false,
            "uuid": "554ef8d3-c31b-469f-bf46-eb44c71a9d98",
            "parentUUID": "30663849-7156-433e-a0bd-24672ec8bd09",
            "skipped": false
          }
        ],
        "failures": [],
        "skipped": [],
        "hasTests": true,
        "hasSuites": false,
        "totalTests": 3,
        "totalPasses": 3,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": true,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 26
      }
    ],
    "tests": [],
    "pending": [],
    "root": true,
    "_timeout": 3000,
    "uuid": "8e066e8e-6148-45b6-a9e9-a28783f951ff",
    "fullFile": "",
    "file": "",
    "passes": [],
    "failures": [],
    "skipped": [],
    "hasTests": false,
    "hasSuites": true,
    "totalTests": 0,
    "totalPasses": 0,
    "totalFailures": 0,
    "totalPending": 0,
    "totalSkipped": 0,
    "hasPasses": false,
    "hasFailures": false,
    "hasPending": false,
    "hasSkipped": false,
    "duration": 0,
    "rootEmpty": true
  },
  "allTests": [
    {
      "title": "should return a 200 OK status code for Album ID 1",
      "fullTitle": "@get should return a 200 OK status code for Album ID 1",
      "timedOut": false,
      "duration": 35,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "utils.httpGET(<span class=\"hljs-string\">'/albums/1'</span>, {})<br>    .set(<span class=\"hljs-string\">'content-type'</span>, <span class=\"hljs-string\">'application/json; charset=utf-8'</span>)<br>    .expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">res</span>) </span>{<br>        <span class=\"hljs-keyword\">const</span> response = res.body;<br>        <span class=\"hljs-comment\">//console.log(response);</span><br>        <span class=\"hljs-keyword\">return</span> assert.deepEqual(response,<br>            {<br>                <span class=\"hljs-string\">\"userId\"</span>: <span class=\"hljs-number\">1</span>,<br>                <span class=\"hljs-string\">\"id\"</span>: <span class=\"hljs-number\">1</span>,<br>                <span class=\"hljs-string\">\"title\"</span>: <span class=\"hljs-string\">\"quidem molestiae enim\"</span><br>            })<br>    })<br>    .expect(<span class=\"hljs-number\">200</span>, done);",
      "isRoot": false,
      "uuid": "0f0aab19-182f-4287-8074-1fc4be6da470",
      "parentUUID": "ab7abcbc-8fff-46a4-a5db-5b87eba3d260",
      "skipped": false
    },
    {
      "title": "should return a 200 OK status code for Album ID 1 using expect method",
      "fullTitle": "@get should return a 200 OK status code for Album ID 1 using expect method",
      "timedOut": false,
      "duration": 16,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "utils.httpGET(<span class=\"hljs-string\">'/albums/1'</span>, {})<br>    .set(<span class=\"hljs-string\">'content-type'</span>, <span class=\"hljs-string\">'application/json; charset=utf-8'</span>)<br>    .expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">res</span>) </span>{<br>         <span class=\"hljs-keyword\">const</span> response = res.body;<br>        <span class=\"hljs-comment\">// console.log(response);</span><br>        expect(response).to.have.property(<span class=\"hljs-string\">'userId'</span>);<br>        expect(response).to.have.property(<span class=\"hljs-string\">'id'</span>);<br>        expect(response).to.have.property(<span class=\"hljs-string\">'title'</span>);<br>        expect(response.id).to.equal(<span class=\"hljs-number\">1</span>);<br>        expect(response.userId).to.equal(<span class=\"hljs-number\">1</span>);<br>        expect(response.title).to.equal(<span class=\"hljs-string\">'quidem molestiae enim'</span>);<br><br>    })<br>    .expect(<span class=\"hljs-number\">200</span>, done);",
      "isRoot": false,
      "uuid": "5976c032-7c1a-4107-bed7-3ce02c482bf3",
      "parentUUID": "ab7abcbc-8fff-46a4-a5db-5b87eba3d260",
      "skipped": false
    },
    {
      "title": "should return a 200 OK status code for GET /comments using expect method",
      "fullTitle": "@get should return a 200 OK status code for GET /comments using expect method",
      "timedOut": false,
      "duration": 17,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "utils.httpGET(<span class=\"hljs-string\">'/albums/'</span>, {})<br>    .set(<span class=\"hljs-string\">'content-type'</span>, <span class=\"hljs-string\">'application/json; charset=utf-8'</span>)<br>    <span class=\"hljs-comment\">// .expect(function (res) {</span><br>    <span class=\"hljs-comment\">//     const response = res.body;</span><br>    <span class=\"hljs-comment\">//     console.log(response);</span><br>    <span class=\"hljs-comment\">// })</span><br>    .expect(<span class=\"hljs-number\">200</span>, done);",
      "isRoot": false,
      "uuid": "ee43d9d1-8b14-4423-a048-3da0da4c3f57",
      "parentUUID": "ab7abcbc-8fff-46a4-a5db-5b87eba3d260",
      "skipped": false
    },
    {
      "title": "should return a 200 OK status code for Comment ID 1",
      "fullTitle": "@get should return a 200 OK status code for Comment ID 1",
      "timedOut": false,
      "duration": 14,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "utils.httpGET(<span class=\"hljs-string\">'/comments/1'</span>, {})<br>    .set(<span class=\"hljs-string\">'content-type'</span>, <span class=\"hljs-string\">'application/json; charset=utf-8'</span>)<br>    .expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">res</span>) </span>{<br>        <span class=\"hljs-keyword\">const</span> response = res.body;<br>        <span class=\"hljs-comment\">//console.log(response);</span><br>        <span class=\"hljs-keyword\">return</span> assert.deepEqual(response,<br>            {<br>                <span class=\"hljs-string\">\"postId\"</span>: <span class=\"hljs-number\">1</span>,<br>                <span class=\"hljs-string\">\"id\"</span>: <span class=\"hljs-number\">1</span>,<br>                <span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"id labore ex et quam laborum\"</span>,<br>                <span class=\"hljs-string\">\"email\"</span>: <span class=\"hljs-string\">\"Eliseo@gardner.biz\"</span>,<br>                <span class=\"hljs-string\">\"body\"</span>: <span class=\"hljs-string\">\"laudantium enim quasi est quidem magnam voluptate ipsam eos\\ntempora quo necessitatibus\\ndolor quam autem quasi\\nreiciendis et nam sapiente accusantium\"</span><br>            })<br>    })<br>    .expect(<span class=\"hljs-number\">200</span>, done);",
      "isRoot": false,
      "uuid": "321f678e-b29b-4b66-85ea-be34460b56da",
      "parentUUID": "3cd3811b-5cb1-4423-8894-dcf0bd8a7d6f",
      "skipped": false
    },
    {
      "title": "should return a 200 OK status code for comment ID 1 using expect method",
      "fullTitle": "@get should return a 200 OK status code for comment ID 1 using expect method",
      "timedOut": false,
      "duration": 14,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "utils.httpGET(<span class=\"hljs-string\">'/comments/1'</span>, {})<br>    .set(<span class=\"hljs-string\">'content-type'</span>, <span class=\"hljs-string\">'application/json; charset=utf-8'</span>)<br>    .expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">res</span>) </span>{<br>        <span class=\"hljs-keyword\">const</span> response = res.body;<br>        <span class=\"hljs-comment\">//console.log(response);</span><br>        expect(response).to.have.property(<span class=\"hljs-string\">'postId'</span>);<br>        expect(response).to.have.property(<span class=\"hljs-string\">'id'</span>);<br>        expect(response).to.have.property(<span class=\"hljs-string\">'name'</span>);<br>        expect(response).to.have.property(<span class=\"hljs-string\">'email'</span>);<br>        expect(response).to.have.property(<span class=\"hljs-string\">'body'</span>);<br>        expect(response.id).to.equal(<span class=\"hljs-number\">1</span>);<br>        expect(response.email).to.equal(<span class=\"hljs-string\">'Eliseo@gardner.biz'</span>);<br>        expect(response.name).to.equal(<span class=\"hljs-string\">'id labore ex et quam laborum'</span>);<br><br>    })<br>    .expect(<span class=\"hljs-number\">200</span>, done);",
      "isRoot": false,
      "uuid": "ae6b3baf-9257-4a97-810c-b65a68ca87a8",
      "parentUUID": "3cd3811b-5cb1-4423-8894-dcf0bd8a7d6f",
      "skipped": false
    },
    {
      "title": "should return a 200 OK status code for GET /comments using expect method",
      "fullTitle": "@get should return a 200 OK status code for GET /comments using expect method",
      "timedOut": false,
      "duration": 31,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "utils.httpGET(<span class=\"hljs-string\">'/comments/'</span>, {})<br>    .set(<span class=\"hljs-string\">'content-type'</span>, <span class=\"hljs-string\">'application/json; charset=utf-8'</span>)<br>    <span class=\"hljs-comment\">// .expect(function (res) {</span><br>    <span class=\"hljs-comment\">//     const response = res.body;</span><br>    <span class=\"hljs-comment\">//     console.log(response);</span><br>    <span class=\"hljs-comment\">// })</span><br>    .expect(<span class=\"hljs-number\">200</span>, done);",
      "isRoot": false,
      "uuid": "7edda9fa-2744-4ab8-bffd-67fb0ee5d20f",
      "parentUUID": "3cd3811b-5cb1-4423-8894-dcf0bd8a7d6f",
      "skipped": false
    },
    {
      "title": "should return a 200 code after deleting fake postId 100",
      "fullTitle": "@delete should return a 200 code after deleting fake postId 100",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "utils.httpDELETE(<span class=\"hljs-string\">'/posts/101'</span>, {})<br>   .send(<br>       {<br>           id: <span class=\"hljs-number\">101</span>,<br>           title: <span class=\"hljs-string\">'foo'</span>,<br>           body: <span class=\"hljs-string\">'bar'</span>,<br>           userId: <span class=\"hljs-number\">1</span><br>       }<br>   )<br>   .expect(<span class=\"hljs-string\">'content-type'</span>, <span class=\"hljs-string\">'application/json; charset=utf-8'</span>)<br>   .expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">res</span>) </span>{<br>       <span class=\"hljs-keyword\">const</span> response = res.body;<br>       <span class=\"hljs-comment\">//console.log(response)</span><br>       <span class=\"hljs-keyword\">return</span> assert.deepEqual(response,<br>           {} <span class=\"hljs-comment\">//return empty response</span><br>       );<br>   })<br>    .expect(<span class=\"hljs-number\">200</span>);",
      "isRoot": false,
      "uuid": "d69f86ee-33c1-4995-b83c-dbb715d276ac",
      "parentUUID": "7845ba57-242f-45e6-8bad-71eff861dfe0",
      "skipped": false
    },
    {
      "title": "should return a 200 OK status code for PostID 1",
      "fullTitle": "@get should return a 200 OK status code for PostID 1",
      "timedOut": false,
      "duration": 9,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "utils.httpGET(<span class=\"hljs-string\">'/posts/1'</span>, {})<br>    .set(<span class=\"hljs-string\">'content-type'</span>, <span class=\"hljs-string\">'application/json; charset=utf-8'</span>)<br>    .expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">res</span>) </span>{<br>        <span class=\"hljs-keyword\">const</span> response = res.body;<br>        <span class=\"hljs-comment\">//console.log(response);</span><br>        <span class=\"hljs-keyword\">return</span> assert.deepEqual(response,<br>            {<br>                <span class=\"hljs-string\">\"id\"</span>: <span class=\"hljs-string\">\"1\"</span>,<br>                <span class=\"hljs-string\">\"title\"</span>: <span class=\"hljs-string\">\"foo\"</span>,<br>                <span class=\"hljs-string\">\"body\"</span>: <span class=\"hljs-string\">\"bar\"</span>,<br>                <span class=\"hljs-string\">\"userId\"</span>: <span class=\"hljs-number\">1</span><br>            })<br>    })<br>    .expect(<span class=\"hljs-number\">200</span>, done);",
      "isRoot": false,
      "uuid": "db538fa7-fac6-4b33-994f-8e293dfa0c4b",
      "parentUUID": "b08b9dd8-a3d6-401e-a260-db93867b2d1b",
      "skipped": false
    },
    {
      "title": "should return a 200 OK status code for PostID 1 using expect method",
      "fullTitle": "@get should return a 200 OK status code for PostID 1 using expect method",
      "timedOut": false,
      "duration": 7,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "utils.httpGET(<span class=\"hljs-string\">'/posts/1'</span>, {})<br>    .set(<span class=\"hljs-string\">'content-type'</span>, <span class=\"hljs-string\">'application/json; charset=utf-8'</span>)<br>    .expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">res</span>) </span>{<br>        <span class=\"hljs-keyword\">const</span> response = res.body;<br>        <span class=\"hljs-comment\">//console.log(response);</span><br>        expect(response).to.have.property(<span class=\"hljs-string\">'id'</span>);<br>        expect(response).to.have.property(<span class=\"hljs-string\">'title'</span>);<br>        expect(response).to.have.property(<span class=\"hljs-string\">'body'</span>);<br>        expect(response).to.have.property(<span class=\"hljs-string\">'userId'</span>);<br>        expect(response.id).to.equal(<span class=\"hljs-string\">'1'</span>);<br>    })<br>    .expect(<span class=\"hljs-number\">200</span>, done);",
      "isRoot": false,
      "uuid": "a2eb2884-13c1-472f-9896-017132e00d9e",
      "parentUUID": "b08b9dd8-a3d6-401e-a260-db93867b2d1b",
      "skipped": false
    },
    {
      "title": "should return a 200 OK status code for PostID 1 using expect method",
      "fullTitle": "@get should return a 200 OK status code for PostID 1 using expect method",
      "timedOut": false,
      "duration": 11,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "utils.httpGET(<span class=\"hljs-string\">'/posts/'</span>, {})<br>    .set(<span class=\"hljs-string\">'content-type'</span>, <span class=\"hljs-string\">'application/json; charset=utf-8'</span>)<br>    <span class=\"hljs-comment\">// .expect(function (res) {</span><br>    <span class=\"hljs-comment\">//     const response = res.body;</span><br>    <span class=\"hljs-comment\">//     console.log(response);</span><br>    <span class=\"hljs-comment\">// })</span><br>    .expect(<span class=\"hljs-number\">200</span>, done);",
      "isRoot": false,
      "uuid": "f6307fab-628b-4983-904d-dfd537e761ef",
      "parentUUID": "b08b9dd8-a3d6-401e-a260-db93867b2d1b",
      "skipped": false
    },
    {
      "title": "should return a 201 code after posting",
      "fullTitle": "@post should return a 201 code after posting",
      "timedOut": false,
      "duration": 82,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "utils.httpPOST(<span class=\"hljs-string\">'/posts'</span>, {})<br>    .send({title: <span class=\"hljs-string\">'foo'</span>, body: <span class=\"hljs-string\">'bar'</span>, userId: <span class=\"hljs-number\">1</span>})<br>    .expect(<span class=\"hljs-string\">'content-type'</span>, <span class=\"hljs-string\">'application/json; charset=utf-8'</span>)<br>    .expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">res</span>) </span>{<br>        <span class=\"hljs-keyword\">const</span> response = res.body;<br>        <span class=\"hljs-comment\">//console.log(response);</span><br>        expect(response.title).to.equal(<span class=\"hljs-string\">'foo'</span>);<br>        expect(response.body).to.equal(<span class=\"hljs-string\">'bar'</span>);<br>        expect(response.userId).to.equal(<span class=\"hljs-number\">1</span>);<br>    })<br>    .expect(<span class=\"hljs-number\">201</span>, done)",
      "isRoot": false,
      "uuid": "b5d2318f-fc9b-4840-96a0-9794ff0669c0",
      "parentUUID": "8e51f744-70a8-46d7-b1a2-675e8be177b5",
      "skipped": false
    },
    {
      "title": "should return a 200 code after updating postId 1",
      "fullTitle": "@put should return a 200 code after updating postId 1",
      "timedOut": false,
      "duration": 11,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "utils.httpPUT(<span class=\"hljs-string\">'/posts/20'</span>, {})<br>    .send(<br>        {<br>            id: <span class=\"hljs-number\">20</span>,<br>            title: <span class=\"hljs-string\">'candy crush'</span>,<br>            body: <span class=\"hljs-string\">'sodalicious juicy'</span>,<br>            userId: <span class=\"hljs-number\">1</span><br>        }<br>    )<br>    .expect(<span class=\"hljs-string\">'content-type'</span>, <span class=\"hljs-string\">'application/json; charset=utf-8'</span>)<br>    .expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">res</span>) </span>{<br>        <span class=\"hljs-keyword\">const</span> response = res.body;<br>        <span class=\"hljs-comment\">//console.log(response);</span><br>        expect(response.id).to.equal(<span class=\"hljs-string\">'20'</span>);<br>        expect(response.title).to.equal(<span class=\"hljs-string\">'candy crush'</span>);<br>        expect(response.body).to.equal(<span class=\"hljs-string\">'sodalicious juicy'</span>);<br>        expect(response.userId).to.equal(<span class=\"hljs-number\">1</span>);<br>    })<br>    .expect(<span class=\"hljs-number\">200</span>, done);",
      "isRoot": false,
      "uuid": "cdfaa5ec-e1ac-450c-bb16-617f381e9af3",
      "parentUUID": "687d97bd-4758-4350-aab2-0872e6006439",
      "skipped": false
    },
    {
      "title": "should return a 200 code after updating postId 1",
      "fullTitle": "@put should return a 200 code after updating postId 1",
      "timedOut": false,
      "duration": 7,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "utils.httpPUT(<span class=\"hljs-string\">'/posts/1'</span>, {})<br>    .send(<br>        {<br>            id: <span class=\"hljs-number\">1</span>,<br>            title: <span class=\"hljs-string\">'foo'</span>,<br>            body: <span class=\"hljs-string\">'bar'</span>,<br>            userId: <span class=\"hljs-number\">1</span><br>        }<br>    )<br>    .expect(<span class=\"hljs-string\">'content-type'</span>, <span class=\"hljs-string\">'application/json; charset=utf-8'</span>)<br>    .expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">res</span>) </span>{<br>        <span class=\"hljs-keyword\">const</span> response = res.body;<br>        <span class=\"hljs-comment\">//console.log(response);</span><br>        expect(response.id).to.equal(<span class=\"hljs-string\">'1'</span>);<br>        expect(response.title).to.equal(<span class=\"hljs-string\">'foo'</span>);<br>        expect(response.body).to.equal(<span class=\"hljs-string\">'bar'</span>);<br>        expect(response.userId).to.equal(<span class=\"hljs-number\">1</span>);<br>    })<br>    .expect(<span class=\"hljs-number\">200</span>, done);",
      "isRoot": false,
      "uuid": "88145bd6-f717-4f05-85aa-72fa1b2a108f",
      "parentUUID": "687d97bd-4758-4350-aab2-0872e6006439",
      "skipped": false
    },
    {
      "title": "should return a 200 OK status code for PostID 1",
      "fullTitle": "@get should return a 200 OK status code for PostID 1",
      "timedOut": false,
      "duration": 8,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "utils.httpGET(<span class=\"hljs-string\">'/users/1'</span>, {})<br>    .set(<span class=\"hljs-string\">'content-type'</span>, <span class=\"hljs-string\">'application/json; charset=utf-8'</span>)<br>    .expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">res</span>) </span>{<br>        <span class=\"hljs-keyword\">const</span> response = res.body;<br>        <span class=\"hljs-comment\">//console.log(response);</span><br>        <span class=\"hljs-keyword\">return</span> assert.deepEqual(response,<br>            {<br>                <span class=\"hljs-string\">\"id\"</span>: <span class=\"hljs-number\">1</span>,<br>                <span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"Leanne Graham\"</span>,<br>                <span class=\"hljs-string\">\"username\"</span>: <span class=\"hljs-string\">\"Bret\"</span>,<br>                <span class=\"hljs-string\">\"email\"</span>: <span class=\"hljs-string\">\"Sincere@april.biz\"</span>,<br>                <span class=\"hljs-string\">\"address\"</span>: {<br>                    <span class=\"hljs-string\">\"street\"</span>: <span class=\"hljs-string\">\"Kulas Light\"</span>,<br>                    <span class=\"hljs-string\">\"suite\"</span>: <span class=\"hljs-string\">\"Apt. 556\"</span>,<br>                    <span class=\"hljs-string\">\"city\"</span>: <span class=\"hljs-string\">\"Gwenborough\"</span>,<br>                    <span class=\"hljs-string\">\"zipcode\"</span>: <span class=\"hljs-string\">\"92998-3874\"</span>,<br>                    <span class=\"hljs-string\">\"geo\"</span>: {<br>                        <span class=\"hljs-string\">\"lat\"</span>: <span class=\"hljs-string\">\"-37.3159\"</span>,<br>                        <span class=\"hljs-string\">\"lng\"</span>: <span class=\"hljs-string\">\"81.1496\"</span><br>                    }<br>                },<br>                <span class=\"hljs-string\">\"phone\"</span>: <span class=\"hljs-string\">\"1-770-736-8031 x56442\"</span>,<br>                <span class=\"hljs-string\">\"website\"</span>: <span class=\"hljs-string\">\"hildegard.org\"</span>,<br>                <span class=\"hljs-string\">\"company\"</span>: {<br>                    <span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"Romaguera-Crona\"</span>,<br>                    <span class=\"hljs-string\">\"catchPhrase\"</span>: <span class=\"hljs-string\">\"Multi-layered client-server neural-net\"</span>,<br>                    <span class=\"hljs-string\">\"bs\"</span>: <span class=\"hljs-string\">\"harness real-time e-markets\"</span><br>                }<br>            })<br>    })<br>    .expect(<span class=\"hljs-number\">200</span>, done);",
      "isRoot": false,
      "uuid": "0a4a9399-1f5a-4cfd-96df-4a6816089ff1",
      "parentUUID": "30663849-7156-433e-a0bd-24672ec8bd09",
      "skipped": false
    },
    {
      "title": "should return a 200 OK status code for userId 1 using expect method",
      "fullTitle": "@get should return a 200 OK status code for userId 1 using expect method",
      "timedOut": false,
      "duration": 8,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "utils.httpGET(<span class=\"hljs-string\">'/users/1'</span>, {})<br>    .set(<span class=\"hljs-string\">'content-type'</span>, <span class=\"hljs-string\">'application/json; charset=utf-8'</span>)<br>    .expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">res</span>) </span>{<br>        <span class=\"hljs-keyword\">const</span> response = res.body;<br>        <span class=\"hljs-comment\">//console.log(response);</span><br>        expect(response).to.have.property(<span class=\"hljs-string\">'id'</span>);<br>        expect(response).to.have.property(<span class=\"hljs-string\">'name'</span>);<br>        expect(response).to.have.property(<span class=\"hljs-string\">'username'</span>);<br>        expect(response).to.have.property(<span class=\"hljs-string\">'email'</span>);<br>        expect(response.id).to.equal(<span class=\"hljs-number\">1</span>);<br>        expect(response.email).to.equal(<span class=\"hljs-string\">'Sincere@april.biz'</span>);<br>        expect(response.address.city).to.equal(<span class=\"hljs-string\">'Gwenborough'</span>);<br><br>    })<br>    .expect(<span class=\"hljs-number\">200</span>, done);",
      "isRoot": false,
      "uuid": "1187a906-d98a-47e1-992c-5e5e05b45883",
      "parentUUID": "30663849-7156-433e-a0bd-24672ec8bd09",
      "skipped": false
    },
    {
      "title": "should return a 200 OK status code for GET /users using expect method",
      "fullTitle": "@get should return a 200 OK status code for GET /users using expect method",
      "timedOut": false,
      "duration": 10,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "utils.httpGET(<span class=\"hljs-string\">'/users/'</span>, {})<br>    .set(<span class=\"hljs-string\">'content-type'</span>, <span class=\"hljs-string\">'application/json; charset=utf-8'</span>)<br>    <span class=\"hljs-comment\">// .expect(function (res) {</span><br>    <span class=\"hljs-comment\">//     const response = res.body;</span><br>    <span class=\"hljs-comment\">//     console.log(response);</span><br>    <span class=\"hljs-comment\">// })</span><br>    .expect(<span class=\"hljs-number\">200</span>, done);",
      "isRoot": false,
      "uuid": "386e07ad-5631-473a-bdc9-0a1321aff396",
      "parentUUID": "30663849-7156-433e-a0bd-24672ec8bd09",
      "skipped": false
    }
  ],
  "allPending": [],
  "allPasses": [
    {
      "title": "should return a 200 OK status code for Album ID 1",
      "fullTitle": "@get should return a 200 OK status code for Album ID 1",
      "timedOut": false,
      "duration": 35,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "utils.httpGET(<span class=\"hljs-string\">'/albums/1'</span>, {})<br>    .set(<span class=\"hljs-string\">'content-type'</span>, <span class=\"hljs-string\">'application/json; charset=utf-8'</span>)<br>    .expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">res</span>) </span>{<br>        <span class=\"hljs-keyword\">const</span> response = res.body;<br>        <span class=\"hljs-comment\">//console.log(response);</span><br>        <span class=\"hljs-keyword\">return</span> assert.deepEqual(response,<br>            {<br>                <span class=\"hljs-string\">\"userId\"</span>: <span class=\"hljs-number\">1</span>,<br>                <span class=\"hljs-string\">\"id\"</span>: <span class=\"hljs-number\">1</span>,<br>                <span class=\"hljs-string\">\"title\"</span>: <span class=\"hljs-string\">\"quidem molestiae enim\"</span><br>            })<br>    })<br>    .expect(<span class=\"hljs-number\">200</span>, done);",
      "isRoot": false,
      "uuid": "fad846e2-8dcd-46de-b13e-43b7451fa1f5",
      "parentUUID": "ab7abcbc-8fff-46a4-a5db-5b87eba3d260",
      "skipped": false
    },
    {
      "title": "should return a 200 OK status code for Album ID 1 using expect method",
      "fullTitle": "@get should return a 200 OK status code for Album ID 1 using expect method",
      "timedOut": false,
      "duration": 16,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "utils.httpGET(<span class=\"hljs-string\">'/albums/1'</span>, {})<br>    .set(<span class=\"hljs-string\">'content-type'</span>, <span class=\"hljs-string\">'application/json; charset=utf-8'</span>)<br>    .expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">res</span>) </span>{<br>         <span class=\"hljs-keyword\">const</span> response = res.body;<br>        <span class=\"hljs-comment\">// console.log(response);</span><br>        expect(response).to.have.property(<span class=\"hljs-string\">'userId'</span>);<br>        expect(response).to.have.property(<span class=\"hljs-string\">'id'</span>);<br>        expect(response).to.have.property(<span class=\"hljs-string\">'title'</span>);<br>        expect(response.id).to.equal(<span class=\"hljs-number\">1</span>);<br>        expect(response.userId).to.equal(<span class=\"hljs-number\">1</span>);<br>        expect(response.title).to.equal(<span class=\"hljs-string\">'quidem molestiae enim'</span>);<br><br>    })<br>    .expect(<span class=\"hljs-number\">200</span>, done);",
      "isRoot": false,
      "uuid": "2a73fbb4-3f51-498a-ac11-5019927df30d",
      "parentUUID": "ab7abcbc-8fff-46a4-a5db-5b87eba3d260",
      "skipped": false
    },
    {
      "title": "should return a 200 OK status code for GET /comments using expect method",
      "fullTitle": "@get should return a 200 OK status code for GET /comments using expect method",
      "timedOut": false,
      "duration": 17,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "utils.httpGET(<span class=\"hljs-string\">'/albums/'</span>, {})<br>    .set(<span class=\"hljs-string\">'content-type'</span>, <span class=\"hljs-string\">'application/json; charset=utf-8'</span>)<br>    <span class=\"hljs-comment\">// .expect(function (res) {</span><br>    <span class=\"hljs-comment\">//     const response = res.body;</span><br>    <span class=\"hljs-comment\">//     console.log(response);</span><br>    <span class=\"hljs-comment\">// })</span><br>    .expect(<span class=\"hljs-number\">200</span>, done);",
      "isRoot": false,
      "uuid": "2b2e3c12-a31d-4e63-8658-8d7bf8f232c0",
      "parentUUID": "ab7abcbc-8fff-46a4-a5db-5b87eba3d260",
      "skipped": false
    },
    {
      "title": "should return a 200 OK status code for Comment ID 1",
      "fullTitle": "@get should return a 200 OK status code for Comment ID 1",
      "timedOut": false,
      "duration": 14,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "utils.httpGET(<span class=\"hljs-string\">'/comments/1'</span>, {})<br>    .set(<span class=\"hljs-string\">'content-type'</span>, <span class=\"hljs-string\">'application/json; charset=utf-8'</span>)<br>    .expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">res</span>) </span>{<br>        <span class=\"hljs-keyword\">const</span> response = res.body;<br>        <span class=\"hljs-comment\">//console.log(response);</span><br>        <span class=\"hljs-keyword\">return</span> assert.deepEqual(response,<br>            {<br>                <span class=\"hljs-string\">\"postId\"</span>: <span class=\"hljs-number\">1</span>,<br>                <span class=\"hljs-string\">\"id\"</span>: <span class=\"hljs-number\">1</span>,<br>                <span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"id labore ex et quam laborum\"</span>,<br>                <span class=\"hljs-string\">\"email\"</span>: <span class=\"hljs-string\">\"Eliseo@gardner.biz\"</span>,<br>                <span class=\"hljs-string\">\"body\"</span>: <span class=\"hljs-string\">\"laudantium enim quasi est quidem magnam voluptate ipsam eos\\ntempora quo necessitatibus\\ndolor quam autem quasi\\nreiciendis et nam sapiente accusantium\"</span><br>            })<br>    })<br>    .expect(<span class=\"hljs-number\">200</span>, done);",
      "isRoot": false,
      "uuid": "220a5a66-0475-4502-9736-15e74f45f798",
      "parentUUID": "3cd3811b-5cb1-4423-8894-dcf0bd8a7d6f",
      "skipped": false
    },
    {
      "title": "should return a 200 OK status code for comment ID 1 using expect method",
      "fullTitle": "@get should return a 200 OK status code for comment ID 1 using expect method",
      "timedOut": false,
      "duration": 14,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "utils.httpGET(<span class=\"hljs-string\">'/comments/1'</span>, {})<br>    .set(<span class=\"hljs-string\">'content-type'</span>, <span class=\"hljs-string\">'application/json; charset=utf-8'</span>)<br>    .expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">res</span>) </span>{<br>        <span class=\"hljs-keyword\">const</span> response = res.body;<br>        <span class=\"hljs-comment\">//console.log(response);</span><br>        expect(response).to.have.property(<span class=\"hljs-string\">'postId'</span>);<br>        expect(response).to.have.property(<span class=\"hljs-string\">'id'</span>);<br>        expect(response).to.have.property(<span class=\"hljs-string\">'name'</span>);<br>        expect(response).to.have.property(<span class=\"hljs-string\">'email'</span>);<br>        expect(response).to.have.property(<span class=\"hljs-string\">'body'</span>);<br>        expect(response.id).to.equal(<span class=\"hljs-number\">1</span>);<br>        expect(response.email).to.equal(<span class=\"hljs-string\">'Eliseo@gardner.biz'</span>);<br>        expect(response.name).to.equal(<span class=\"hljs-string\">'id labore ex et quam laborum'</span>);<br><br>    })<br>    .expect(<span class=\"hljs-number\">200</span>, done);",
      "isRoot": false,
      "uuid": "b24414f2-2188-4150-a2bb-f9b368dbd1da",
      "parentUUID": "3cd3811b-5cb1-4423-8894-dcf0bd8a7d6f",
      "skipped": false
    },
    {
      "title": "should return a 200 OK status code for GET /comments using expect method",
      "fullTitle": "@get should return a 200 OK status code for GET /comments using expect method",
      "timedOut": false,
      "duration": 31,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "utils.httpGET(<span class=\"hljs-string\">'/comments/'</span>, {})<br>    .set(<span class=\"hljs-string\">'content-type'</span>, <span class=\"hljs-string\">'application/json; charset=utf-8'</span>)<br>    <span class=\"hljs-comment\">// .expect(function (res) {</span><br>    <span class=\"hljs-comment\">//     const response = res.body;</span><br>    <span class=\"hljs-comment\">//     console.log(response);</span><br>    <span class=\"hljs-comment\">// })</span><br>    .expect(<span class=\"hljs-number\">200</span>, done);",
      "isRoot": false,
      "uuid": "902daea2-6a0d-4007-b953-55d0c6d88106",
      "parentUUID": "3cd3811b-5cb1-4423-8894-dcf0bd8a7d6f",
      "skipped": false
    },
    {
      "title": "should return a 200 code after deleting fake postId 100",
      "fullTitle": "@delete should return a 200 code after deleting fake postId 100",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "utils.httpDELETE(<span class=\"hljs-string\">'/posts/101'</span>, {})<br>   .send(<br>       {<br>           id: <span class=\"hljs-number\">101</span>,<br>           title: <span class=\"hljs-string\">'foo'</span>,<br>           body: <span class=\"hljs-string\">'bar'</span>,<br>           userId: <span class=\"hljs-number\">1</span><br>       }<br>   )<br>   .expect(<span class=\"hljs-string\">'content-type'</span>, <span class=\"hljs-string\">'application/json; charset=utf-8'</span>)<br>   .expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">res</span>) </span>{<br>       <span class=\"hljs-keyword\">const</span> response = res.body;<br>       <span class=\"hljs-comment\">//console.log(response)</span><br>       <span class=\"hljs-keyword\">return</span> assert.deepEqual(response,<br>           {} <span class=\"hljs-comment\">//return empty response</span><br>       );<br>   })<br>    .expect(<span class=\"hljs-number\">200</span>);",
      "isRoot": false,
      "uuid": "c751d428-3524-4a5b-92ec-f9cb55459ad6",
      "parentUUID": "7845ba57-242f-45e6-8bad-71eff861dfe0",
      "skipped": false
    },
    {
      "title": "should return a 200 OK status code for PostID 1",
      "fullTitle": "@get should return a 200 OK status code for PostID 1",
      "timedOut": false,
      "duration": 9,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "utils.httpGET(<span class=\"hljs-string\">'/posts/1'</span>, {})<br>    .set(<span class=\"hljs-string\">'content-type'</span>, <span class=\"hljs-string\">'application/json; charset=utf-8'</span>)<br>    .expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">res</span>) </span>{<br>        <span class=\"hljs-keyword\">const</span> response = res.body;<br>        <span class=\"hljs-comment\">//console.log(response);</span><br>        <span class=\"hljs-keyword\">return</span> assert.deepEqual(response,<br>            {<br>                <span class=\"hljs-string\">\"id\"</span>: <span class=\"hljs-string\">\"1\"</span>,<br>                <span class=\"hljs-string\">\"title\"</span>: <span class=\"hljs-string\">\"foo\"</span>,<br>                <span class=\"hljs-string\">\"body\"</span>: <span class=\"hljs-string\">\"bar\"</span>,<br>                <span class=\"hljs-string\">\"userId\"</span>: <span class=\"hljs-number\">1</span><br>            })<br>    })<br>    .expect(<span class=\"hljs-number\">200</span>, done);",
      "isRoot": false,
      "uuid": "5d3ffc51-d817-45b9-85b2-7ef588d07103",
      "parentUUID": "b08b9dd8-a3d6-401e-a260-db93867b2d1b",
      "skipped": false
    },
    {
      "title": "should return a 200 OK status code for PostID 1 using expect method",
      "fullTitle": "@get should return a 200 OK status code for PostID 1 using expect method",
      "timedOut": false,
      "duration": 7,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "utils.httpGET(<span class=\"hljs-string\">'/posts/1'</span>, {})<br>    .set(<span class=\"hljs-string\">'content-type'</span>, <span class=\"hljs-string\">'application/json; charset=utf-8'</span>)<br>    .expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">res</span>) </span>{<br>        <span class=\"hljs-keyword\">const</span> response = res.body;<br>        <span class=\"hljs-comment\">//console.log(response);</span><br>        expect(response).to.have.property(<span class=\"hljs-string\">'id'</span>);<br>        expect(response).to.have.property(<span class=\"hljs-string\">'title'</span>);<br>        expect(response).to.have.property(<span class=\"hljs-string\">'body'</span>);<br>        expect(response).to.have.property(<span class=\"hljs-string\">'userId'</span>);<br>        expect(response.id).to.equal(<span class=\"hljs-string\">'1'</span>);<br>    })<br>    .expect(<span class=\"hljs-number\">200</span>, done);",
      "isRoot": false,
      "uuid": "81d59c41-46d7-4e33-9c9f-d14e6019d3fd",
      "parentUUID": "b08b9dd8-a3d6-401e-a260-db93867b2d1b",
      "skipped": false
    },
    {
      "title": "should return a 200 OK status code for PostID 1 using expect method",
      "fullTitle": "@get should return a 200 OK status code for PostID 1 using expect method",
      "timedOut": false,
      "duration": 11,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "utils.httpGET(<span class=\"hljs-string\">'/posts/'</span>, {})<br>    .set(<span class=\"hljs-string\">'content-type'</span>, <span class=\"hljs-string\">'application/json; charset=utf-8'</span>)<br>    <span class=\"hljs-comment\">// .expect(function (res) {</span><br>    <span class=\"hljs-comment\">//     const response = res.body;</span><br>    <span class=\"hljs-comment\">//     console.log(response);</span><br>    <span class=\"hljs-comment\">// })</span><br>    .expect(<span class=\"hljs-number\">200</span>, done);",
      "isRoot": false,
      "uuid": "cf6afd20-bc2a-48cd-b883-f3d7b53b8633",
      "parentUUID": "b08b9dd8-a3d6-401e-a260-db93867b2d1b",
      "skipped": false
    },
    {
      "title": "should return a 201 code after posting",
      "fullTitle": "@post should return a 201 code after posting",
      "timedOut": false,
      "duration": 82,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "utils.httpPOST(<span class=\"hljs-string\">'/posts'</span>, {})<br>    .send({title: <span class=\"hljs-string\">'foo'</span>, body: <span class=\"hljs-string\">'bar'</span>, userId: <span class=\"hljs-number\">1</span>})<br>    .expect(<span class=\"hljs-string\">'content-type'</span>, <span class=\"hljs-string\">'application/json; charset=utf-8'</span>)<br>    .expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">res</span>) </span>{<br>        <span class=\"hljs-keyword\">const</span> response = res.body;<br>        <span class=\"hljs-comment\">//console.log(response);</span><br>        expect(response.title).to.equal(<span class=\"hljs-string\">'foo'</span>);<br>        expect(response.body).to.equal(<span class=\"hljs-string\">'bar'</span>);<br>        expect(response.userId).to.equal(<span class=\"hljs-number\">1</span>);<br>    })<br>    .expect(<span class=\"hljs-number\">201</span>, done)",
      "isRoot": false,
      "uuid": "8334158a-341d-4b5c-9aaa-e022aa18af7c",
      "parentUUID": "8e51f744-70a8-46d7-b1a2-675e8be177b5",
      "skipped": false
    },
    {
      "title": "should return a 200 code after updating postId 1",
      "fullTitle": "@put should return a 200 code after updating postId 1",
      "timedOut": false,
      "duration": 11,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "utils.httpPUT(<span class=\"hljs-string\">'/posts/20'</span>, {})<br>    .send(<br>        {<br>            id: <span class=\"hljs-number\">20</span>,<br>            title: <span class=\"hljs-string\">'candy crush'</span>,<br>            body: <span class=\"hljs-string\">'sodalicious juicy'</span>,<br>            userId: <span class=\"hljs-number\">1</span><br>        }<br>    )<br>    .expect(<span class=\"hljs-string\">'content-type'</span>, <span class=\"hljs-string\">'application/json; charset=utf-8'</span>)<br>    .expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">res</span>) </span>{<br>        <span class=\"hljs-keyword\">const</span> response = res.body;<br>        <span class=\"hljs-comment\">//console.log(response);</span><br>        expect(response.id).to.equal(<span class=\"hljs-string\">'20'</span>);<br>        expect(response.title).to.equal(<span class=\"hljs-string\">'candy crush'</span>);<br>        expect(response.body).to.equal(<span class=\"hljs-string\">'sodalicious juicy'</span>);<br>        expect(response.userId).to.equal(<span class=\"hljs-number\">1</span>);<br>    })<br>    .expect(<span class=\"hljs-number\">200</span>, done);",
      "isRoot": false,
      "uuid": "137c2333-48ca-43e2-9b2b-69e77e6f0da0",
      "parentUUID": "687d97bd-4758-4350-aab2-0872e6006439",
      "skipped": false
    },
    {
      "title": "should return a 200 code after updating postId 1",
      "fullTitle": "@put should return a 200 code after updating postId 1",
      "timedOut": false,
      "duration": 7,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "utils.httpPUT(<span class=\"hljs-string\">'/posts/1'</span>, {})<br>    .send(<br>        {<br>            id: <span class=\"hljs-number\">1</span>,<br>            title: <span class=\"hljs-string\">'foo'</span>,<br>            body: <span class=\"hljs-string\">'bar'</span>,<br>            userId: <span class=\"hljs-number\">1</span><br>        }<br>    )<br>    .expect(<span class=\"hljs-string\">'content-type'</span>, <span class=\"hljs-string\">'application/json; charset=utf-8'</span>)<br>    .expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">res</span>) </span>{<br>        <span class=\"hljs-keyword\">const</span> response = res.body;<br>        <span class=\"hljs-comment\">//console.log(response);</span><br>        expect(response.id).to.equal(<span class=\"hljs-string\">'1'</span>);<br>        expect(response.title).to.equal(<span class=\"hljs-string\">'foo'</span>);<br>        expect(response.body).to.equal(<span class=\"hljs-string\">'bar'</span>);<br>        expect(response.userId).to.equal(<span class=\"hljs-number\">1</span>);<br>    })<br>    .expect(<span class=\"hljs-number\">200</span>, done);",
      "isRoot": false,
      "uuid": "4ee38c76-774c-443c-be59-b2fab54d69df",
      "parentUUID": "687d97bd-4758-4350-aab2-0872e6006439",
      "skipped": false
    },
    {
      "title": "should return a 200 OK status code for PostID 1",
      "fullTitle": "@get should return a 200 OK status code for PostID 1",
      "timedOut": false,
      "duration": 8,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "utils.httpGET(<span class=\"hljs-string\">'/users/1'</span>, {})<br>    .set(<span class=\"hljs-string\">'content-type'</span>, <span class=\"hljs-string\">'application/json; charset=utf-8'</span>)<br>    .expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">res</span>) </span>{<br>        <span class=\"hljs-keyword\">const</span> response = res.body;<br>        <span class=\"hljs-comment\">//console.log(response);</span><br>        <span class=\"hljs-keyword\">return</span> assert.deepEqual(response,<br>            {<br>                <span class=\"hljs-string\">\"id\"</span>: <span class=\"hljs-number\">1</span>,<br>                <span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"Leanne Graham\"</span>,<br>                <span class=\"hljs-string\">\"username\"</span>: <span class=\"hljs-string\">\"Bret\"</span>,<br>                <span class=\"hljs-string\">\"email\"</span>: <span class=\"hljs-string\">\"Sincere@april.biz\"</span>,<br>                <span class=\"hljs-string\">\"address\"</span>: {<br>                    <span class=\"hljs-string\">\"street\"</span>: <span class=\"hljs-string\">\"Kulas Light\"</span>,<br>                    <span class=\"hljs-string\">\"suite\"</span>: <span class=\"hljs-string\">\"Apt. 556\"</span>,<br>                    <span class=\"hljs-string\">\"city\"</span>: <span class=\"hljs-string\">\"Gwenborough\"</span>,<br>                    <span class=\"hljs-string\">\"zipcode\"</span>: <span class=\"hljs-string\">\"92998-3874\"</span>,<br>                    <span class=\"hljs-string\">\"geo\"</span>: {<br>                        <span class=\"hljs-string\">\"lat\"</span>: <span class=\"hljs-string\">\"-37.3159\"</span>,<br>                        <span class=\"hljs-string\">\"lng\"</span>: <span class=\"hljs-string\">\"81.1496\"</span><br>                    }<br>                },<br>                <span class=\"hljs-string\">\"phone\"</span>: <span class=\"hljs-string\">\"1-770-736-8031 x56442\"</span>,<br>                <span class=\"hljs-string\">\"website\"</span>: <span class=\"hljs-string\">\"hildegard.org\"</span>,<br>                <span class=\"hljs-string\">\"company\"</span>: {<br>                    <span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"Romaguera-Crona\"</span>,<br>                    <span class=\"hljs-string\">\"catchPhrase\"</span>: <span class=\"hljs-string\">\"Multi-layered client-server neural-net\"</span>,<br>                    <span class=\"hljs-string\">\"bs\"</span>: <span class=\"hljs-string\">\"harness real-time e-markets\"</span><br>                }<br>            })<br>    })<br>    .expect(<span class=\"hljs-number\">200</span>, done);",
      "isRoot": false,
      "uuid": "1ed8c9a0-9292-41f1-b59c-aee7a1191e00",
      "parentUUID": "30663849-7156-433e-a0bd-24672ec8bd09",
      "skipped": false
    },
    {
      "title": "should return a 200 OK status code for userId 1 using expect method",
      "fullTitle": "@get should return a 200 OK status code for userId 1 using expect method",
      "timedOut": false,
      "duration": 8,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "utils.httpGET(<span class=\"hljs-string\">'/users/1'</span>, {})<br>    .set(<span class=\"hljs-string\">'content-type'</span>, <span class=\"hljs-string\">'application/json; charset=utf-8'</span>)<br>    .expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">res</span>) </span>{<br>        <span class=\"hljs-keyword\">const</span> response = res.body;<br>        <span class=\"hljs-comment\">//console.log(response);</span><br>        expect(response).to.have.property(<span class=\"hljs-string\">'id'</span>);<br>        expect(response).to.have.property(<span class=\"hljs-string\">'name'</span>);<br>        expect(response).to.have.property(<span class=\"hljs-string\">'username'</span>);<br>        expect(response).to.have.property(<span class=\"hljs-string\">'email'</span>);<br>        expect(response.id).to.equal(<span class=\"hljs-number\">1</span>);<br>        expect(response.email).to.equal(<span class=\"hljs-string\">'Sincere@april.biz'</span>);<br>        expect(response.address.city).to.equal(<span class=\"hljs-string\">'Gwenborough'</span>);<br><br>    })<br>    .expect(<span class=\"hljs-number\">200</span>, done);",
      "isRoot": false,
      "uuid": "65da1555-1cd6-41ba-bd10-4ef838be4283",
      "parentUUID": "30663849-7156-433e-a0bd-24672ec8bd09",
      "skipped": false
    },
    {
      "title": "should return a 200 OK status code for GET /users using expect method",
      "fullTitle": "@get should return a 200 OK status code for GET /users using expect method",
      "timedOut": false,
      "duration": 10,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "utils.httpGET(<span class=\"hljs-string\">'/users/'</span>, {})<br>    .set(<span class=\"hljs-string\">'content-type'</span>, <span class=\"hljs-string\">'application/json; charset=utf-8'</span>)<br>    <span class=\"hljs-comment\">// .expect(function (res) {</span><br>    <span class=\"hljs-comment\">//     const response = res.body;</span><br>    <span class=\"hljs-comment\">//     console.log(response);</span><br>    <span class=\"hljs-comment\">// })</span><br>    .expect(<span class=\"hljs-number\">200</span>, done);",
      "isRoot": false,
      "uuid": "0a6c3ec1-986f-4d64-b789-a2272c03c4ff",
      "parentUUID": "30663849-7156-433e-a0bd-24672ec8bd09",
      "skipped": false
    }
  ],
  "allFailures": [],
  "copyrightYear": 2016
}