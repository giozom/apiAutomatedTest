{
  "reportTitle": "apiAutomatedTest",
  "stats": {
    "suites": 6,
    "tests": 13,
    "passes": 13,
    "pending": 0,
    "failures": 0,
    "start": "2016-11-29T04:33:35.327Z",
    "end": "2016-11-29T04:33:35.668Z",
    "duration": 341,
    "testsRegistered": 13,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false,
    "passPercentClass": "success",
    "pendingPercentClass": "danger"
  },
  "suites": {
    "title": "",
    "suites": [
      {
        "title": "@get",
        "suites": [],
        "tests": [
          {
            "title": "should return a 200 OK status code for Comment ID 1",
            "fullTitle": "@get should return a 200 OK status code for Comment ID 1",
            "timedOut": false,
            "duration": 54,
            "state": "passed",
            "speed": "medium",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "utils.httpGET(<span class=\"hljs-string\">'/comments/1'</span>, {})<br>    .set(<span class=\"hljs-string\">'content-type'</span>, <span class=\"hljs-string\">'application/json; charset=utf-8'</span>)<br>    .expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">res</span>) </span>{<br>        <span class=\"hljs-keyword\">const</span> response = res.body;<br>        <span class=\"hljs-built_in\">console</span>.log(response);<br>        <span class=\"hljs-keyword\">return</span> assert.deepEqual(response,<br>            {<br>                <span class=\"hljs-string\">\"postId\"</span>: <span class=\"hljs-number\">1</span>,<br>                <span class=\"hljs-string\">\"id\"</span>: <span class=\"hljs-number\">1</span>,<br>                <span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"id labore ex et quam laborum\"</span>,<br>                <span class=\"hljs-string\">\"email\"</span>: <span class=\"hljs-string\">\"Eliseo@gardner.biz\"</span>,<br>                <span class=\"hljs-string\">\"body\"</span>: <span class=\"hljs-string\">\"laudantium enim quasi est quidem magnam voluptate ipsam eos\\ntempora quo necessitatibus\\ndolor quam autem quasi\\nreiciendis et nam sapiente accusantium\"</span><br>            })<br>    })<br>    .expect(<span class=\"hljs-number\">200</span>, done);",
            "isRoot": false,
            "uuid": "211af99b-8f5e-46d5-833c-bebab2e85c74",
            "parentUUID": "220a2e2a-acd5-49fd-80c8-0f14c25e742b",
            "skipped": false
          },
          {
            "title": "should return a 200 OK status code for comment ID 1 using expect method",
            "fullTitle": "@get should return a 200 OK status code for comment ID 1 using expect method",
            "timedOut": false,
            "duration": 17,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "utils.httpGET(<span class=\"hljs-string\">'/comments/1'</span>, {})<br>    .set(<span class=\"hljs-string\">'content-type'</span>, <span class=\"hljs-string\">'application/json; charset=utf-8'</span>)<br>    .expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">res</span>) </span>{<br>        <span class=\"hljs-keyword\">const</span> response = res.body;<br>        <span class=\"hljs-built_in\">console</span>.log(response);<br>        expect(response).to.have.property(<span class=\"hljs-string\">'postId'</span>);<br>        expect(response).to.have.property(<span class=\"hljs-string\">'id'</span>);<br>        expect(response).to.have.property(<span class=\"hljs-string\">'name'</span>);<br>        expect(response).to.have.property(<span class=\"hljs-string\">'email'</span>);<br>        expect(response).to.have.property(<span class=\"hljs-string\">'body'</span>);<br>        expect(response.id).to.equal(<span class=\"hljs-number\">1</span>);<br>        expect(response.email).to.equal(<span class=\"hljs-string\">'Eliseo@gardner.biz'</span>);<br>        expect(response.name).to.equal(<span class=\"hljs-string\">'id labore ex et quam laborum'</span>);<br><br>    })<br>    .expect(<span class=\"hljs-number\">200</span>, done);",
            "isRoot": false,
            "uuid": "aaf67bfd-8793-4183-b070-d0e5f0f05673",
            "parentUUID": "220a2e2a-acd5-49fd-80c8-0f14c25e742b",
            "skipped": false
          },
          {
            "title": "should return a 200 OK status code for GET /comments using expect method",
            "fullTitle": "@get should return a 200 OK status code for GET /comments using expect method",
            "timedOut": false,
            "duration": 53,
            "state": "passed",
            "speed": "medium",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "utils.httpGET(<span class=\"hljs-string\">'/comments/'</span>, {})<br>    .set(<span class=\"hljs-string\">'content-type'</span>, <span class=\"hljs-string\">'application/json; charset=utf-8'</span>)<br>    .expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">res</span>) </span>{<br>        <span class=\"hljs-keyword\">const</span> response = res.body;<br>        <span class=\"hljs-built_in\">console</span>.log(response);<br>    })<br>    .expect(<span class=\"hljs-number\">200</span>, done);",
            "isRoot": false,
            "uuid": "3bb0dde3-64db-4c62-bdc6-c15242937ba6",
            "parentUUID": "220a2e2a-acd5-49fd-80c8-0f14c25e742b",
            "skipped": false
          }
        ],
        "pending": [],
        "root": false,
        "_timeout": 3000,
        "file": "/test/comments/GET/getCOMMENT_200.js",
        "uuid": "220a2e2a-acd5-49fd-80c8-0f14c25e742b",
        "fullFile": "/Users/garsenius/github/apiAutomatedTest/test/comments/GET/getCOMMENT_200.js",
        "passes": [
          {
            "title": "should return a 200 OK status code for Comment ID 1",
            "fullTitle": "@get should return a 200 OK status code for Comment ID 1",
            "timedOut": false,
            "duration": 54,
            "state": "passed",
            "speed": "medium",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "utils.httpGET(<span class=\"hljs-string\">'/comments/1'</span>, {})<br>    .set(<span class=\"hljs-string\">'content-type'</span>, <span class=\"hljs-string\">'application/json; charset=utf-8'</span>)<br>    .expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">res</span>) </span>{<br>        <span class=\"hljs-keyword\">const</span> response = res.body;<br>        <span class=\"hljs-built_in\">console</span>.log(response);<br>        <span class=\"hljs-keyword\">return</span> assert.deepEqual(response,<br>            {<br>                <span class=\"hljs-string\">\"postId\"</span>: <span class=\"hljs-number\">1</span>,<br>                <span class=\"hljs-string\">\"id\"</span>: <span class=\"hljs-number\">1</span>,<br>                <span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"id labore ex et quam laborum\"</span>,<br>                <span class=\"hljs-string\">\"email\"</span>: <span class=\"hljs-string\">\"Eliseo@gardner.biz\"</span>,<br>                <span class=\"hljs-string\">\"body\"</span>: <span class=\"hljs-string\">\"laudantium enim quasi est quidem magnam voluptate ipsam eos\\ntempora quo necessitatibus\\ndolor quam autem quasi\\nreiciendis et nam sapiente accusantium\"</span><br>            })<br>    })<br>    .expect(<span class=\"hljs-number\">200</span>, done);",
            "isRoot": false,
            "uuid": "211af99b-8f5e-46d5-833c-bebab2e85c74",
            "parentUUID": "220a2e2a-acd5-49fd-80c8-0f14c25e742b",
            "skipped": false
          },
          {
            "title": "should return a 200 OK status code for comment ID 1 using expect method",
            "fullTitle": "@get should return a 200 OK status code for comment ID 1 using expect method",
            "timedOut": false,
            "duration": 17,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "utils.httpGET(<span class=\"hljs-string\">'/comments/1'</span>, {})<br>    .set(<span class=\"hljs-string\">'content-type'</span>, <span class=\"hljs-string\">'application/json; charset=utf-8'</span>)<br>    .expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">res</span>) </span>{<br>        <span class=\"hljs-keyword\">const</span> response = res.body;<br>        <span class=\"hljs-built_in\">console</span>.log(response);<br>        expect(response).to.have.property(<span class=\"hljs-string\">'postId'</span>);<br>        expect(response).to.have.property(<span class=\"hljs-string\">'id'</span>);<br>        expect(response).to.have.property(<span class=\"hljs-string\">'name'</span>);<br>        expect(response).to.have.property(<span class=\"hljs-string\">'email'</span>);<br>        expect(response).to.have.property(<span class=\"hljs-string\">'body'</span>);<br>        expect(response.id).to.equal(<span class=\"hljs-number\">1</span>);<br>        expect(response.email).to.equal(<span class=\"hljs-string\">'Eliseo@gardner.biz'</span>);<br>        expect(response.name).to.equal(<span class=\"hljs-string\">'id labore ex et quam laborum'</span>);<br><br>    })<br>    .expect(<span class=\"hljs-number\">200</span>, done);",
            "isRoot": false,
            "uuid": "aaf67bfd-8793-4183-b070-d0e5f0f05673",
            "parentUUID": "220a2e2a-acd5-49fd-80c8-0f14c25e742b",
            "skipped": false
          },
          {
            "title": "should return a 200 OK status code for GET /comments using expect method",
            "fullTitle": "@get should return a 200 OK status code for GET /comments using expect method",
            "timedOut": false,
            "duration": 53,
            "state": "passed",
            "speed": "medium",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "utils.httpGET(<span class=\"hljs-string\">'/comments/'</span>, {})<br>    .set(<span class=\"hljs-string\">'content-type'</span>, <span class=\"hljs-string\">'application/json; charset=utf-8'</span>)<br>    .expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">res</span>) </span>{<br>        <span class=\"hljs-keyword\">const</span> response = res.body;<br>        <span class=\"hljs-built_in\">console</span>.log(response);<br>    })<br>    .expect(<span class=\"hljs-number\">200</span>, done);",
            "isRoot": false,
            "uuid": "3bb0dde3-64db-4c62-bdc6-c15242937ba6",
            "parentUUID": "220a2e2a-acd5-49fd-80c8-0f14c25e742b",
            "skipped": false
          }
        ],
        "failures": [],
        "skipped": [],
        "hasTests": true,
        "hasSuites": false,
        "totalTests": 3,
        "totalPasses": 3,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": true,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 124
      },
      {
        "title": "@delete",
        "suites": [],
        "tests": [
          {
            "title": "should return a 200 code after deleting fake postId 100",
            "fullTitle": "@delete should return a 200 code after deleting fake postId 100",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "utils.httpDELETE(<span class=\"hljs-string\">'/posts/101'</span>, {})<br>   .send(<br>       {<br>           id: <span class=\"hljs-number\">101</span>,<br>           title: <span class=\"hljs-string\">'foo'</span>,<br>           body: <span class=\"hljs-string\">'bar'</span>,<br>           userId: <span class=\"hljs-number\">1</span><br>       }<br>   )<br>   .expect(<span class=\"hljs-string\">'content-type'</span>, <span class=\"hljs-string\">'application/json; charset=utf-8'</span>)<br>   .expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">res</span>) </span>{<br>       <span class=\"hljs-keyword\">const</span> response = res.body;<br>       <span class=\"hljs-built_in\">console</span>.log(response)<br>       <span class=\"hljs-keyword\">return</span> assert.deepEqual(response,<br>           {} <span class=\"hljs-comment\">//return empty response</span><br>       );<br>   })<br>    .expect(<span class=\"hljs-number\">200</span>);",
            "isRoot": false,
            "uuid": "f95dc9e6-a671-4e9c-8464-c4c6b8f618f1",
            "parentUUID": "4e5e8695-a212-4fe7-ad15-063474bb8a51",
            "skipped": false
          }
        ],
        "pending": [],
        "root": false,
        "_timeout": 3000,
        "file": "/test/posts/DELETE/deletePOST_200.js",
        "uuid": "4e5e8695-a212-4fe7-ad15-063474bb8a51",
        "fullFile": "/Users/garsenius/github/apiAutomatedTest/test/posts/DELETE/deletePOST_200.js",
        "passes": [
          {
            "title": "should return a 200 code after deleting fake postId 100",
            "fullTitle": "@delete should return a 200 code after deleting fake postId 100",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "utils.httpDELETE(<span class=\"hljs-string\">'/posts/101'</span>, {})<br>   .send(<br>       {<br>           id: <span class=\"hljs-number\">101</span>,<br>           title: <span class=\"hljs-string\">'foo'</span>,<br>           body: <span class=\"hljs-string\">'bar'</span>,<br>           userId: <span class=\"hljs-number\">1</span><br>       }<br>   )<br>   .expect(<span class=\"hljs-string\">'content-type'</span>, <span class=\"hljs-string\">'application/json; charset=utf-8'</span>)<br>   .expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">res</span>) </span>{<br>       <span class=\"hljs-keyword\">const</span> response = res.body;<br>       <span class=\"hljs-built_in\">console</span>.log(response)<br>       <span class=\"hljs-keyword\">return</span> assert.deepEqual(response,<br>           {} <span class=\"hljs-comment\">//return empty response</span><br>       );<br>   })<br>    .expect(<span class=\"hljs-number\">200</span>);",
            "isRoot": false,
            "uuid": "f95dc9e6-a671-4e9c-8464-c4c6b8f618f1",
            "parentUUID": "4e5e8695-a212-4fe7-ad15-063474bb8a51",
            "skipped": false
          }
        ],
        "failures": [],
        "skipped": [],
        "hasTests": true,
        "hasSuites": false,
        "totalTests": 1,
        "totalPasses": 1,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": true,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 1
      },
      {
        "title": "@get",
        "suites": [],
        "tests": [
          {
            "title": "should return a 200 OK status code for PostID 1",
            "fullTitle": "@get should return a 200 OK status code for PostID 1",
            "timedOut": false,
            "duration": 10,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "utils.httpGET(<span class=\"hljs-string\">'/posts/1'</span>, {})<br>    .set(<span class=\"hljs-string\">'content-type'</span>, <span class=\"hljs-string\">'application/json; charset=utf-8'</span>)<br>    .expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">res</span>) </span>{<br>        <span class=\"hljs-keyword\">const</span> response = res.body;<br>        <span class=\"hljs-built_in\">console</span>.log(response);<br>        <span class=\"hljs-keyword\">return</span> assert.deepEqual(response,<br>            {<br>                <span class=\"hljs-string\">\"id\"</span>: <span class=\"hljs-string\">\"1\"</span>,<br>                <span class=\"hljs-string\">\"title\"</span>: <span class=\"hljs-string\">\"foo\"</span>,<br>                <span class=\"hljs-string\">\"body\"</span>: <span class=\"hljs-string\">\"bar\"</span>,<br>                <span class=\"hljs-string\">\"userId\"</span>: <span class=\"hljs-number\">1</span><br>            })<br>    })<br>    .expect(<span class=\"hljs-number\">200</span>, done);",
            "isRoot": false,
            "uuid": "bc6e6056-9186-430a-82aa-36f2b8112f86",
            "parentUUID": "d0eeb829-7bfa-4d2f-b29c-fe48313ec0de",
            "skipped": false
          },
          {
            "title": "should return a 200 OK status code for PostID 1 using expect method",
            "fullTitle": "@get should return a 200 OK status code for PostID 1 using expect method",
            "timedOut": false,
            "duration": 8,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "utils.httpGET(<span class=\"hljs-string\">'/posts/1'</span>, {})<br>    .set(<span class=\"hljs-string\">'content-type'</span>, <span class=\"hljs-string\">'application/json; charset=utf-8'</span>)<br>    .expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">res</span>) </span>{<br>        <span class=\"hljs-keyword\">const</span> response = res.body;<br>        <span class=\"hljs-built_in\">console</span>.log(response);<br>        expect(response).to.have.property(<span class=\"hljs-string\">'id'</span>);<br>        expect(response).to.have.property(<span class=\"hljs-string\">'title'</span>);<br>        expect(response).to.have.property(<span class=\"hljs-string\">'body'</span>);<br>        expect(response).to.have.property(<span class=\"hljs-string\">'userId'</span>);<br>        expect(response.id).to.equal(<span class=\"hljs-string\">'1'</span>);<br>    })<br>    .expect(<span class=\"hljs-number\">200</span>, done);",
            "isRoot": false,
            "uuid": "4a8fe8af-b980-427a-b91d-1a452def89d7",
            "parentUUID": "d0eeb829-7bfa-4d2f-b29c-fe48313ec0de",
            "skipped": false
          },
          {
            "title": "should return a 200 OK status code for PostID 1 using expect method",
            "fullTitle": "@get should return a 200 OK status code for PostID 1 using expect method",
            "timedOut": false,
            "duration": 32,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "utils.httpGET(<span class=\"hljs-string\">'/posts/'</span>, {})<br>    .set(<span class=\"hljs-string\">'content-type'</span>, <span class=\"hljs-string\">'application/json; charset=utf-8'</span>)<br>    .expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">res</span>) </span>{<br>        <span class=\"hljs-keyword\">const</span> response = res.body;<br>        <span class=\"hljs-built_in\">console</span>.log(response);<br>    })<br>    .expect(<span class=\"hljs-number\">200</span>, done);",
            "isRoot": false,
            "uuid": "825a2773-3578-4574-88b9-03f50e2931cd",
            "parentUUID": "d0eeb829-7bfa-4d2f-b29c-fe48313ec0de",
            "skipped": false
          }
        ],
        "pending": [],
        "root": false,
        "_timeout": 3000,
        "file": "/test/posts/GET/getPOST_200.js",
        "uuid": "d0eeb829-7bfa-4d2f-b29c-fe48313ec0de",
        "fullFile": "/Users/garsenius/github/apiAutomatedTest/test/posts/GET/getPOST_200.js",
        "passes": [
          {
            "title": "should return a 200 OK status code for PostID 1",
            "fullTitle": "@get should return a 200 OK status code for PostID 1",
            "timedOut": false,
            "duration": 10,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "utils.httpGET(<span class=\"hljs-string\">'/posts/1'</span>, {})<br>    .set(<span class=\"hljs-string\">'content-type'</span>, <span class=\"hljs-string\">'application/json; charset=utf-8'</span>)<br>    .expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">res</span>) </span>{<br>        <span class=\"hljs-keyword\">const</span> response = res.body;<br>        <span class=\"hljs-built_in\">console</span>.log(response);<br>        <span class=\"hljs-keyword\">return</span> assert.deepEqual(response,<br>            {<br>                <span class=\"hljs-string\">\"id\"</span>: <span class=\"hljs-string\">\"1\"</span>,<br>                <span class=\"hljs-string\">\"title\"</span>: <span class=\"hljs-string\">\"foo\"</span>,<br>                <span class=\"hljs-string\">\"body\"</span>: <span class=\"hljs-string\">\"bar\"</span>,<br>                <span class=\"hljs-string\">\"userId\"</span>: <span class=\"hljs-number\">1</span><br>            })<br>    })<br>    .expect(<span class=\"hljs-number\">200</span>, done);",
            "isRoot": false,
            "uuid": "bc6e6056-9186-430a-82aa-36f2b8112f86",
            "parentUUID": "d0eeb829-7bfa-4d2f-b29c-fe48313ec0de",
            "skipped": false
          },
          {
            "title": "should return a 200 OK status code for PostID 1 using expect method",
            "fullTitle": "@get should return a 200 OK status code for PostID 1 using expect method",
            "timedOut": false,
            "duration": 8,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "utils.httpGET(<span class=\"hljs-string\">'/posts/1'</span>, {})<br>    .set(<span class=\"hljs-string\">'content-type'</span>, <span class=\"hljs-string\">'application/json; charset=utf-8'</span>)<br>    .expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">res</span>) </span>{<br>        <span class=\"hljs-keyword\">const</span> response = res.body;<br>        <span class=\"hljs-built_in\">console</span>.log(response);<br>        expect(response).to.have.property(<span class=\"hljs-string\">'id'</span>);<br>        expect(response).to.have.property(<span class=\"hljs-string\">'title'</span>);<br>        expect(response).to.have.property(<span class=\"hljs-string\">'body'</span>);<br>        expect(response).to.have.property(<span class=\"hljs-string\">'userId'</span>);<br>        expect(response.id).to.equal(<span class=\"hljs-string\">'1'</span>);<br>    })<br>    .expect(<span class=\"hljs-number\">200</span>, done);",
            "isRoot": false,
            "uuid": "4a8fe8af-b980-427a-b91d-1a452def89d7",
            "parentUUID": "d0eeb829-7bfa-4d2f-b29c-fe48313ec0de",
            "skipped": false
          },
          {
            "title": "should return a 200 OK status code for PostID 1 using expect method",
            "fullTitle": "@get should return a 200 OK status code for PostID 1 using expect method",
            "timedOut": false,
            "duration": 32,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "utils.httpGET(<span class=\"hljs-string\">'/posts/'</span>, {})<br>    .set(<span class=\"hljs-string\">'content-type'</span>, <span class=\"hljs-string\">'application/json; charset=utf-8'</span>)<br>    .expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">res</span>) </span>{<br>        <span class=\"hljs-keyword\">const</span> response = res.body;<br>        <span class=\"hljs-built_in\">console</span>.log(response);<br>    })<br>    .expect(<span class=\"hljs-number\">200</span>, done);",
            "isRoot": false,
            "uuid": "825a2773-3578-4574-88b9-03f50e2931cd",
            "parentUUID": "d0eeb829-7bfa-4d2f-b29c-fe48313ec0de",
            "skipped": false
          }
        ],
        "failures": [],
        "skipped": [],
        "hasTests": true,
        "hasSuites": false,
        "totalTests": 3,
        "totalPasses": 3,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": true,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 50
      },
      {
        "title": "@post",
        "suites": [],
        "tests": [
          {
            "title": "should return a 201 code after posting",
            "fullTitle": "@post should return a 201 code after posting",
            "timedOut": false,
            "duration": 87,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "utils.httpPOST(<span class=\"hljs-string\">'/posts'</span>, {})<br>    .send({title: <span class=\"hljs-string\">'foo'</span>, body: <span class=\"hljs-string\">'bar'</span>, userId: <span class=\"hljs-number\">1</span>})<br>    .expect(<span class=\"hljs-string\">'content-type'</span>, <span class=\"hljs-string\">'application/json; charset=utf-8'</span>)<br>    .expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">res</span>) </span>{<br>        <span class=\"hljs-keyword\">const</span> response = res.body;<br>        <span class=\"hljs-built_in\">console</span>.log(response);<br>        <span class=\"hljs-comment\">//expect(response.id).to.equal(105);</span><br>        expect(response.title).to.equal(<span class=\"hljs-string\">'foo'</span>);<br>        expect(response.body).to.equal(<span class=\"hljs-string\">'bar'</span>);<br>        expect(response.userId).to.equal(<span class=\"hljs-number\">1</span>);<br>    })<br>    .expect(<span class=\"hljs-number\">201</span>, done)",
            "isRoot": false,
            "uuid": "c2cc0594-c041-4b76-80ea-18a6b186b120",
            "parentUUID": "26ebd73b-7764-4dfd-ad10-f7cf4d33a96f",
            "skipped": false
          }
        ],
        "pending": [],
        "root": false,
        "_timeout": 3000,
        "file": "/test/posts/POST/postPOST_201.js",
        "uuid": "26ebd73b-7764-4dfd-ad10-f7cf4d33a96f",
        "fullFile": "/Users/garsenius/github/apiAutomatedTest/test/posts/POST/postPOST_201.js",
        "passes": [
          {
            "title": "should return a 201 code after posting",
            "fullTitle": "@post should return a 201 code after posting",
            "timedOut": false,
            "duration": 87,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "utils.httpPOST(<span class=\"hljs-string\">'/posts'</span>, {})<br>    .send({title: <span class=\"hljs-string\">'foo'</span>, body: <span class=\"hljs-string\">'bar'</span>, userId: <span class=\"hljs-number\">1</span>})<br>    .expect(<span class=\"hljs-string\">'content-type'</span>, <span class=\"hljs-string\">'application/json; charset=utf-8'</span>)<br>    .expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">res</span>) </span>{<br>        <span class=\"hljs-keyword\">const</span> response = res.body;<br>        <span class=\"hljs-built_in\">console</span>.log(response);<br>        <span class=\"hljs-comment\">//expect(response.id).to.equal(105);</span><br>        expect(response.title).to.equal(<span class=\"hljs-string\">'foo'</span>);<br>        expect(response.body).to.equal(<span class=\"hljs-string\">'bar'</span>);<br>        expect(response.userId).to.equal(<span class=\"hljs-number\">1</span>);<br>    })<br>    .expect(<span class=\"hljs-number\">201</span>, done)",
            "isRoot": false,
            "uuid": "c2cc0594-c041-4b76-80ea-18a6b186b120",
            "parentUUID": "26ebd73b-7764-4dfd-ad10-f7cf4d33a96f",
            "skipped": false
          }
        ],
        "failures": [],
        "skipped": [],
        "hasTests": true,
        "hasSuites": false,
        "totalTests": 1,
        "totalPasses": 1,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": true,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 87
      },
      {
        "title": "@put",
        "suites": [],
        "tests": [
          {
            "title": "should return a 200 code after updating postId 1",
            "fullTitle": "@put should return a 200 code after updating postId 1",
            "timedOut": false,
            "duration": 14,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "utils.httpPUT(<span class=\"hljs-string\">'/posts/20'</span>, {})<br>    .send(<br>        {<br>            id: <span class=\"hljs-number\">20</span>,<br>            title: <span class=\"hljs-string\">'candy crush'</span>,<br>            body: <span class=\"hljs-string\">'sodalicious juicy'</span>,<br>            userId: <span class=\"hljs-number\">1</span><br>        }<br>    )<br>    .expect(<span class=\"hljs-string\">'content-type'</span>, <span class=\"hljs-string\">'application/json; charset=utf-8'</span>)<br>    .expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">res</span>) </span>{<br>        <span class=\"hljs-keyword\">const</span> response = res.body;<br>        <span class=\"hljs-built_in\">console</span>.log(response);<br>        expect(response.id).to.equal(<span class=\"hljs-string\">'20'</span>);<br>        expect(response.title).to.equal(<span class=\"hljs-string\">'candy crush'</span>);<br>        expect(response.body).to.equal(<span class=\"hljs-string\">'sodalicious juicy'</span>);<br>        expect(response.userId).to.equal(<span class=\"hljs-number\">1</span>);<br>    })<br>    .expect(<span class=\"hljs-number\">200</span>, done);",
            "isRoot": false,
            "uuid": "4034dd40-0c53-41ea-8f2b-de33dd029c60",
            "parentUUID": "b6d2ee16-f375-4f5c-b0ad-9529ad2ae38f",
            "skipped": false
          },
          {
            "title": "should return a 200 code after updating postId 1",
            "fullTitle": "@put should return a 200 code after updating postId 1",
            "timedOut": false,
            "duration": 13,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "utils.httpPUT(<span class=\"hljs-string\">'/posts/1'</span>, {})<br>    .send(<br>        {<br>            id: <span class=\"hljs-number\">1</span>,<br>            title: <span class=\"hljs-string\">'foo'</span>,<br>            body: <span class=\"hljs-string\">'bar'</span>,<br>            userId: <span class=\"hljs-number\">1</span><br>        }<br>    )<br>    .expect(<span class=\"hljs-string\">'content-type'</span>, <span class=\"hljs-string\">'application/json; charset=utf-8'</span>)<br>    .expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">res</span>) </span>{<br>        <span class=\"hljs-keyword\">const</span> response = res.body;<br>        <span class=\"hljs-built_in\">console</span>.log(response);<br>        expect(response.id).to.equal(<span class=\"hljs-string\">'1'</span>);<br>        expect(response.title).to.equal(<span class=\"hljs-string\">'foo'</span>);<br>        expect(response.body).to.equal(<span class=\"hljs-string\">'bar'</span>);<br>        expect(response.userId).to.equal(<span class=\"hljs-number\">1</span>);<br>    })<br>    .expect(<span class=\"hljs-number\">200</span>, done);",
            "isRoot": false,
            "uuid": "91b7ce4a-180f-477b-98bc-a006d18f7c29",
            "parentUUID": "b6d2ee16-f375-4f5c-b0ad-9529ad2ae38f",
            "skipped": false
          }
        ],
        "pending": [],
        "root": false,
        "_timeout": 3000,
        "file": "/test/posts/PUT/updatePOST_200.js",
        "uuid": "b6d2ee16-f375-4f5c-b0ad-9529ad2ae38f",
        "fullFile": "/Users/garsenius/github/apiAutomatedTest/test/posts/PUT/updatePOST_200.js",
        "passes": [
          {
            "title": "should return a 200 code after updating postId 1",
            "fullTitle": "@put should return a 200 code after updating postId 1",
            "timedOut": false,
            "duration": 14,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "utils.httpPUT(<span class=\"hljs-string\">'/posts/20'</span>, {})<br>    .send(<br>        {<br>            id: <span class=\"hljs-number\">20</span>,<br>            title: <span class=\"hljs-string\">'candy crush'</span>,<br>            body: <span class=\"hljs-string\">'sodalicious juicy'</span>,<br>            userId: <span class=\"hljs-number\">1</span><br>        }<br>    )<br>    .expect(<span class=\"hljs-string\">'content-type'</span>, <span class=\"hljs-string\">'application/json; charset=utf-8'</span>)<br>    .expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">res</span>) </span>{<br>        <span class=\"hljs-keyword\">const</span> response = res.body;<br>        <span class=\"hljs-built_in\">console</span>.log(response);<br>        expect(response.id).to.equal(<span class=\"hljs-string\">'20'</span>);<br>        expect(response.title).to.equal(<span class=\"hljs-string\">'candy crush'</span>);<br>        expect(response.body).to.equal(<span class=\"hljs-string\">'sodalicious juicy'</span>);<br>        expect(response.userId).to.equal(<span class=\"hljs-number\">1</span>);<br>    })<br>    .expect(<span class=\"hljs-number\">200</span>, done);",
            "isRoot": false,
            "uuid": "4034dd40-0c53-41ea-8f2b-de33dd029c60",
            "parentUUID": "b6d2ee16-f375-4f5c-b0ad-9529ad2ae38f",
            "skipped": false
          },
          {
            "title": "should return a 200 code after updating postId 1",
            "fullTitle": "@put should return a 200 code after updating postId 1",
            "timedOut": false,
            "duration": 13,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "utils.httpPUT(<span class=\"hljs-string\">'/posts/1'</span>, {})<br>    .send(<br>        {<br>            id: <span class=\"hljs-number\">1</span>,<br>            title: <span class=\"hljs-string\">'foo'</span>,<br>            body: <span class=\"hljs-string\">'bar'</span>,<br>            userId: <span class=\"hljs-number\">1</span><br>        }<br>    )<br>    .expect(<span class=\"hljs-string\">'content-type'</span>, <span class=\"hljs-string\">'application/json; charset=utf-8'</span>)<br>    .expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">res</span>) </span>{<br>        <span class=\"hljs-keyword\">const</span> response = res.body;<br>        <span class=\"hljs-built_in\">console</span>.log(response);<br>        expect(response.id).to.equal(<span class=\"hljs-string\">'1'</span>);<br>        expect(response.title).to.equal(<span class=\"hljs-string\">'foo'</span>);<br>        expect(response.body).to.equal(<span class=\"hljs-string\">'bar'</span>);<br>        expect(response.userId).to.equal(<span class=\"hljs-number\">1</span>);<br>    })<br>    .expect(<span class=\"hljs-number\">200</span>, done);",
            "isRoot": false,
            "uuid": "91b7ce4a-180f-477b-98bc-a006d18f7c29",
            "parentUUID": "b6d2ee16-f375-4f5c-b0ad-9529ad2ae38f",
            "skipped": false
          }
        ],
        "failures": [],
        "skipped": [],
        "hasTests": true,
        "hasSuites": false,
        "totalTests": 2,
        "totalPasses": 2,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": true,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 27
      },
      {
        "title": "@get",
        "suites": [],
        "tests": [
          {
            "title": "should return a 200 OK status code for PostID 1",
            "fullTitle": "@get should return a 200 OK status code for PostID 1",
            "timedOut": false,
            "duration": 11,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "utils.httpGET(<span class=\"hljs-string\">'/users/1'</span>, {})<br>    .set(<span class=\"hljs-string\">'content-type'</span>, <span class=\"hljs-string\">'application/json; charset=utf-8'</span>)<br>    .expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">res</span>) </span>{<br>        <span class=\"hljs-keyword\">const</span> response = res.body;<br>        <span class=\"hljs-built_in\">console</span>.log(response);<br>        <span class=\"hljs-keyword\">return</span> assert.deepEqual(response,<br>            {<br>                <span class=\"hljs-string\">\"id\"</span>: <span class=\"hljs-number\">1</span>,<br>                <span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"Leanne Graham\"</span>,<br>                <span class=\"hljs-string\">\"username\"</span>: <span class=\"hljs-string\">\"Bret\"</span>,<br>                <span class=\"hljs-string\">\"email\"</span>: <span class=\"hljs-string\">\"Sincere@april.biz\"</span>,<br>                <span class=\"hljs-string\">\"address\"</span>: {<br>                    <span class=\"hljs-string\">\"street\"</span>: <span class=\"hljs-string\">\"Kulas Light\"</span>,<br>                    <span class=\"hljs-string\">\"suite\"</span>: <span class=\"hljs-string\">\"Apt. 556\"</span>,<br>                    <span class=\"hljs-string\">\"city\"</span>: <span class=\"hljs-string\">\"Gwenborough\"</span>,<br>                    <span class=\"hljs-string\">\"zipcode\"</span>: <span class=\"hljs-string\">\"92998-3874\"</span>,<br>                    <span class=\"hljs-string\">\"geo\"</span>: {<br>                        <span class=\"hljs-string\">\"lat\"</span>: <span class=\"hljs-string\">\"-37.3159\"</span>,<br>                        <span class=\"hljs-string\">\"lng\"</span>: <span class=\"hljs-string\">\"81.1496\"</span><br>                    }<br>                },<br>                <span class=\"hljs-string\">\"phone\"</span>: <span class=\"hljs-string\">\"1-770-736-8031 x56442\"</span>,<br>                <span class=\"hljs-string\">\"website\"</span>: <span class=\"hljs-string\">\"hildegard.org\"</span>,<br>                <span class=\"hljs-string\">\"company\"</span>: {<br>                    <span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"Romaguera-Crona\"</span>,<br>                    <span class=\"hljs-string\">\"catchPhrase\"</span>: <span class=\"hljs-string\">\"Multi-layered client-server neural-net\"</span>,<br>                    <span class=\"hljs-string\">\"bs\"</span>: <span class=\"hljs-string\">\"harness real-time e-markets\"</span><br>                }<br>            })<br>    })<br>    .expect(<span class=\"hljs-number\">200</span>, done);",
            "isRoot": false,
            "uuid": "9ba16c3e-3b69-42ce-afb3-82c375b1fcb2",
            "parentUUID": "03acd574-81c0-4eb2-aa5f-c87070e37cc7",
            "skipped": false
          },
          {
            "title": "should return a 200 OK status code for userId 1 using expect method",
            "fullTitle": "@get should return a 200 OK status code for userId 1 using expect method",
            "timedOut": false,
            "duration": 13,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "utils.httpGET(<span class=\"hljs-string\">'/users/1'</span>, {})<br>    .set(<span class=\"hljs-string\">'content-type'</span>, <span class=\"hljs-string\">'application/json; charset=utf-8'</span>)<br>    .expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">res</span>) </span>{<br>        <span class=\"hljs-keyword\">const</span> response = res.body;<br>        <span class=\"hljs-built_in\">console</span>.log(response);<br>        expect(response).to.have.property(<span class=\"hljs-string\">'id'</span>);<br>        expect(response).to.have.property(<span class=\"hljs-string\">'name'</span>);<br>        expect(response).to.have.property(<span class=\"hljs-string\">'username'</span>);<br>        expect(response).to.have.property(<span class=\"hljs-string\">'email'</span>);<br>        expect(response.id).to.equal(<span class=\"hljs-number\">1</span>);<br>        expect(response.email).to.equal(<span class=\"hljs-string\">'Sincere@april.biz'</span>);<br>        expect(response.address.city).to.equal(<span class=\"hljs-string\">'Gwenborough'</span>);<br><br>    })<br>    .expect(<span class=\"hljs-number\">200</span>, done);",
            "isRoot": false,
            "uuid": "2b83697d-40b9-4c1f-8451-a69dea4be2d7",
            "parentUUID": "03acd574-81c0-4eb2-aa5f-c87070e37cc7",
            "skipped": false
          },
          {
            "title": "should return a 200 OK status code for GET /users using expect method",
            "fullTitle": "@get should return a 200 OK status code for GET /users using expect method",
            "timedOut": false,
            "duration": 15,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "utils.httpGET(<span class=\"hljs-string\">'/users/'</span>, {})<br>    .set(<span class=\"hljs-string\">'content-type'</span>, <span class=\"hljs-string\">'application/json; charset=utf-8'</span>)<br>    .expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">res</span>) </span>{<br>        <span class=\"hljs-keyword\">const</span> response = res.body;<br>        <span class=\"hljs-built_in\">console</span>.log(response);<br>    })<br>    .expect(<span class=\"hljs-number\">200</span>, done);",
            "isRoot": false,
            "uuid": "6767aa14-d28f-413f-b46c-8402cd6832e3",
            "parentUUID": "03acd574-81c0-4eb2-aa5f-c87070e37cc7",
            "skipped": false
          }
        ],
        "pending": [],
        "root": false,
        "_timeout": 3000,
        "file": "/test/users/GET/getUSER_200.js",
        "uuid": "03acd574-81c0-4eb2-aa5f-c87070e37cc7",
        "fullFile": "/Users/garsenius/github/apiAutomatedTest/test/users/GET/getUSER_200.js",
        "passes": [
          {
            "title": "should return a 200 OK status code for PostID 1",
            "fullTitle": "@get should return a 200 OK status code for PostID 1",
            "timedOut": false,
            "duration": 11,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "utils.httpGET(<span class=\"hljs-string\">'/users/1'</span>, {})<br>    .set(<span class=\"hljs-string\">'content-type'</span>, <span class=\"hljs-string\">'application/json; charset=utf-8'</span>)<br>    .expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">res</span>) </span>{<br>        <span class=\"hljs-keyword\">const</span> response = res.body;<br>        <span class=\"hljs-built_in\">console</span>.log(response);<br>        <span class=\"hljs-keyword\">return</span> assert.deepEqual(response,<br>            {<br>                <span class=\"hljs-string\">\"id\"</span>: <span class=\"hljs-number\">1</span>,<br>                <span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"Leanne Graham\"</span>,<br>                <span class=\"hljs-string\">\"username\"</span>: <span class=\"hljs-string\">\"Bret\"</span>,<br>                <span class=\"hljs-string\">\"email\"</span>: <span class=\"hljs-string\">\"Sincere@april.biz\"</span>,<br>                <span class=\"hljs-string\">\"address\"</span>: {<br>                    <span class=\"hljs-string\">\"street\"</span>: <span class=\"hljs-string\">\"Kulas Light\"</span>,<br>                    <span class=\"hljs-string\">\"suite\"</span>: <span class=\"hljs-string\">\"Apt. 556\"</span>,<br>                    <span class=\"hljs-string\">\"city\"</span>: <span class=\"hljs-string\">\"Gwenborough\"</span>,<br>                    <span class=\"hljs-string\">\"zipcode\"</span>: <span class=\"hljs-string\">\"92998-3874\"</span>,<br>                    <span class=\"hljs-string\">\"geo\"</span>: {<br>                        <span class=\"hljs-string\">\"lat\"</span>: <span class=\"hljs-string\">\"-37.3159\"</span>,<br>                        <span class=\"hljs-string\">\"lng\"</span>: <span class=\"hljs-string\">\"81.1496\"</span><br>                    }<br>                },<br>                <span class=\"hljs-string\">\"phone\"</span>: <span class=\"hljs-string\">\"1-770-736-8031 x56442\"</span>,<br>                <span class=\"hljs-string\">\"website\"</span>: <span class=\"hljs-string\">\"hildegard.org\"</span>,<br>                <span class=\"hljs-string\">\"company\"</span>: {<br>                    <span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"Romaguera-Crona\"</span>,<br>                    <span class=\"hljs-string\">\"catchPhrase\"</span>: <span class=\"hljs-string\">\"Multi-layered client-server neural-net\"</span>,<br>                    <span class=\"hljs-string\">\"bs\"</span>: <span class=\"hljs-string\">\"harness real-time e-markets\"</span><br>                }<br>            })<br>    })<br>    .expect(<span class=\"hljs-number\">200</span>, done);",
            "isRoot": false,
            "uuid": "9ba16c3e-3b69-42ce-afb3-82c375b1fcb2",
            "parentUUID": "03acd574-81c0-4eb2-aa5f-c87070e37cc7",
            "skipped": false
          },
          {
            "title": "should return a 200 OK status code for userId 1 using expect method",
            "fullTitle": "@get should return a 200 OK status code for userId 1 using expect method",
            "timedOut": false,
            "duration": 13,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "utils.httpGET(<span class=\"hljs-string\">'/users/1'</span>, {})<br>    .set(<span class=\"hljs-string\">'content-type'</span>, <span class=\"hljs-string\">'application/json; charset=utf-8'</span>)<br>    .expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">res</span>) </span>{<br>        <span class=\"hljs-keyword\">const</span> response = res.body;<br>        <span class=\"hljs-built_in\">console</span>.log(response);<br>        expect(response).to.have.property(<span class=\"hljs-string\">'id'</span>);<br>        expect(response).to.have.property(<span class=\"hljs-string\">'name'</span>);<br>        expect(response).to.have.property(<span class=\"hljs-string\">'username'</span>);<br>        expect(response).to.have.property(<span class=\"hljs-string\">'email'</span>);<br>        expect(response.id).to.equal(<span class=\"hljs-number\">1</span>);<br>        expect(response.email).to.equal(<span class=\"hljs-string\">'Sincere@april.biz'</span>);<br>        expect(response.address.city).to.equal(<span class=\"hljs-string\">'Gwenborough'</span>);<br><br>    })<br>    .expect(<span class=\"hljs-number\">200</span>, done);",
            "isRoot": false,
            "uuid": "2b83697d-40b9-4c1f-8451-a69dea4be2d7",
            "parentUUID": "03acd574-81c0-4eb2-aa5f-c87070e37cc7",
            "skipped": false
          },
          {
            "title": "should return a 200 OK status code for GET /users using expect method",
            "fullTitle": "@get should return a 200 OK status code for GET /users using expect method",
            "timedOut": false,
            "duration": 15,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "utils.httpGET(<span class=\"hljs-string\">'/users/'</span>, {})<br>    .set(<span class=\"hljs-string\">'content-type'</span>, <span class=\"hljs-string\">'application/json; charset=utf-8'</span>)<br>    .expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">res</span>) </span>{<br>        <span class=\"hljs-keyword\">const</span> response = res.body;<br>        <span class=\"hljs-built_in\">console</span>.log(response);<br>    })<br>    .expect(<span class=\"hljs-number\">200</span>, done);",
            "isRoot": false,
            "uuid": "6767aa14-d28f-413f-b46c-8402cd6832e3",
            "parentUUID": "03acd574-81c0-4eb2-aa5f-c87070e37cc7",
            "skipped": false
          }
        ],
        "failures": [],
        "skipped": [],
        "hasTests": true,
        "hasSuites": false,
        "totalTests": 3,
        "totalPasses": 3,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": true,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 39
      }
    ],
    "tests": [],
    "pending": [],
    "root": true,
    "_timeout": 3000,
    "uuid": "9884450a-7640-429f-b5b2-210fdfc89079",
    "fullFile": "",
    "file": "",
    "passes": [],
    "failures": [],
    "skipped": [],
    "hasTests": false,
    "hasSuites": true,
    "totalTests": 0,
    "totalPasses": 0,
    "totalFailures": 0,
    "totalPending": 0,
    "totalSkipped": 0,
    "hasPasses": false,
    "hasFailures": false,
    "hasPending": false,
    "hasSkipped": false,
    "duration": 0,
    "rootEmpty": true
  },
  "allTests": [
    {
      "title": "should return a 200 OK status code for Comment ID 1",
      "fullTitle": "@get should return a 200 OK status code for Comment ID 1",
      "timedOut": false,
      "duration": 54,
      "state": "passed",
      "speed": "medium",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "utils.httpGET(<span class=\"hljs-string\">'/comments/1'</span>, {})<br>    .set(<span class=\"hljs-string\">'content-type'</span>, <span class=\"hljs-string\">'application/json; charset=utf-8'</span>)<br>    .expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">res</span>) </span>{<br>        <span class=\"hljs-keyword\">const</span> response = res.body;<br>        <span class=\"hljs-built_in\">console</span>.log(response);<br>        <span class=\"hljs-keyword\">return</span> assert.deepEqual(response,<br>            {<br>                <span class=\"hljs-string\">\"postId\"</span>: <span class=\"hljs-number\">1</span>,<br>                <span class=\"hljs-string\">\"id\"</span>: <span class=\"hljs-number\">1</span>,<br>                <span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"id labore ex et quam laborum\"</span>,<br>                <span class=\"hljs-string\">\"email\"</span>: <span class=\"hljs-string\">\"Eliseo@gardner.biz\"</span>,<br>                <span class=\"hljs-string\">\"body\"</span>: <span class=\"hljs-string\">\"laudantium enim quasi est quidem magnam voluptate ipsam eos\\ntempora quo necessitatibus\\ndolor quam autem quasi\\nreiciendis et nam sapiente accusantium\"</span><br>            })<br>    })<br>    .expect(<span class=\"hljs-number\">200</span>, done);",
      "isRoot": false,
      "uuid": "d7992d01-dbbe-4307-981a-8cfacdf5ac14",
      "parentUUID": "220a2e2a-acd5-49fd-80c8-0f14c25e742b",
      "skipped": false
    },
    {
      "title": "should return a 200 OK status code for comment ID 1 using expect method",
      "fullTitle": "@get should return a 200 OK status code for comment ID 1 using expect method",
      "timedOut": false,
      "duration": 17,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "utils.httpGET(<span class=\"hljs-string\">'/comments/1'</span>, {})<br>    .set(<span class=\"hljs-string\">'content-type'</span>, <span class=\"hljs-string\">'application/json; charset=utf-8'</span>)<br>    .expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">res</span>) </span>{<br>        <span class=\"hljs-keyword\">const</span> response = res.body;<br>        <span class=\"hljs-built_in\">console</span>.log(response);<br>        expect(response).to.have.property(<span class=\"hljs-string\">'postId'</span>);<br>        expect(response).to.have.property(<span class=\"hljs-string\">'id'</span>);<br>        expect(response).to.have.property(<span class=\"hljs-string\">'name'</span>);<br>        expect(response).to.have.property(<span class=\"hljs-string\">'email'</span>);<br>        expect(response).to.have.property(<span class=\"hljs-string\">'body'</span>);<br>        expect(response.id).to.equal(<span class=\"hljs-number\">1</span>);<br>        expect(response.email).to.equal(<span class=\"hljs-string\">'Eliseo@gardner.biz'</span>);<br>        expect(response.name).to.equal(<span class=\"hljs-string\">'id labore ex et quam laborum'</span>);<br><br>    })<br>    .expect(<span class=\"hljs-number\">200</span>, done);",
      "isRoot": false,
      "uuid": "74f0ce47-9b0d-487b-82e7-19dd886a7728",
      "parentUUID": "220a2e2a-acd5-49fd-80c8-0f14c25e742b",
      "skipped": false
    },
    {
      "title": "should return a 200 OK status code for GET /comments using expect method",
      "fullTitle": "@get should return a 200 OK status code for GET /comments using expect method",
      "timedOut": false,
      "duration": 53,
      "state": "passed",
      "speed": "medium",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "utils.httpGET(<span class=\"hljs-string\">'/comments/'</span>, {})<br>    .set(<span class=\"hljs-string\">'content-type'</span>, <span class=\"hljs-string\">'application/json; charset=utf-8'</span>)<br>    .expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">res</span>) </span>{<br>        <span class=\"hljs-keyword\">const</span> response = res.body;<br>        <span class=\"hljs-built_in\">console</span>.log(response);<br>    })<br>    .expect(<span class=\"hljs-number\">200</span>, done);",
      "isRoot": false,
      "uuid": "f5c9db15-9821-44e3-9f86-9b27296f4ced",
      "parentUUID": "220a2e2a-acd5-49fd-80c8-0f14c25e742b",
      "skipped": false
    },
    {
      "title": "should return a 200 code after deleting fake postId 100",
      "fullTitle": "@delete should return a 200 code after deleting fake postId 100",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "utils.httpDELETE(<span class=\"hljs-string\">'/posts/101'</span>, {})<br>   .send(<br>       {<br>           id: <span class=\"hljs-number\">101</span>,<br>           title: <span class=\"hljs-string\">'foo'</span>,<br>           body: <span class=\"hljs-string\">'bar'</span>,<br>           userId: <span class=\"hljs-number\">1</span><br>       }<br>   )<br>   .expect(<span class=\"hljs-string\">'content-type'</span>, <span class=\"hljs-string\">'application/json; charset=utf-8'</span>)<br>   .expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">res</span>) </span>{<br>       <span class=\"hljs-keyword\">const</span> response = res.body;<br>       <span class=\"hljs-built_in\">console</span>.log(response)<br>       <span class=\"hljs-keyword\">return</span> assert.deepEqual(response,<br>           {} <span class=\"hljs-comment\">//return empty response</span><br>       );<br>   })<br>    .expect(<span class=\"hljs-number\">200</span>);",
      "isRoot": false,
      "uuid": "1264b227-8cdc-4867-9857-a1a88ecde01e",
      "parentUUID": "4e5e8695-a212-4fe7-ad15-063474bb8a51",
      "skipped": false
    },
    {
      "title": "should return a 200 OK status code for PostID 1",
      "fullTitle": "@get should return a 200 OK status code for PostID 1",
      "timedOut": false,
      "duration": 10,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "utils.httpGET(<span class=\"hljs-string\">'/posts/1'</span>, {})<br>    .set(<span class=\"hljs-string\">'content-type'</span>, <span class=\"hljs-string\">'application/json; charset=utf-8'</span>)<br>    .expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">res</span>) </span>{<br>        <span class=\"hljs-keyword\">const</span> response = res.body;<br>        <span class=\"hljs-built_in\">console</span>.log(response);<br>        <span class=\"hljs-keyword\">return</span> assert.deepEqual(response,<br>            {<br>                <span class=\"hljs-string\">\"id\"</span>: <span class=\"hljs-string\">\"1\"</span>,<br>                <span class=\"hljs-string\">\"title\"</span>: <span class=\"hljs-string\">\"foo\"</span>,<br>                <span class=\"hljs-string\">\"body\"</span>: <span class=\"hljs-string\">\"bar\"</span>,<br>                <span class=\"hljs-string\">\"userId\"</span>: <span class=\"hljs-number\">1</span><br>            })<br>    })<br>    .expect(<span class=\"hljs-number\">200</span>, done);",
      "isRoot": false,
      "uuid": "e8eb76bb-7e1c-4812-a902-d2802755d686",
      "parentUUID": "d0eeb829-7bfa-4d2f-b29c-fe48313ec0de",
      "skipped": false
    },
    {
      "title": "should return a 200 OK status code for PostID 1 using expect method",
      "fullTitle": "@get should return a 200 OK status code for PostID 1 using expect method",
      "timedOut": false,
      "duration": 8,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "utils.httpGET(<span class=\"hljs-string\">'/posts/1'</span>, {})<br>    .set(<span class=\"hljs-string\">'content-type'</span>, <span class=\"hljs-string\">'application/json; charset=utf-8'</span>)<br>    .expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">res</span>) </span>{<br>        <span class=\"hljs-keyword\">const</span> response = res.body;<br>        <span class=\"hljs-built_in\">console</span>.log(response);<br>        expect(response).to.have.property(<span class=\"hljs-string\">'id'</span>);<br>        expect(response).to.have.property(<span class=\"hljs-string\">'title'</span>);<br>        expect(response).to.have.property(<span class=\"hljs-string\">'body'</span>);<br>        expect(response).to.have.property(<span class=\"hljs-string\">'userId'</span>);<br>        expect(response.id).to.equal(<span class=\"hljs-string\">'1'</span>);<br>    })<br>    .expect(<span class=\"hljs-number\">200</span>, done);",
      "isRoot": false,
      "uuid": "2d93893d-8772-43c1-9aa1-992c007bc89a",
      "parentUUID": "d0eeb829-7bfa-4d2f-b29c-fe48313ec0de",
      "skipped": false
    },
    {
      "title": "should return a 200 OK status code for PostID 1 using expect method",
      "fullTitle": "@get should return a 200 OK status code for PostID 1 using expect method",
      "timedOut": false,
      "duration": 32,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "utils.httpGET(<span class=\"hljs-string\">'/posts/'</span>, {})<br>    .set(<span class=\"hljs-string\">'content-type'</span>, <span class=\"hljs-string\">'application/json; charset=utf-8'</span>)<br>    .expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">res</span>) </span>{<br>        <span class=\"hljs-keyword\">const</span> response = res.body;<br>        <span class=\"hljs-built_in\">console</span>.log(response);<br>    })<br>    .expect(<span class=\"hljs-number\">200</span>, done);",
      "isRoot": false,
      "uuid": "cff379d6-44a6-42e1-b0d7-d8d0198d59eb",
      "parentUUID": "d0eeb829-7bfa-4d2f-b29c-fe48313ec0de",
      "skipped": false
    },
    {
      "title": "should return a 201 code after posting",
      "fullTitle": "@post should return a 201 code after posting",
      "timedOut": false,
      "duration": 87,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "utils.httpPOST(<span class=\"hljs-string\">'/posts'</span>, {})<br>    .send({title: <span class=\"hljs-string\">'foo'</span>, body: <span class=\"hljs-string\">'bar'</span>, userId: <span class=\"hljs-number\">1</span>})<br>    .expect(<span class=\"hljs-string\">'content-type'</span>, <span class=\"hljs-string\">'application/json; charset=utf-8'</span>)<br>    .expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">res</span>) </span>{<br>        <span class=\"hljs-keyword\">const</span> response = res.body;<br>        <span class=\"hljs-built_in\">console</span>.log(response);<br>        <span class=\"hljs-comment\">//expect(response.id).to.equal(105);</span><br>        expect(response.title).to.equal(<span class=\"hljs-string\">'foo'</span>);<br>        expect(response.body).to.equal(<span class=\"hljs-string\">'bar'</span>);<br>        expect(response.userId).to.equal(<span class=\"hljs-number\">1</span>);<br>    })<br>    .expect(<span class=\"hljs-number\">201</span>, done)",
      "isRoot": false,
      "uuid": "c1ed68a8-7e2b-4abf-8d28-8aa7d0ce2b69",
      "parentUUID": "26ebd73b-7764-4dfd-ad10-f7cf4d33a96f",
      "skipped": false
    },
    {
      "title": "should return a 200 code after updating postId 1",
      "fullTitle": "@put should return a 200 code after updating postId 1",
      "timedOut": false,
      "duration": 14,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "utils.httpPUT(<span class=\"hljs-string\">'/posts/20'</span>, {})<br>    .send(<br>        {<br>            id: <span class=\"hljs-number\">20</span>,<br>            title: <span class=\"hljs-string\">'candy crush'</span>,<br>            body: <span class=\"hljs-string\">'sodalicious juicy'</span>,<br>            userId: <span class=\"hljs-number\">1</span><br>        }<br>    )<br>    .expect(<span class=\"hljs-string\">'content-type'</span>, <span class=\"hljs-string\">'application/json; charset=utf-8'</span>)<br>    .expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">res</span>) </span>{<br>        <span class=\"hljs-keyword\">const</span> response = res.body;<br>        <span class=\"hljs-built_in\">console</span>.log(response);<br>        expect(response.id).to.equal(<span class=\"hljs-string\">'20'</span>);<br>        expect(response.title).to.equal(<span class=\"hljs-string\">'candy crush'</span>);<br>        expect(response.body).to.equal(<span class=\"hljs-string\">'sodalicious juicy'</span>);<br>        expect(response.userId).to.equal(<span class=\"hljs-number\">1</span>);<br>    })<br>    .expect(<span class=\"hljs-number\">200</span>, done);",
      "isRoot": false,
      "uuid": "c027561a-76ca-4942-8781-8e9444d74208",
      "parentUUID": "b6d2ee16-f375-4f5c-b0ad-9529ad2ae38f",
      "skipped": false
    },
    {
      "title": "should return a 200 code after updating postId 1",
      "fullTitle": "@put should return a 200 code after updating postId 1",
      "timedOut": false,
      "duration": 13,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "utils.httpPUT(<span class=\"hljs-string\">'/posts/1'</span>, {})<br>    .send(<br>        {<br>            id: <span class=\"hljs-number\">1</span>,<br>            title: <span class=\"hljs-string\">'foo'</span>,<br>            body: <span class=\"hljs-string\">'bar'</span>,<br>            userId: <span class=\"hljs-number\">1</span><br>        }<br>    )<br>    .expect(<span class=\"hljs-string\">'content-type'</span>, <span class=\"hljs-string\">'application/json; charset=utf-8'</span>)<br>    .expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">res</span>) </span>{<br>        <span class=\"hljs-keyword\">const</span> response = res.body;<br>        <span class=\"hljs-built_in\">console</span>.log(response);<br>        expect(response.id).to.equal(<span class=\"hljs-string\">'1'</span>);<br>        expect(response.title).to.equal(<span class=\"hljs-string\">'foo'</span>);<br>        expect(response.body).to.equal(<span class=\"hljs-string\">'bar'</span>);<br>        expect(response.userId).to.equal(<span class=\"hljs-number\">1</span>);<br>    })<br>    .expect(<span class=\"hljs-number\">200</span>, done);",
      "isRoot": false,
      "uuid": "13f69391-0b97-4a4c-8fdb-8d6245598463",
      "parentUUID": "b6d2ee16-f375-4f5c-b0ad-9529ad2ae38f",
      "skipped": false
    },
    {
      "title": "should return a 200 OK status code for PostID 1",
      "fullTitle": "@get should return a 200 OK status code for PostID 1",
      "timedOut": false,
      "duration": 11,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "utils.httpGET(<span class=\"hljs-string\">'/users/1'</span>, {})<br>    .set(<span class=\"hljs-string\">'content-type'</span>, <span class=\"hljs-string\">'application/json; charset=utf-8'</span>)<br>    .expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">res</span>) </span>{<br>        <span class=\"hljs-keyword\">const</span> response = res.body;<br>        <span class=\"hljs-built_in\">console</span>.log(response);<br>        <span class=\"hljs-keyword\">return</span> assert.deepEqual(response,<br>            {<br>                <span class=\"hljs-string\">\"id\"</span>: <span class=\"hljs-number\">1</span>,<br>                <span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"Leanne Graham\"</span>,<br>                <span class=\"hljs-string\">\"username\"</span>: <span class=\"hljs-string\">\"Bret\"</span>,<br>                <span class=\"hljs-string\">\"email\"</span>: <span class=\"hljs-string\">\"Sincere@april.biz\"</span>,<br>                <span class=\"hljs-string\">\"address\"</span>: {<br>                    <span class=\"hljs-string\">\"street\"</span>: <span class=\"hljs-string\">\"Kulas Light\"</span>,<br>                    <span class=\"hljs-string\">\"suite\"</span>: <span class=\"hljs-string\">\"Apt. 556\"</span>,<br>                    <span class=\"hljs-string\">\"city\"</span>: <span class=\"hljs-string\">\"Gwenborough\"</span>,<br>                    <span class=\"hljs-string\">\"zipcode\"</span>: <span class=\"hljs-string\">\"92998-3874\"</span>,<br>                    <span class=\"hljs-string\">\"geo\"</span>: {<br>                        <span class=\"hljs-string\">\"lat\"</span>: <span class=\"hljs-string\">\"-37.3159\"</span>,<br>                        <span class=\"hljs-string\">\"lng\"</span>: <span class=\"hljs-string\">\"81.1496\"</span><br>                    }<br>                },<br>                <span class=\"hljs-string\">\"phone\"</span>: <span class=\"hljs-string\">\"1-770-736-8031 x56442\"</span>,<br>                <span class=\"hljs-string\">\"website\"</span>: <span class=\"hljs-string\">\"hildegard.org\"</span>,<br>                <span class=\"hljs-string\">\"company\"</span>: {<br>                    <span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"Romaguera-Crona\"</span>,<br>                    <span class=\"hljs-string\">\"catchPhrase\"</span>: <span class=\"hljs-string\">\"Multi-layered client-server neural-net\"</span>,<br>                    <span class=\"hljs-string\">\"bs\"</span>: <span class=\"hljs-string\">\"harness real-time e-markets\"</span><br>                }<br>            })<br>    })<br>    .expect(<span class=\"hljs-number\">200</span>, done);",
      "isRoot": false,
      "uuid": "57643fc1-7ef3-48b8-8400-41b7fa11d362",
      "parentUUID": "03acd574-81c0-4eb2-aa5f-c87070e37cc7",
      "skipped": false
    },
    {
      "title": "should return a 200 OK status code for userId 1 using expect method",
      "fullTitle": "@get should return a 200 OK status code for userId 1 using expect method",
      "timedOut": false,
      "duration": 13,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "utils.httpGET(<span class=\"hljs-string\">'/users/1'</span>, {})<br>    .set(<span class=\"hljs-string\">'content-type'</span>, <span class=\"hljs-string\">'application/json; charset=utf-8'</span>)<br>    .expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">res</span>) </span>{<br>        <span class=\"hljs-keyword\">const</span> response = res.body;<br>        <span class=\"hljs-built_in\">console</span>.log(response);<br>        expect(response).to.have.property(<span class=\"hljs-string\">'id'</span>);<br>        expect(response).to.have.property(<span class=\"hljs-string\">'name'</span>);<br>        expect(response).to.have.property(<span class=\"hljs-string\">'username'</span>);<br>        expect(response).to.have.property(<span class=\"hljs-string\">'email'</span>);<br>        expect(response.id).to.equal(<span class=\"hljs-number\">1</span>);<br>        expect(response.email).to.equal(<span class=\"hljs-string\">'Sincere@april.biz'</span>);<br>        expect(response.address.city).to.equal(<span class=\"hljs-string\">'Gwenborough'</span>);<br><br>    })<br>    .expect(<span class=\"hljs-number\">200</span>, done);",
      "isRoot": false,
      "uuid": "f8d26ca2-7fd7-4b5a-9da6-9a0e3910b0df",
      "parentUUID": "03acd574-81c0-4eb2-aa5f-c87070e37cc7",
      "skipped": false
    },
    {
      "title": "should return a 200 OK status code for GET /users using expect method",
      "fullTitle": "@get should return a 200 OK status code for GET /users using expect method",
      "timedOut": false,
      "duration": 15,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "utils.httpGET(<span class=\"hljs-string\">'/users/'</span>, {})<br>    .set(<span class=\"hljs-string\">'content-type'</span>, <span class=\"hljs-string\">'application/json; charset=utf-8'</span>)<br>    .expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">res</span>) </span>{<br>        <span class=\"hljs-keyword\">const</span> response = res.body;<br>        <span class=\"hljs-built_in\">console</span>.log(response);<br>    })<br>    .expect(<span class=\"hljs-number\">200</span>, done);",
      "isRoot": false,
      "uuid": "81dfafcf-373b-412c-9fec-740417869c87",
      "parentUUID": "03acd574-81c0-4eb2-aa5f-c87070e37cc7",
      "skipped": false
    }
  ],
  "allPending": [],
  "allPasses": [
    {
      "title": "should return a 200 OK status code for Comment ID 1",
      "fullTitle": "@get should return a 200 OK status code for Comment ID 1",
      "timedOut": false,
      "duration": 54,
      "state": "passed",
      "speed": "medium",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "utils.httpGET(<span class=\"hljs-string\">'/comments/1'</span>, {})<br>    .set(<span class=\"hljs-string\">'content-type'</span>, <span class=\"hljs-string\">'application/json; charset=utf-8'</span>)<br>    .expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">res</span>) </span>{<br>        <span class=\"hljs-keyword\">const</span> response = res.body;<br>        <span class=\"hljs-built_in\">console</span>.log(response);<br>        <span class=\"hljs-keyword\">return</span> assert.deepEqual(response,<br>            {<br>                <span class=\"hljs-string\">\"postId\"</span>: <span class=\"hljs-number\">1</span>,<br>                <span class=\"hljs-string\">\"id\"</span>: <span class=\"hljs-number\">1</span>,<br>                <span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"id labore ex et quam laborum\"</span>,<br>                <span class=\"hljs-string\">\"email\"</span>: <span class=\"hljs-string\">\"Eliseo@gardner.biz\"</span>,<br>                <span class=\"hljs-string\">\"body\"</span>: <span class=\"hljs-string\">\"laudantium enim quasi est quidem magnam voluptate ipsam eos\\ntempora quo necessitatibus\\ndolor quam autem quasi\\nreiciendis et nam sapiente accusantium\"</span><br>            })<br>    })<br>    .expect(<span class=\"hljs-number\">200</span>, done);",
      "isRoot": false,
      "uuid": "e7070a55-d877-44ba-b2ac-cdac05be68f6",
      "parentUUID": "220a2e2a-acd5-49fd-80c8-0f14c25e742b",
      "skipped": false
    },
    {
      "title": "should return a 200 OK status code for comment ID 1 using expect method",
      "fullTitle": "@get should return a 200 OK status code for comment ID 1 using expect method",
      "timedOut": false,
      "duration": 17,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "utils.httpGET(<span class=\"hljs-string\">'/comments/1'</span>, {})<br>    .set(<span class=\"hljs-string\">'content-type'</span>, <span class=\"hljs-string\">'application/json; charset=utf-8'</span>)<br>    .expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">res</span>) </span>{<br>        <span class=\"hljs-keyword\">const</span> response = res.body;<br>        <span class=\"hljs-built_in\">console</span>.log(response);<br>        expect(response).to.have.property(<span class=\"hljs-string\">'postId'</span>);<br>        expect(response).to.have.property(<span class=\"hljs-string\">'id'</span>);<br>        expect(response).to.have.property(<span class=\"hljs-string\">'name'</span>);<br>        expect(response).to.have.property(<span class=\"hljs-string\">'email'</span>);<br>        expect(response).to.have.property(<span class=\"hljs-string\">'body'</span>);<br>        expect(response.id).to.equal(<span class=\"hljs-number\">1</span>);<br>        expect(response.email).to.equal(<span class=\"hljs-string\">'Eliseo@gardner.biz'</span>);<br>        expect(response.name).to.equal(<span class=\"hljs-string\">'id labore ex et quam laborum'</span>);<br><br>    })<br>    .expect(<span class=\"hljs-number\">200</span>, done);",
      "isRoot": false,
      "uuid": "597b00bb-413d-4154-8ca9-97a273b591d8",
      "parentUUID": "220a2e2a-acd5-49fd-80c8-0f14c25e742b",
      "skipped": false
    },
    {
      "title": "should return a 200 OK status code for GET /comments using expect method",
      "fullTitle": "@get should return a 200 OK status code for GET /comments using expect method",
      "timedOut": false,
      "duration": 53,
      "state": "passed",
      "speed": "medium",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "utils.httpGET(<span class=\"hljs-string\">'/comments/'</span>, {})<br>    .set(<span class=\"hljs-string\">'content-type'</span>, <span class=\"hljs-string\">'application/json; charset=utf-8'</span>)<br>    .expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">res</span>) </span>{<br>        <span class=\"hljs-keyword\">const</span> response = res.body;<br>        <span class=\"hljs-built_in\">console</span>.log(response);<br>    })<br>    .expect(<span class=\"hljs-number\">200</span>, done);",
      "isRoot": false,
      "uuid": "a615cf5c-0e28-4ae1-bead-927b9f49a3ad",
      "parentUUID": "220a2e2a-acd5-49fd-80c8-0f14c25e742b",
      "skipped": false
    },
    {
      "title": "should return a 200 code after deleting fake postId 100",
      "fullTitle": "@delete should return a 200 code after deleting fake postId 100",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "utils.httpDELETE(<span class=\"hljs-string\">'/posts/101'</span>, {})<br>   .send(<br>       {<br>           id: <span class=\"hljs-number\">101</span>,<br>           title: <span class=\"hljs-string\">'foo'</span>,<br>           body: <span class=\"hljs-string\">'bar'</span>,<br>           userId: <span class=\"hljs-number\">1</span><br>       }<br>   )<br>   .expect(<span class=\"hljs-string\">'content-type'</span>, <span class=\"hljs-string\">'application/json; charset=utf-8'</span>)<br>   .expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">res</span>) </span>{<br>       <span class=\"hljs-keyword\">const</span> response = res.body;<br>       <span class=\"hljs-built_in\">console</span>.log(response)<br>       <span class=\"hljs-keyword\">return</span> assert.deepEqual(response,<br>           {} <span class=\"hljs-comment\">//return empty response</span><br>       );<br>   })<br>    .expect(<span class=\"hljs-number\">200</span>);",
      "isRoot": false,
      "uuid": "fc56e273-8d19-4cdd-8967-47120fa2d22c",
      "parentUUID": "4e5e8695-a212-4fe7-ad15-063474bb8a51",
      "skipped": false
    },
    {
      "title": "should return a 200 OK status code for PostID 1",
      "fullTitle": "@get should return a 200 OK status code for PostID 1",
      "timedOut": false,
      "duration": 10,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "utils.httpGET(<span class=\"hljs-string\">'/posts/1'</span>, {})<br>    .set(<span class=\"hljs-string\">'content-type'</span>, <span class=\"hljs-string\">'application/json; charset=utf-8'</span>)<br>    .expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">res</span>) </span>{<br>        <span class=\"hljs-keyword\">const</span> response = res.body;<br>        <span class=\"hljs-built_in\">console</span>.log(response);<br>        <span class=\"hljs-keyword\">return</span> assert.deepEqual(response,<br>            {<br>                <span class=\"hljs-string\">\"id\"</span>: <span class=\"hljs-string\">\"1\"</span>,<br>                <span class=\"hljs-string\">\"title\"</span>: <span class=\"hljs-string\">\"foo\"</span>,<br>                <span class=\"hljs-string\">\"body\"</span>: <span class=\"hljs-string\">\"bar\"</span>,<br>                <span class=\"hljs-string\">\"userId\"</span>: <span class=\"hljs-number\">1</span><br>            })<br>    })<br>    .expect(<span class=\"hljs-number\">200</span>, done);",
      "isRoot": false,
      "uuid": "d313e3c7-156f-45fb-be35-726495c589c2",
      "parentUUID": "d0eeb829-7bfa-4d2f-b29c-fe48313ec0de",
      "skipped": false
    },
    {
      "title": "should return a 200 OK status code for PostID 1 using expect method",
      "fullTitle": "@get should return a 200 OK status code for PostID 1 using expect method",
      "timedOut": false,
      "duration": 8,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "utils.httpGET(<span class=\"hljs-string\">'/posts/1'</span>, {})<br>    .set(<span class=\"hljs-string\">'content-type'</span>, <span class=\"hljs-string\">'application/json; charset=utf-8'</span>)<br>    .expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">res</span>) </span>{<br>        <span class=\"hljs-keyword\">const</span> response = res.body;<br>        <span class=\"hljs-built_in\">console</span>.log(response);<br>        expect(response).to.have.property(<span class=\"hljs-string\">'id'</span>);<br>        expect(response).to.have.property(<span class=\"hljs-string\">'title'</span>);<br>        expect(response).to.have.property(<span class=\"hljs-string\">'body'</span>);<br>        expect(response).to.have.property(<span class=\"hljs-string\">'userId'</span>);<br>        expect(response.id).to.equal(<span class=\"hljs-string\">'1'</span>);<br>    })<br>    .expect(<span class=\"hljs-number\">200</span>, done);",
      "isRoot": false,
      "uuid": "71cdfad4-282b-4a48-8225-7f6b27b02878",
      "parentUUID": "d0eeb829-7bfa-4d2f-b29c-fe48313ec0de",
      "skipped": false
    },
    {
      "title": "should return a 200 OK status code for PostID 1 using expect method",
      "fullTitle": "@get should return a 200 OK status code for PostID 1 using expect method",
      "timedOut": false,
      "duration": 32,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "utils.httpGET(<span class=\"hljs-string\">'/posts/'</span>, {})<br>    .set(<span class=\"hljs-string\">'content-type'</span>, <span class=\"hljs-string\">'application/json; charset=utf-8'</span>)<br>    .expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">res</span>) </span>{<br>        <span class=\"hljs-keyword\">const</span> response = res.body;<br>        <span class=\"hljs-built_in\">console</span>.log(response);<br>    })<br>    .expect(<span class=\"hljs-number\">200</span>, done);",
      "isRoot": false,
      "uuid": "91cd3e5b-7e89-4113-9d13-f8aebf882336",
      "parentUUID": "d0eeb829-7bfa-4d2f-b29c-fe48313ec0de",
      "skipped": false
    },
    {
      "title": "should return a 201 code after posting",
      "fullTitle": "@post should return a 201 code after posting",
      "timedOut": false,
      "duration": 87,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "utils.httpPOST(<span class=\"hljs-string\">'/posts'</span>, {})<br>    .send({title: <span class=\"hljs-string\">'foo'</span>, body: <span class=\"hljs-string\">'bar'</span>, userId: <span class=\"hljs-number\">1</span>})<br>    .expect(<span class=\"hljs-string\">'content-type'</span>, <span class=\"hljs-string\">'application/json; charset=utf-8'</span>)<br>    .expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">res</span>) </span>{<br>        <span class=\"hljs-keyword\">const</span> response = res.body;<br>        <span class=\"hljs-built_in\">console</span>.log(response);<br>        <span class=\"hljs-comment\">//expect(response.id).to.equal(105);</span><br>        expect(response.title).to.equal(<span class=\"hljs-string\">'foo'</span>);<br>        expect(response.body).to.equal(<span class=\"hljs-string\">'bar'</span>);<br>        expect(response.userId).to.equal(<span class=\"hljs-number\">1</span>);<br>    })<br>    .expect(<span class=\"hljs-number\">201</span>, done)",
      "isRoot": false,
      "uuid": "b6699fc7-5a4a-4cee-a772-47c383240bf9",
      "parentUUID": "26ebd73b-7764-4dfd-ad10-f7cf4d33a96f",
      "skipped": false
    },
    {
      "title": "should return a 200 code after updating postId 1",
      "fullTitle": "@put should return a 200 code after updating postId 1",
      "timedOut": false,
      "duration": 14,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "utils.httpPUT(<span class=\"hljs-string\">'/posts/20'</span>, {})<br>    .send(<br>        {<br>            id: <span class=\"hljs-number\">20</span>,<br>            title: <span class=\"hljs-string\">'candy crush'</span>,<br>            body: <span class=\"hljs-string\">'sodalicious juicy'</span>,<br>            userId: <span class=\"hljs-number\">1</span><br>        }<br>    )<br>    .expect(<span class=\"hljs-string\">'content-type'</span>, <span class=\"hljs-string\">'application/json; charset=utf-8'</span>)<br>    .expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">res</span>) </span>{<br>        <span class=\"hljs-keyword\">const</span> response = res.body;<br>        <span class=\"hljs-built_in\">console</span>.log(response);<br>        expect(response.id).to.equal(<span class=\"hljs-string\">'20'</span>);<br>        expect(response.title).to.equal(<span class=\"hljs-string\">'candy crush'</span>);<br>        expect(response.body).to.equal(<span class=\"hljs-string\">'sodalicious juicy'</span>);<br>        expect(response.userId).to.equal(<span class=\"hljs-number\">1</span>);<br>    })<br>    .expect(<span class=\"hljs-number\">200</span>, done);",
      "isRoot": false,
      "uuid": "92d2faa3-0c00-4897-9e54-69efde7042d1",
      "parentUUID": "b6d2ee16-f375-4f5c-b0ad-9529ad2ae38f",
      "skipped": false
    },
    {
      "title": "should return a 200 code after updating postId 1",
      "fullTitle": "@put should return a 200 code after updating postId 1",
      "timedOut": false,
      "duration": 13,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "utils.httpPUT(<span class=\"hljs-string\">'/posts/1'</span>, {})<br>    .send(<br>        {<br>            id: <span class=\"hljs-number\">1</span>,<br>            title: <span class=\"hljs-string\">'foo'</span>,<br>            body: <span class=\"hljs-string\">'bar'</span>,<br>            userId: <span class=\"hljs-number\">1</span><br>        }<br>    )<br>    .expect(<span class=\"hljs-string\">'content-type'</span>, <span class=\"hljs-string\">'application/json; charset=utf-8'</span>)<br>    .expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">res</span>) </span>{<br>        <span class=\"hljs-keyword\">const</span> response = res.body;<br>        <span class=\"hljs-built_in\">console</span>.log(response);<br>        expect(response.id).to.equal(<span class=\"hljs-string\">'1'</span>);<br>        expect(response.title).to.equal(<span class=\"hljs-string\">'foo'</span>);<br>        expect(response.body).to.equal(<span class=\"hljs-string\">'bar'</span>);<br>        expect(response.userId).to.equal(<span class=\"hljs-number\">1</span>);<br>    })<br>    .expect(<span class=\"hljs-number\">200</span>, done);",
      "isRoot": false,
      "uuid": "4d5c8703-c20e-44ea-951b-b481dad2699f",
      "parentUUID": "b6d2ee16-f375-4f5c-b0ad-9529ad2ae38f",
      "skipped": false
    },
    {
      "title": "should return a 200 OK status code for PostID 1",
      "fullTitle": "@get should return a 200 OK status code for PostID 1",
      "timedOut": false,
      "duration": 11,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "utils.httpGET(<span class=\"hljs-string\">'/users/1'</span>, {})<br>    .set(<span class=\"hljs-string\">'content-type'</span>, <span class=\"hljs-string\">'application/json; charset=utf-8'</span>)<br>    .expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">res</span>) </span>{<br>        <span class=\"hljs-keyword\">const</span> response = res.body;<br>        <span class=\"hljs-built_in\">console</span>.log(response);<br>        <span class=\"hljs-keyword\">return</span> assert.deepEqual(response,<br>            {<br>                <span class=\"hljs-string\">\"id\"</span>: <span class=\"hljs-number\">1</span>,<br>                <span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"Leanne Graham\"</span>,<br>                <span class=\"hljs-string\">\"username\"</span>: <span class=\"hljs-string\">\"Bret\"</span>,<br>                <span class=\"hljs-string\">\"email\"</span>: <span class=\"hljs-string\">\"Sincere@april.biz\"</span>,<br>                <span class=\"hljs-string\">\"address\"</span>: {<br>                    <span class=\"hljs-string\">\"street\"</span>: <span class=\"hljs-string\">\"Kulas Light\"</span>,<br>                    <span class=\"hljs-string\">\"suite\"</span>: <span class=\"hljs-string\">\"Apt. 556\"</span>,<br>                    <span class=\"hljs-string\">\"city\"</span>: <span class=\"hljs-string\">\"Gwenborough\"</span>,<br>                    <span class=\"hljs-string\">\"zipcode\"</span>: <span class=\"hljs-string\">\"92998-3874\"</span>,<br>                    <span class=\"hljs-string\">\"geo\"</span>: {<br>                        <span class=\"hljs-string\">\"lat\"</span>: <span class=\"hljs-string\">\"-37.3159\"</span>,<br>                        <span class=\"hljs-string\">\"lng\"</span>: <span class=\"hljs-string\">\"81.1496\"</span><br>                    }<br>                },<br>                <span class=\"hljs-string\">\"phone\"</span>: <span class=\"hljs-string\">\"1-770-736-8031 x56442\"</span>,<br>                <span class=\"hljs-string\">\"website\"</span>: <span class=\"hljs-string\">\"hildegard.org\"</span>,<br>                <span class=\"hljs-string\">\"company\"</span>: {<br>                    <span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"Romaguera-Crona\"</span>,<br>                    <span class=\"hljs-string\">\"catchPhrase\"</span>: <span class=\"hljs-string\">\"Multi-layered client-server neural-net\"</span>,<br>                    <span class=\"hljs-string\">\"bs\"</span>: <span class=\"hljs-string\">\"harness real-time e-markets\"</span><br>                }<br>            })<br>    })<br>    .expect(<span class=\"hljs-number\">200</span>, done);",
      "isRoot": false,
      "uuid": "cd1503be-e0c5-45b5-bbb2-163ddea99dfa",
      "parentUUID": "03acd574-81c0-4eb2-aa5f-c87070e37cc7",
      "skipped": false
    },
    {
      "title": "should return a 200 OK status code for userId 1 using expect method",
      "fullTitle": "@get should return a 200 OK status code for userId 1 using expect method",
      "timedOut": false,
      "duration": 13,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "utils.httpGET(<span class=\"hljs-string\">'/users/1'</span>, {})<br>    .set(<span class=\"hljs-string\">'content-type'</span>, <span class=\"hljs-string\">'application/json; charset=utf-8'</span>)<br>    .expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">res</span>) </span>{<br>        <span class=\"hljs-keyword\">const</span> response = res.body;<br>        <span class=\"hljs-built_in\">console</span>.log(response);<br>        expect(response).to.have.property(<span class=\"hljs-string\">'id'</span>);<br>        expect(response).to.have.property(<span class=\"hljs-string\">'name'</span>);<br>        expect(response).to.have.property(<span class=\"hljs-string\">'username'</span>);<br>        expect(response).to.have.property(<span class=\"hljs-string\">'email'</span>);<br>        expect(response.id).to.equal(<span class=\"hljs-number\">1</span>);<br>        expect(response.email).to.equal(<span class=\"hljs-string\">'Sincere@april.biz'</span>);<br>        expect(response.address.city).to.equal(<span class=\"hljs-string\">'Gwenborough'</span>);<br><br>    })<br>    .expect(<span class=\"hljs-number\">200</span>, done);",
      "isRoot": false,
      "uuid": "64ac6413-aa91-4f7f-ae6d-cbeb6b38c154",
      "parentUUID": "03acd574-81c0-4eb2-aa5f-c87070e37cc7",
      "skipped": false
    },
    {
      "title": "should return a 200 OK status code for GET /users using expect method",
      "fullTitle": "@get should return a 200 OK status code for GET /users using expect method",
      "timedOut": false,
      "duration": 15,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "utils.httpGET(<span class=\"hljs-string\">'/users/'</span>, {})<br>    .set(<span class=\"hljs-string\">'content-type'</span>, <span class=\"hljs-string\">'application/json; charset=utf-8'</span>)<br>    .expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">res</span>) </span>{<br>        <span class=\"hljs-keyword\">const</span> response = res.body;<br>        <span class=\"hljs-built_in\">console</span>.log(response);<br>    })<br>    .expect(<span class=\"hljs-number\">200</span>, done);",
      "isRoot": false,
      "uuid": "c4f48cc8-ced3-4bba-95c1-33fe5a9f0436",
      "parentUUID": "03acd574-81c0-4eb2-aa5f-c87070e37cc7",
      "skipped": false
    }
  ],
  "allFailures": [],
  "copyrightYear": 2016
}