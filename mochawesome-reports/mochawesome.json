{
  "reportTitle": "apiAutomatedTest",
  "stats": {
    "suites": 7,
    "tests": 16,
    "passes": 16,
    "pending": 0,
    "failures": 0,
    "start": "2016-11-29T22:18:34.390Z",
    "end": "2016-11-29T22:18:34.694Z",
    "duration": 304,
    "testsRegistered": 16,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false,
    "passPercentClass": "success",
    "pendingPercentClass": "danger"
  },
  "suites": {
    "title": "",
    "suites": [
      {
        "title": "@get",
        "suites": [],
        "tests": [
          {
            "title": "should return a 200 OK status code for Album ID 1",
            "fullTitle": "@get should return a 200 OK status code for Album ID 1",
            "timedOut": false,
            "duration": 37,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "utils.httpGET(<span class=\"hljs-string\">'/albums/1'</span>, {})<br>    .set(<span class=\"hljs-string\">'content-type'</span>, <span class=\"hljs-string\">'application/json; charset=utf-8'</span>)<br>    .expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">res</span>) </span>{<br>        <span class=\"hljs-keyword\">const</span> response = res.body;<br>        <span class=\"hljs-comment\">//console.log(response);</span><br>        <span class=\"hljs-keyword\">return</span> assert.deepEqual(response,<br>            {<br>                <span class=\"hljs-string\">\"userId\"</span>: <span class=\"hljs-number\">1</span>,<br>                <span class=\"hljs-string\">\"id\"</span>: <span class=\"hljs-number\">1</span>,<br>                <span class=\"hljs-string\">\"title\"</span>: <span class=\"hljs-string\">\"quidem molestiae enim\"</span><br>            })<br>    })<br>    .expect(<span class=\"hljs-number\">200</span>, done);",
            "isRoot": false,
            "uuid": "0558b31b-f806-4d8d-94a2-b497e97fe358",
            "parentUUID": "1b4bc745-0fef-4c1b-8d5b-7fca9918947a",
            "skipped": false
          },
          {
            "title": "should return a 200 OK status code for Album ID 1 using expect method",
            "fullTitle": "@get should return a 200 OK status code for Album ID 1 using expect method",
            "timedOut": false,
            "duration": 22,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "utils.httpGET(<span class=\"hljs-string\">'/albums/1'</span>, {})<br>    .set(<span class=\"hljs-string\">'content-type'</span>, <span class=\"hljs-string\">'application/json; charset=utf-8'</span>)<br>    .expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">res</span>) </span>{<br>         <span class=\"hljs-keyword\">const</span> response = res.body;<br>        <span class=\"hljs-comment\">// console.log(response);</span><br>        expect(response).to.have.property(<span class=\"hljs-string\">'userId'</span>);<br>        expect(response).to.have.property(<span class=\"hljs-string\">'id'</span>);<br>        expect(response).to.have.property(<span class=\"hljs-string\">'title'</span>);<br>        expect(response.id).to.equal(<span class=\"hljs-number\">1</span>);<br>        expect(response.userId).to.equal(<span class=\"hljs-number\">1</span>);<br>        expect(response.title).to.equal(<span class=\"hljs-string\">'quidem molestiae enim'</span>);<br><br>    })<br>    .expect(<span class=\"hljs-number\">200</span>, done);",
            "isRoot": false,
            "uuid": "5a4615e8-d220-4140-ad7c-989854a5591b",
            "parentUUID": "1b4bc745-0fef-4c1b-8d5b-7fca9918947a",
            "skipped": false
          },
          {
            "title": "should return a 200 OK status code for GET All /albums using expect method",
            "fullTitle": "@get should return a 200 OK status code for GET All /albums using expect method",
            "timedOut": false,
            "duration": 22,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "utils.httpGET(<span class=\"hljs-string\">'/albums/'</span>, {})<br>    .set(<span class=\"hljs-string\">'content-type'</span>, <span class=\"hljs-string\">'application/json; charset=utf-8'</span>)<br>    <span class=\"hljs-comment\">// .expect(function (res) {</span><br>    <span class=\"hljs-comment\">//     const response = res.body;</span><br>    <span class=\"hljs-comment\">//     console.log(response);</span><br>    <span class=\"hljs-comment\">// })</span><br>    .expect(<span class=\"hljs-number\">200</span>, done);",
            "isRoot": false,
            "uuid": "89b13498-6096-4472-b1c8-9fcee43f4cef",
            "parentUUID": "1b4bc745-0fef-4c1b-8d5b-7fca9918947a",
            "skipped": false
          }
        ],
        "pending": [],
        "root": false,
        "_timeout": 3000,
        "file": "/test/albums/GET/getALBUM_200.js",
        "uuid": "1b4bc745-0fef-4c1b-8d5b-7fca9918947a",
        "fullFile": "/Users/garsenius/github/apiAutomatedTest/test/albums/GET/getALBUM_200.js",
        "passes": [
          {
            "title": "should return a 200 OK status code for Album ID 1",
            "fullTitle": "@get should return a 200 OK status code for Album ID 1",
            "timedOut": false,
            "duration": 37,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "utils.httpGET(<span class=\"hljs-string\">'/albums/1'</span>, {})<br>    .set(<span class=\"hljs-string\">'content-type'</span>, <span class=\"hljs-string\">'application/json; charset=utf-8'</span>)<br>    .expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">res</span>) </span>{<br>        <span class=\"hljs-keyword\">const</span> response = res.body;<br>        <span class=\"hljs-comment\">//console.log(response);</span><br>        <span class=\"hljs-keyword\">return</span> assert.deepEqual(response,<br>            {<br>                <span class=\"hljs-string\">\"userId\"</span>: <span class=\"hljs-number\">1</span>,<br>                <span class=\"hljs-string\">\"id\"</span>: <span class=\"hljs-number\">1</span>,<br>                <span class=\"hljs-string\">\"title\"</span>: <span class=\"hljs-string\">\"quidem molestiae enim\"</span><br>            })<br>    })<br>    .expect(<span class=\"hljs-number\">200</span>, done);",
            "isRoot": false,
            "uuid": "0558b31b-f806-4d8d-94a2-b497e97fe358",
            "parentUUID": "1b4bc745-0fef-4c1b-8d5b-7fca9918947a",
            "skipped": false
          },
          {
            "title": "should return a 200 OK status code for Album ID 1 using expect method",
            "fullTitle": "@get should return a 200 OK status code for Album ID 1 using expect method",
            "timedOut": false,
            "duration": 22,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "utils.httpGET(<span class=\"hljs-string\">'/albums/1'</span>, {})<br>    .set(<span class=\"hljs-string\">'content-type'</span>, <span class=\"hljs-string\">'application/json; charset=utf-8'</span>)<br>    .expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">res</span>) </span>{<br>         <span class=\"hljs-keyword\">const</span> response = res.body;<br>        <span class=\"hljs-comment\">// console.log(response);</span><br>        expect(response).to.have.property(<span class=\"hljs-string\">'userId'</span>);<br>        expect(response).to.have.property(<span class=\"hljs-string\">'id'</span>);<br>        expect(response).to.have.property(<span class=\"hljs-string\">'title'</span>);<br>        expect(response.id).to.equal(<span class=\"hljs-number\">1</span>);<br>        expect(response.userId).to.equal(<span class=\"hljs-number\">1</span>);<br>        expect(response.title).to.equal(<span class=\"hljs-string\">'quidem molestiae enim'</span>);<br><br>    })<br>    .expect(<span class=\"hljs-number\">200</span>, done);",
            "isRoot": false,
            "uuid": "5a4615e8-d220-4140-ad7c-989854a5591b",
            "parentUUID": "1b4bc745-0fef-4c1b-8d5b-7fca9918947a",
            "skipped": false
          },
          {
            "title": "should return a 200 OK status code for GET All /albums using expect method",
            "fullTitle": "@get should return a 200 OK status code for GET All /albums using expect method",
            "timedOut": false,
            "duration": 22,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "utils.httpGET(<span class=\"hljs-string\">'/albums/'</span>, {})<br>    .set(<span class=\"hljs-string\">'content-type'</span>, <span class=\"hljs-string\">'application/json; charset=utf-8'</span>)<br>    <span class=\"hljs-comment\">// .expect(function (res) {</span><br>    <span class=\"hljs-comment\">//     const response = res.body;</span><br>    <span class=\"hljs-comment\">//     console.log(response);</span><br>    <span class=\"hljs-comment\">// })</span><br>    .expect(<span class=\"hljs-number\">200</span>, done);",
            "isRoot": false,
            "uuid": "89b13498-6096-4472-b1c8-9fcee43f4cef",
            "parentUUID": "1b4bc745-0fef-4c1b-8d5b-7fca9918947a",
            "skipped": false
          }
        ],
        "failures": [],
        "skipped": [],
        "hasTests": true,
        "hasSuites": false,
        "totalTests": 3,
        "totalPasses": 3,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": true,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 81
      },
      {
        "title": "@get",
        "suites": [],
        "tests": [
          {
            "title": "should return a 200 OK status code for Comment ID 1",
            "fullTitle": "@get should return a 200 OK status code for Comment ID 1",
            "timedOut": false,
            "duration": 10,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "utils.httpGET(<span class=\"hljs-string\">'/comments/1'</span>, {})<br>    .set(<span class=\"hljs-string\">'content-type'</span>, <span class=\"hljs-string\">'application/json; charset=utf-8'</span>)<br>    .expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">res</span>) </span>{<br>        <span class=\"hljs-keyword\">const</span> response = res.body;<br>        <span class=\"hljs-comment\">//console.log(response);</span><br>        <span class=\"hljs-keyword\">return</span> assert.deepEqual(response,<br>            {<br>                <span class=\"hljs-string\">\"postId\"</span>: <span class=\"hljs-number\">1</span>,<br>                <span class=\"hljs-string\">\"id\"</span>: <span class=\"hljs-number\">1</span>,<br>                <span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"id labore ex et quam laborum\"</span>,<br>                <span class=\"hljs-string\">\"email\"</span>: <span class=\"hljs-string\">\"Eliseo@gardner.biz\"</span>,<br>                <span class=\"hljs-string\">\"body\"</span>: <span class=\"hljs-string\">\"laudantium enim quasi est quidem magnam voluptate ipsam eos\\ntempora quo necessitatibus\\ndolor quam autem quasi\\nreiciendis et nam sapiente accusantium\"</span><br>            })<br>    })<br>    .expect(<span class=\"hljs-number\">200</span>, done);",
            "isRoot": false,
            "uuid": "f189450d-25bb-4d10-b44b-44d3d660ce22",
            "parentUUID": "bee5350a-4886-4fb6-97e3-2219887b1ded",
            "skipped": false
          },
          {
            "title": "should return a 200 OK status code for comment ID 1 using expect method",
            "fullTitle": "@get should return a 200 OK status code for comment ID 1 using expect method",
            "timedOut": false,
            "duration": 9,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "utils.httpGET(<span class=\"hljs-string\">'/comments/1'</span>, {})<br>    .set(<span class=\"hljs-string\">'content-type'</span>, <span class=\"hljs-string\">'application/json; charset=utf-8'</span>)<br>    .expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">res</span>) </span>{<br>        <span class=\"hljs-keyword\">const</span> response = res.body;<br>        <span class=\"hljs-comment\">//console.log(response);</span><br>        expect(response).to.have.property(<span class=\"hljs-string\">'postId'</span>);<br>        expect(response).to.have.property(<span class=\"hljs-string\">'id'</span>);<br>        expect(response).to.have.property(<span class=\"hljs-string\">'name'</span>);<br>        expect(response).to.have.property(<span class=\"hljs-string\">'email'</span>);<br>        expect(response).to.have.property(<span class=\"hljs-string\">'body'</span>);<br>        expect(response.id).to.equal(<span class=\"hljs-number\">1</span>);<br>        expect(response.email).to.equal(<span class=\"hljs-string\">'Eliseo@gardner.biz'</span>);<br>        expect(response.name).to.equal(<span class=\"hljs-string\">'id labore ex et quam laborum'</span>);<br><br>    })<br>    .expect(<span class=\"hljs-number\">200</span>, done);",
            "isRoot": false,
            "uuid": "e63c6fd9-4061-4885-a415-39d6281169ca",
            "parentUUID": "bee5350a-4886-4fb6-97e3-2219887b1ded",
            "skipped": false
          },
          {
            "title": "should return a 200 OK status code for GET All /comments using expect method",
            "fullTitle": "@get should return a 200 OK status code for GET All /comments using expect method",
            "timedOut": false,
            "duration": 28,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "utils.httpGET(<span class=\"hljs-string\">'/comments/'</span>, {})<br>    .set(<span class=\"hljs-string\">'content-type'</span>, <span class=\"hljs-string\">'application/json; charset=utf-8'</span>)<br>    <span class=\"hljs-comment\">// .expect(function (res) {</span><br>    <span class=\"hljs-comment\">//     const response = res.body;</span><br>    <span class=\"hljs-comment\">//     console.log(response);</span><br>    <span class=\"hljs-comment\">// })</span><br>    .expect(<span class=\"hljs-number\">200</span>, done);",
            "isRoot": false,
            "uuid": "8249d79b-1d66-45a0-a83c-9057a31a7722",
            "parentUUID": "bee5350a-4886-4fb6-97e3-2219887b1ded",
            "skipped": false
          }
        ],
        "pending": [],
        "root": false,
        "_timeout": 3000,
        "file": "/test/comments/GET/getCOMMENT_200.js",
        "uuid": "bee5350a-4886-4fb6-97e3-2219887b1ded",
        "fullFile": "/Users/garsenius/github/apiAutomatedTest/test/comments/GET/getCOMMENT_200.js",
        "passes": [
          {
            "title": "should return a 200 OK status code for Comment ID 1",
            "fullTitle": "@get should return a 200 OK status code for Comment ID 1",
            "timedOut": false,
            "duration": 10,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "utils.httpGET(<span class=\"hljs-string\">'/comments/1'</span>, {})<br>    .set(<span class=\"hljs-string\">'content-type'</span>, <span class=\"hljs-string\">'application/json; charset=utf-8'</span>)<br>    .expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">res</span>) </span>{<br>        <span class=\"hljs-keyword\">const</span> response = res.body;<br>        <span class=\"hljs-comment\">//console.log(response);</span><br>        <span class=\"hljs-keyword\">return</span> assert.deepEqual(response,<br>            {<br>                <span class=\"hljs-string\">\"postId\"</span>: <span class=\"hljs-number\">1</span>,<br>                <span class=\"hljs-string\">\"id\"</span>: <span class=\"hljs-number\">1</span>,<br>                <span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"id labore ex et quam laborum\"</span>,<br>                <span class=\"hljs-string\">\"email\"</span>: <span class=\"hljs-string\">\"Eliseo@gardner.biz\"</span>,<br>                <span class=\"hljs-string\">\"body\"</span>: <span class=\"hljs-string\">\"laudantium enim quasi est quidem magnam voluptate ipsam eos\\ntempora quo necessitatibus\\ndolor quam autem quasi\\nreiciendis et nam sapiente accusantium\"</span><br>            })<br>    })<br>    .expect(<span class=\"hljs-number\">200</span>, done);",
            "isRoot": false,
            "uuid": "f189450d-25bb-4d10-b44b-44d3d660ce22",
            "parentUUID": "bee5350a-4886-4fb6-97e3-2219887b1ded",
            "skipped": false
          },
          {
            "title": "should return a 200 OK status code for comment ID 1 using expect method",
            "fullTitle": "@get should return a 200 OK status code for comment ID 1 using expect method",
            "timedOut": false,
            "duration": 9,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "utils.httpGET(<span class=\"hljs-string\">'/comments/1'</span>, {})<br>    .set(<span class=\"hljs-string\">'content-type'</span>, <span class=\"hljs-string\">'application/json; charset=utf-8'</span>)<br>    .expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">res</span>) </span>{<br>        <span class=\"hljs-keyword\">const</span> response = res.body;<br>        <span class=\"hljs-comment\">//console.log(response);</span><br>        expect(response).to.have.property(<span class=\"hljs-string\">'postId'</span>);<br>        expect(response).to.have.property(<span class=\"hljs-string\">'id'</span>);<br>        expect(response).to.have.property(<span class=\"hljs-string\">'name'</span>);<br>        expect(response).to.have.property(<span class=\"hljs-string\">'email'</span>);<br>        expect(response).to.have.property(<span class=\"hljs-string\">'body'</span>);<br>        expect(response.id).to.equal(<span class=\"hljs-number\">1</span>);<br>        expect(response.email).to.equal(<span class=\"hljs-string\">'Eliseo@gardner.biz'</span>);<br>        expect(response.name).to.equal(<span class=\"hljs-string\">'id labore ex et quam laborum'</span>);<br><br>    })<br>    .expect(<span class=\"hljs-number\">200</span>, done);",
            "isRoot": false,
            "uuid": "e63c6fd9-4061-4885-a415-39d6281169ca",
            "parentUUID": "bee5350a-4886-4fb6-97e3-2219887b1ded",
            "skipped": false
          },
          {
            "title": "should return a 200 OK status code for GET All /comments using expect method",
            "fullTitle": "@get should return a 200 OK status code for GET All /comments using expect method",
            "timedOut": false,
            "duration": 28,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "utils.httpGET(<span class=\"hljs-string\">'/comments/'</span>, {})<br>    .set(<span class=\"hljs-string\">'content-type'</span>, <span class=\"hljs-string\">'application/json; charset=utf-8'</span>)<br>    <span class=\"hljs-comment\">// .expect(function (res) {</span><br>    <span class=\"hljs-comment\">//     const response = res.body;</span><br>    <span class=\"hljs-comment\">//     console.log(response);</span><br>    <span class=\"hljs-comment\">// })</span><br>    .expect(<span class=\"hljs-number\">200</span>, done);",
            "isRoot": false,
            "uuid": "8249d79b-1d66-45a0-a83c-9057a31a7722",
            "parentUUID": "bee5350a-4886-4fb6-97e3-2219887b1ded",
            "skipped": false
          }
        ],
        "failures": [],
        "skipped": [],
        "hasTests": true,
        "hasSuites": false,
        "totalTests": 3,
        "totalPasses": 3,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": true,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 47
      },
      {
        "title": "@delete",
        "suites": [],
        "tests": [
          {
            "title": "should return a 200 code after deleting fake postId 100",
            "fullTitle": "@delete should return a 200 code after deleting fake postId 100",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "utils.httpDELETE(<span class=\"hljs-string\">'/posts/101'</span>, {})<br>   .send(<br>       {<br>           id: <span class=\"hljs-number\">101</span>,<br>           title: <span class=\"hljs-string\">'foo'</span>,<br>           body: <span class=\"hljs-string\">'bar'</span>,<br>           userId: <span class=\"hljs-number\">1</span><br>       }<br>   )<br>   .expect(<span class=\"hljs-string\">'content-type'</span>, <span class=\"hljs-string\">'application/json; charset=utf-8'</span>)<br>   .expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">res</span>) </span>{<br>       <span class=\"hljs-keyword\">const</span> response = res.body;<br>       <span class=\"hljs-comment\">//console.log(response)</span><br>       <span class=\"hljs-keyword\">return</span> assert.deepEqual(response,<br>           {} <span class=\"hljs-comment\">//return empty response</span><br>       );<br>   })<br>    .expect(<span class=\"hljs-number\">200</span>);",
            "isRoot": false,
            "uuid": "5a299f26-590c-4a71-a715-f6075789f502",
            "parentUUID": "58524ee4-4bd3-41f5-80c2-0dc21f21087a",
            "skipped": false
          }
        ],
        "pending": [],
        "root": false,
        "_timeout": 3000,
        "file": "/test/posts/DELETE/deletePOST_200.js",
        "uuid": "58524ee4-4bd3-41f5-80c2-0dc21f21087a",
        "fullFile": "/Users/garsenius/github/apiAutomatedTest/test/posts/DELETE/deletePOST_200.js",
        "passes": [
          {
            "title": "should return a 200 code after deleting fake postId 100",
            "fullTitle": "@delete should return a 200 code after deleting fake postId 100",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "utils.httpDELETE(<span class=\"hljs-string\">'/posts/101'</span>, {})<br>   .send(<br>       {<br>           id: <span class=\"hljs-number\">101</span>,<br>           title: <span class=\"hljs-string\">'foo'</span>,<br>           body: <span class=\"hljs-string\">'bar'</span>,<br>           userId: <span class=\"hljs-number\">1</span><br>       }<br>   )<br>   .expect(<span class=\"hljs-string\">'content-type'</span>, <span class=\"hljs-string\">'application/json; charset=utf-8'</span>)<br>   .expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">res</span>) </span>{<br>       <span class=\"hljs-keyword\">const</span> response = res.body;<br>       <span class=\"hljs-comment\">//console.log(response)</span><br>       <span class=\"hljs-keyword\">return</span> assert.deepEqual(response,<br>           {} <span class=\"hljs-comment\">//return empty response</span><br>       );<br>   })<br>    .expect(<span class=\"hljs-number\">200</span>);",
            "isRoot": false,
            "uuid": "5a299f26-590c-4a71-a715-f6075789f502",
            "parentUUID": "58524ee4-4bd3-41f5-80c2-0dc21f21087a",
            "skipped": false
          }
        ],
        "failures": [],
        "skipped": [],
        "hasTests": true,
        "hasSuites": false,
        "totalTests": 1,
        "totalPasses": 1,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": true,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 1
      },
      {
        "title": "@get",
        "suites": [],
        "tests": [
          {
            "title": "should return a 200 OK status code for PostID 1",
            "fullTitle": "@get should return a 200 OK status code for PostID 1",
            "timedOut": false,
            "duration": 7,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "utils.httpGET(<span class=\"hljs-string\">'/posts/1'</span>, {})<br>    .set(<span class=\"hljs-string\">'content-type'</span>, <span class=\"hljs-string\">'application/json; charset=utf-8'</span>)<br>    .expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">res</span>) </span>{<br>        <span class=\"hljs-keyword\">const</span> response = res.body;<br>        <span class=\"hljs-comment\">//console.log(response);</span><br>        <span class=\"hljs-keyword\">return</span> assert.deepEqual(response,<br>            {<br>                <span class=\"hljs-string\">\"id\"</span>: <span class=\"hljs-string\">\"1\"</span>,<br>                <span class=\"hljs-string\">\"title\"</span>: <span class=\"hljs-string\">\"foo\"</span>,<br>                <span class=\"hljs-string\">\"body\"</span>: <span class=\"hljs-string\">\"bar\"</span>,<br>                <span class=\"hljs-string\">\"userId\"</span>: <span class=\"hljs-number\">1</span><br>            })<br>    })<br>    .expect(<span class=\"hljs-number\">200</span>, done);",
            "isRoot": false,
            "uuid": "10425d39-0bda-405b-9a24-73e74f613cbf",
            "parentUUID": "a983b67c-5f46-4125-a13b-3b8cdd2a14b2",
            "skipped": false
          },
          {
            "title": "should return a 200 OK status code for PostID 1 using expect method",
            "fullTitle": "@get should return a 200 OK status code for PostID 1 using expect method",
            "timedOut": false,
            "duration": 7,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "utils.httpGET(<span class=\"hljs-string\">'/posts/1'</span>, {})<br>    .set(<span class=\"hljs-string\">'content-type'</span>, <span class=\"hljs-string\">'application/json; charset=utf-8'</span>)<br>    .expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">res</span>) </span>{<br>        <span class=\"hljs-keyword\">const</span> response = res.body;<br>        <span class=\"hljs-comment\">//console.log(response);</span><br>        expect(response).to.have.property(<span class=\"hljs-string\">'id'</span>);<br>        expect(response).to.have.property(<span class=\"hljs-string\">'title'</span>);<br>        expect(response).to.have.property(<span class=\"hljs-string\">'body'</span>);<br>        expect(response).to.have.property(<span class=\"hljs-string\">'userId'</span>);<br>        expect(response.id).to.equal(<span class=\"hljs-string\">'1'</span>);<br>    })<br>    .expect(<span class=\"hljs-number\">200</span>, done);",
            "isRoot": false,
            "uuid": "76647e21-06d5-4336-aaba-a49b3cfe1456",
            "parentUUID": "a983b67c-5f46-4125-a13b-3b8cdd2a14b2",
            "skipped": false
          },
          {
            "title": "should return a 200 OK status code for PostID 1 using expect method",
            "fullTitle": "@get should return a 200 OK status code for PostID 1 using expect method",
            "timedOut": false,
            "duration": 24,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "utils.httpGET(<span class=\"hljs-string\">'/posts/'</span>, {})<br>    .set(<span class=\"hljs-string\">'content-type'</span>, <span class=\"hljs-string\">'application/json; charset=utf-8'</span>)<br>    <span class=\"hljs-comment\">// .expect(function (res) {</span><br>    <span class=\"hljs-comment\">//     const response = res.body;</span><br>    <span class=\"hljs-comment\">//     console.log(response);</span><br>    <span class=\"hljs-comment\">// })</span><br>    .expect(<span class=\"hljs-number\">200</span>, done);",
            "isRoot": false,
            "uuid": "84b97654-5083-4bd6-9bd0-8d5c86a05ce8",
            "parentUUID": "a983b67c-5f46-4125-a13b-3b8cdd2a14b2",
            "skipped": false
          }
        ],
        "pending": [],
        "root": false,
        "_timeout": 3000,
        "file": "/test/posts/GET/getPOST_200.js",
        "uuid": "a983b67c-5f46-4125-a13b-3b8cdd2a14b2",
        "fullFile": "/Users/garsenius/github/apiAutomatedTest/test/posts/GET/getPOST_200.js",
        "passes": [
          {
            "title": "should return a 200 OK status code for PostID 1",
            "fullTitle": "@get should return a 200 OK status code for PostID 1",
            "timedOut": false,
            "duration": 7,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "utils.httpGET(<span class=\"hljs-string\">'/posts/1'</span>, {})<br>    .set(<span class=\"hljs-string\">'content-type'</span>, <span class=\"hljs-string\">'application/json; charset=utf-8'</span>)<br>    .expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">res</span>) </span>{<br>        <span class=\"hljs-keyword\">const</span> response = res.body;<br>        <span class=\"hljs-comment\">//console.log(response);</span><br>        <span class=\"hljs-keyword\">return</span> assert.deepEqual(response,<br>            {<br>                <span class=\"hljs-string\">\"id\"</span>: <span class=\"hljs-string\">\"1\"</span>,<br>                <span class=\"hljs-string\">\"title\"</span>: <span class=\"hljs-string\">\"foo\"</span>,<br>                <span class=\"hljs-string\">\"body\"</span>: <span class=\"hljs-string\">\"bar\"</span>,<br>                <span class=\"hljs-string\">\"userId\"</span>: <span class=\"hljs-number\">1</span><br>            })<br>    })<br>    .expect(<span class=\"hljs-number\">200</span>, done);",
            "isRoot": false,
            "uuid": "10425d39-0bda-405b-9a24-73e74f613cbf",
            "parentUUID": "a983b67c-5f46-4125-a13b-3b8cdd2a14b2",
            "skipped": false
          },
          {
            "title": "should return a 200 OK status code for PostID 1 using expect method",
            "fullTitle": "@get should return a 200 OK status code for PostID 1 using expect method",
            "timedOut": false,
            "duration": 7,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "utils.httpGET(<span class=\"hljs-string\">'/posts/1'</span>, {})<br>    .set(<span class=\"hljs-string\">'content-type'</span>, <span class=\"hljs-string\">'application/json; charset=utf-8'</span>)<br>    .expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">res</span>) </span>{<br>        <span class=\"hljs-keyword\">const</span> response = res.body;<br>        <span class=\"hljs-comment\">//console.log(response);</span><br>        expect(response).to.have.property(<span class=\"hljs-string\">'id'</span>);<br>        expect(response).to.have.property(<span class=\"hljs-string\">'title'</span>);<br>        expect(response).to.have.property(<span class=\"hljs-string\">'body'</span>);<br>        expect(response).to.have.property(<span class=\"hljs-string\">'userId'</span>);<br>        expect(response.id).to.equal(<span class=\"hljs-string\">'1'</span>);<br>    })<br>    .expect(<span class=\"hljs-number\">200</span>, done);",
            "isRoot": false,
            "uuid": "76647e21-06d5-4336-aaba-a49b3cfe1456",
            "parentUUID": "a983b67c-5f46-4125-a13b-3b8cdd2a14b2",
            "skipped": false
          },
          {
            "title": "should return a 200 OK status code for PostID 1 using expect method",
            "fullTitle": "@get should return a 200 OK status code for PostID 1 using expect method",
            "timedOut": false,
            "duration": 24,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "utils.httpGET(<span class=\"hljs-string\">'/posts/'</span>, {})<br>    .set(<span class=\"hljs-string\">'content-type'</span>, <span class=\"hljs-string\">'application/json; charset=utf-8'</span>)<br>    <span class=\"hljs-comment\">// .expect(function (res) {</span><br>    <span class=\"hljs-comment\">//     const response = res.body;</span><br>    <span class=\"hljs-comment\">//     console.log(response);</span><br>    <span class=\"hljs-comment\">// })</span><br>    .expect(<span class=\"hljs-number\">200</span>, done);",
            "isRoot": false,
            "uuid": "84b97654-5083-4bd6-9bd0-8d5c86a05ce8",
            "parentUUID": "a983b67c-5f46-4125-a13b-3b8cdd2a14b2",
            "skipped": false
          }
        ],
        "failures": [],
        "skipped": [],
        "hasTests": true,
        "hasSuites": false,
        "totalTests": 3,
        "totalPasses": 3,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": true,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 38
      },
      {
        "title": "@post",
        "suites": [],
        "tests": [
          {
            "title": "should return a 201 code after posting",
            "fullTitle": "@post should return a 201 code after posting",
            "timedOut": false,
            "duration": 64,
            "state": "passed",
            "speed": "medium",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "utils.httpPOST(<span class=\"hljs-string\">'/posts'</span>, {})<br>    .send({title: <span class=\"hljs-string\">'foo'</span>, body: <span class=\"hljs-string\">'bar'</span>, userId: <span class=\"hljs-number\">1</span>})<br>    .expect(<span class=\"hljs-string\">'content-type'</span>, <span class=\"hljs-string\">'application/json; charset=utf-8'</span>)<br>    .expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">res</span>) </span>{<br>        <span class=\"hljs-keyword\">const</span> response = res.body;<br>        <span class=\"hljs-comment\">//console.log(response);</span><br>        expect(response.title).to.equal(<span class=\"hljs-string\">'foo'</span>);<br>        expect(response.body).to.equal(<span class=\"hljs-string\">'bar'</span>);<br>        expect(response.userId).to.equal(<span class=\"hljs-number\">1</span>);<br>    })<br>    .expect(<span class=\"hljs-number\">201</span>, done)",
            "isRoot": false,
            "uuid": "2ee53421-810f-44c3-8887-717f40f10458",
            "parentUUID": "9c71a666-8533-4caf-b590-c41b56b38b21",
            "skipped": false
          }
        ],
        "pending": [],
        "root": false,
        "_timeout": 3000,
        "file": "/test/posts/POST/postPOST_201.js",
        "uuid": "9c71a666-8533-4caf-b590-c41b56b38b21",
        "fullFile": "/Users/garsenius/github/apiAutomatedTest/test/posts/POST/postPOST_201.js",
        "passes": [
          {
            "title": "should return a 201 code after posting",
            "fullTitle": "@post should return a 201 code after posting",
            "timedOut": false,
            "duration": 64,
            "state": "passed",
            "speed": "medium",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "utils.httpPOST(<span class=\"hljs-string\">'/posts'</span>, {})<br>    .send({title: <span class=\"hljs-string\">'foo'</span>, body: <span class=\"hljs-string\">'bar'</span>, userId: <span class=\"hljs-number\">1</span>})<br>    .expect(<span class=\"hljs-string\">'content-type'</span>, <span class=\"hljs-string\">'application/json; charset=utf-8'</span>)<br>    .expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">res</span>) </span>{<br>        <span class=\"hljs-keyword\">const</span> response = res.body;<br>        <span class=\"hljs-comment\">//console.log(response);</span><br>        expect(response.title).to.equal(<span class=\"hljs-string\">'foo'</span>);<br>        expect(response.body).to.equal(<span class=\"hljs-string\">'bar'</span>);<br>        expect(response.userId).to.equal(<span class=\"hljs-number\">1</span>);<br>    })<br>    .expect(<span class=\"hljs-number\">201</span>, done)",
            "isRoot": false,
            "uuid": "2ee53421-810f-44c3-8887-717f40f10458",
            "parentUUID": "9c71a666-8533-4caf-b590-c41b56b38b21",
            "skipped": false
          }
        ],
        "failures": [],
        "skipped": [],
        "hasTests": true,
        "hasSuites": false,
        "totalTests": 1,
        "totalPasses": 1,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": true,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 64
      },
      {
        "title": "@put",
        "suites": [],
        "tests": [
          {
            "title": "should return a 200 code after updating postId 1",
            "fullTitle": "@put should return a 200 code after updating postId 1",
            "timedOut": false,
            "duration": 20,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "utils.httpPUT(<span class=\"hljs-string\">'/posts/20'</span>, {})<br>    .send(<br>        {<br>            id: <span class=\"hljs-number\">20</span>,<br>            title: <span class=\"hljs-string\">'candy crush'</span>,<br>            body: <span class=\"hljs-string\">'sodalicious juicy'</span>,<br>            userId: <span class=\"hljs-number\">1</span><br>        }<br>    )<br>    .expect(<span class=\"hljs-string\">'content-type'</span>, <span class=\"hljs-string\">'application/json; charset=utf-8'</span>)<br>    .expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">res</span>) </span>{<br>        <span class=\"hljs-keyword\">const</span> response = res.body;<br>        <span class=\"hljs-comment\">//console.log(response);</span><br>        expect(response.id).to.equal(<span class=\"hljs-string\">'20'</span>);<br>        expect(response.title).to.equal(<span class=\"hljs-string\">'candy crush'</span>);<br>        expect(response.body).to.equal(<span class=\"hljs-string\">'sodalicious juicy'</span>);<br>        expect(response.userId).to.equal(<span class=\"hljs-number\">1</span>);<br>    })<br>    .expect(<span class=\"hljs-number\">200</span>, done);",
            "isRoot": false,
            "uuid": "b090cec4-e916-486d-b3fd-ac8cd53d700b",
            "parentUUID": "c5302f48-5d14-4a92-8a5d-985cf5f2287e",
            "skipped": false
          },
          {
            "title": "should return a 200 code after updating postId 1",
            "fullTitle": "@put should return a 200 code after updating postId 1",
            "timedOut": false,
            "duration": 10,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "utils.httpPUT(<span class=\"hljs-string\">'/posts/1'</span>, {})<br>    .send(<br>        {<br>            id: <span class=\"hljs-number\">1</span>,<br>            title: <span class=\"hljs-string\">'foo'</span>,<br>            body: <span class=\"hljs-string\">'bar'</span>,<br>            userId: <span class=\"hljs-number\">1</span><br>        }<br>    )<br>    .expect(<span class=\"hljs-string\">'content-type'</span>, <span class=\"hljs-string\">'application/json; charset=utf-8'</span>)<br>    .expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">res</span>) </span>{<br>        <span class=\"hljs-keyword\">const</span> response = res.body;<br>        <span class=\"hljs-comment\">//console.log(response);</span><br>        expect(response.id).to.equal(<span class=\"hljs-string\">'1'</span>);<br>        expect(response.title).to.equal(<span class=\"hljs-string\">'foo'</span>);<br>        expect(response.body).to.equal(<span class=\"hljs-string\">'bar'</span>);<br>        expect(response.userId).to.equal(<span class=\"hljs-number\">1</span>);<br>    })<br>    .expect(<span class=\"hljs-number\">200</span>, done);",
            "isRoot": false,
            "uuid": "bb39fd95-a886-4fb7-a0d5-add282942b72",
            "parentUUID": "c5302f48-5d14-4a92-8a5d-985cf5f2287e",
            "skipped": false
          }
        ],
        "pending": [],
        "root": false,
        "_timeout": 3000,
        "file": "/test/posts/PUT/updatePOST_200.js",
        "uuid": "c5302f48-5d14-4a92-8a5d-985cf5f2287e",
        "fullFile": "/Users/garsenius/github/apiAutomatedTest/test/posts/PUT/updatePOST_200.js",
        "passes": [
          {
            "title": "should return a 200 code after updating postId 1",
            "fullTitle": "@put should return a 200 code after updating postId 1",
            "timedOut": false,
            "duration": 20,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "utils.httpPUT(<span class=\"hljs-string\">'/posts/20'</span>, {})<br>    .send(<br>        {<br>            id: <span class=\"hljs-number\">20</span>,<br>            title: <span class=\"hljs-string\">'candy crush'</span>,<br>            body: <span class=\"hljs-string\">'sodalicious juicy'</span>,<br>            userId: <span class=\"hljs-number\">1</span><br>        }<br>    )<br>    .expect(<span class=\"hljs-string\">'content-type'</span>, <span class=\"hljs-string\">'application/json; charset=utf-8'</span>)<br>    .expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">res</span>) </span>{<br>        <span class=\"hljs-keyword\">const</span> response = res.body;<br>        <span class=\"hljs-comment\">//console.log(response);</span><br>        expect(response.id).to.equal(<span class=\"hljs-string\">'20'</span>);<br>        expect(response.title).to.equal(<span class=\"hljs-string\">'candy crush'</span>);<br>        expect(response.body).to.equal(<span class=\"hljs-string\">'sodalicious juicy'</span>);<br>        expect(response.userId).to.equal(<span class=\"hljs-number\">1</span>);<br>    })<br>    .expect(<span class=\"hljs-number\">200</span>, done);",
            "isRoot": false,
            "uuid": "b090cec4-e916-486d-b3fd-ac8cd53d700b",
            "parentUUID": "c5302f48-5d14-4a92-8a5d-985cf5f2287e",
            "skipped": false
          },
          {
            "title": "should return a 200 code after updating postId 1",
            "fullTitle": "@put should return a 200 code after updating postId 1",
            "timedOut": false,
            "duration": 10,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "utils.httpPUT(<span class=\"hljs-string\">'/posts/1'</span>, {})<br>    .send(<br>        {<br>            id: <span class=\"hljs-number\">1</span>,<br>            title: <span class=\"hljs-string\">'foo'</span>,<br>            body: <span class=\"hljs-string\">'bar'</span>,<br>            userId: <span class=\"hljs-number\">1</span><br>        }<br>    )<br>    .expect(<span class=\"hljs-string\">'content-type'</span>, <span class=\"hljs-string\">'application/json; charset=utf-8'</span>)<br>    .expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">res</span>) </span>{<br>        <span class=\"hljs-keyword\">const</span> response = res.body;<br>        <span class=\"hljs-comment\">//console.log(response);</span><br>        expect(response.id).to.equal(<span class=\"hljs-string\">'1'</span>);<br>        expect(response.title).to.equal(<span class=\"hljs-string\">'foo'</span>);<br>        expect(response.body).to.equal(<span class=\"hljs-string\">'bar'</span>);<br>        expect(response.userId).to.equal(<span class=\"hljs-number\">1</span>);<br>    })<br>    .expect(<span class=\"hljs-number\">200</span>, done);",
            "isRoot": false,
            "uuid": "bb39fd95-a886-4fb7-a0d5-add282942b72",
            "parentUUID": "c5302f48-5d14-4a92-8a5d-985cf5f2287e",
            "skipped": false
          }
        ],
        "failures": [],
        "skipped": [],
        "hasTests": true,
        "hasSuites": false,
        "totalTests": 2,
        "totalPasses": 2,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": true,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 30
      },
      {
        "title": "@get",
        "suites": [],
        "tests": [
          {
            "title": "should return a 200 OK status code for User ID 1",
            "fullTitle": "@get should return a 200 OK status code for User ID 1",
            "timedOut": false,
            "duration": 10,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "utils.httpGET(<span class=\"hljs-string\">'/users/1'</span>, {})<br>    .set(<span class=\"hljs-string\">'content-type'</span>, <span class=\"hljs-string\">'application/json; charset=utf-8'</span>)<br>    .expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">res</span>) </span>{<br>        <span class=\"hljs-keyword\">const</span> response = res.body;<br>        <span class=\"hljs-comment\">//console.log(response);</span><br>        <span class=\"hljs-keyword\">return</span> assert.deepEqual(response,<br>            {<br>                <span class=\"hljs-string\">\"id\"</span>: <span class=\"hljs-number\">1</span>,<br>                <span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"Leanne Graham\"</span>,<br>                <span class=\"hljs-string\">\"username\"</span>: <span class=\"hljs-string\">\"Bret\"</span>,<br>                <span class=\"hljs-string\">\"email\"</span>: <span class=\"hljs-string\">\"Sincere@april.biz\"</span>,<br>                <span class=\"hljs-string\">\"address\"</span>: {<br>                    <span class=\"hljs-string\">\"street\"</span>: <span class=\"hljs-string\">\"Kulas Light\"</span>,<br>                    <span class=\"hljs-string\">\"suite\"</span>: <span class=\"hljs-string\">\"Apt. 556\"</span>,<br>                    <span class=\"hljs-string\">\"city\"</span>: <span class=\"hljs-string\">\"Gwenborough\"</span>,<br>                    <span class=\"hljs-string\">\"zipcode\"</span>: <span class=\"hljs-string\">\"92998-3874\"</span>,<br>                    <span class=\"hljs-string\">\"geo\"</span>: {<br>                        <span class=\"hljs-string\">\"lat\"</span>: <span class=\"hljs-string\">\"-37.3159\"</span>,<br>                        <span class=\"hljs-string\">\"lng\"</span>: <span class=\"hljs-string\">\"81.1496\"</span><br>                    }<br>                },<br>                <span class=\"hljs-string\">\"phone\"</span>: <span class=\"hljs-string\">\"1-770-736-8031 x56442\"</span>,<br>                <span class=\"hljs-string\">\"website\"</span>: <span class=\"hljs-string\">\"hildegard.org\"</span>,<br>                <span class=\"hljs-string\">\"company\"</span>: {<br>                    <span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"Romaguera-Crona\"</span>,<br>                    <span class=\"hljs-string\">\"catchPhrase\"</span>: <span class=\"hljs-string\">\"Multi-layered client-server neural-net\"</span>,<br>                    <span class=\"hljs-string\">\"bs\"</span>: <span class=\"hljs-string\">\"harness real-time e-markets\"</span><br>                }<br>            })<br>    })<br>    .expect(<span class=\"hljs-number\">200</span>, done);",
            "isRoot": false,
            "uuid": "eb065fbc-12c6-49e4-a5c7-a34382fbf8bf",
            "parentUUID": "2033ac57-9b75-449b-a186-82eae4213501",
            "skipped": false
          },
          {
            "title": "should return a 200 OK status code for userId 1 using expect method",
            "fullTitle": "@get should return a 200 OK status code for userId 1 using expect method",
            "timedOut": false,
            "duration": 8,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "utils.httpGET(<span class=\"hljs-string\">'/users/1'</span>, {})<br>    .set(<span class=\"hljs-string\">'content-type'</span>, <span class=\"hljs-string\">'application/json; charset=utf-8'</span>)<br>    .expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">res</span>) </span>{<br>        <span class=\"hljs-keyword\">const</span> response = res.body;<br>        <span class=\"hljs-comment\">//console.log(response);</span><br>        expect(response).to.have.property(<span class=\"hljs-string\">'id'</span>);<br>        expect(response).to.have.property(<span class=\"hljs-string\">'name'</span>);<br>        expect(response).to.have.property(<span class=\"hljs-string\">'username'</span>);<br>        expect(response).to.have.property(<span class=\"hljs-string\">'email'</span>);<br>        expect(response.id).to.equal(<span class=\"hljs-number\">1</span>);<br>        expect(response.email).to.equal(<span class=\"hljs-string\">'Sincere@april.biz'</span>);<br>        expect(response.address.city).to.equal(<span class=\"hljs-string\">'Gwenborough'</span>);<br><br>    })<br>    .expect(<span class=\"hljs-number\">200</span>, done);",
            "isRoot": false,
            "uuid": "2f8935ac-301d-4cd8-8ff3-edbb5179cc2f",
            "parentUUID": "2033ac57-9b75-449b-a186-82eae4213501",
            "skipped": false
          },
          {
            "title": "should return a 200 OK status code for GET All /users using expect method",
            "fullTitle": "@get should return a 200 OK status code for GET All /users using expect method",
            "timedOut": false,
            "duration": 9,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "utils.httpGET(<span class=\"hljs-string\">'/users/'</span>, {})<br>    .set(<span class=\"hljs-string\">'content-type'</span>, <span class=\"hljs-string\">'application/json; charset=utf-8'</span>)<br>    <span class=\"hljs-comment\">// .expect(function (res) {</span><br>    <span class=\"hljs-comment\">//     const response = res.body;</span><br>    <span class=\"hljs-comment\">//     console.log(response);</span><br>    <span class=\"hljs-comment\">// })</span><br>    .expect(<span class=\"hljs-number\">200</span>, done);",
            "isRoot": false,
            "uuid": "4011f14f-042a-42a1-b197-cb91a3fd9523",
            "parentUUID": "2033ac57-9b75-449b-a186-82eae4213501",
            "skipped": false
          }
        ],
        "pending": [],
        "root": false,
        "_timeout": 3000,
        "file": "/test/users/GET/getUSER_200.js",
        "uuid": "2033ac57-9b75-449b-a186-82eae4213501",
        "fullFile": "/Users/garsenius/github/apiAutomatedTest/test/users/GET/getUSER_200.js",
        "passes": [
          {
            "title": "should return a 200 OK status code for User ID 1",
            "fullTitle": "@get should return a 200 OK status code for User ID 1",
            "timedOut": false,
            "duration": 10,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "utils.httpGET(<span class=\"hljs-string\">'/users/1'</span>, {})<br>    .set(<span class=\"hljs-string\">'content-type'</span>, <span class=\"hljs-string\">'application/json; charset=utf-8'</span>)<br>    .expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">res</span>) </span>{<br>        <span class=\"hljs-keyword\">const</span> response = res.body;<br>        <span class=\"hljs-comment\">//console.log(response);</span><br>        <span class=\"hljs-keyword\">return</span> assert.deepEqual(response,<br>            {<br>                <span class=\"hljs-string\">\"id\"</span>: <span class=\"hljs-number\">1</span>,<br>                <span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"Leanne Graham\"</span>,<br>                <span class=\"hljs-string\">\"username\"</span>: <span class=\"hljs-string\">\"Bret\"</span>,<br>                <span class=\"hljs-string\">\"email\"</span>: <span class=\"hljs-string\">\"Sincere@april.biz\"</span>,<br>                <span class=\"hljs-string\">\"address\"</span>: {<br>                    <span class=\"hljs-string\">\"street\"</span>: <span class=\"hljs-string\">\"Kulas Light\"</span>,<br>                    <span class=\"hljs-string\">\"suite\"</span>: <span class=\"hljs-string\">\"Apt. 556\"</span>,<br>                    <span class=\"hljs-string\">\"city\"</span>: <span class=\"hljs-string\">\"Gwenborough\"</span>,<br>                    <span class=\"hljs-string\">\"zipcode\"</span>: <span class=\"hljs-string\">\"92998-3874\"</span>,<br>                    <span class=\"hljs-string\">\"geo\"</span>: {<br>                        <span class=\"hljs-string\">\"lat\"</span>: <span class=\"hljs-string\">\"-37.3159\"</span>,<br>                        <span class=\"hljs-string\">\"lng\"</span>: <span class=\"hljs-string\">\"81.1496\"</span><br>                    }<br>                },<br>                <span class=\"hljs-string\">\"phone\"</span>: <span class=\"hljs-string\">\"1-770-736-8031 x56442\"</span>,<br>                <span class=\"hljs-string\">\"website\"</span>: <span class=\"hljs-string\">\"hildegard.org\"</span>,<br>                <span class=\"hljs-string\">\"company\"</span>: {<br>                    <span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"Romaguera-Crona\"</span>,<br>                    <span class=\"hljs-string\">\"catchPhrase\"</span>: <span class=\"hljs-string\">\"Multi-layered client-server neural-net\"</span>,<br>                    <span class=\"hljs-string\">\"bs\"</span>: <span class=\"hljs-string\">\"harness real-time e-markets\"</span><br>                }<br>            })<br>    })<br>    .expect(<span class=\"hljs-number\">200</span>, done);",
            "isRoot": false,
            "uuid": "eb065fbc-12c6-49e4-a5c7-a34382fbf8bf",
            "parentUUID": "2033ac57-9b75-449b-a186-82eae4213501",
            "skipped": false
          },
          {
            "title": "should return a 200 OK status code for userId 1 using expect method",
            "fullTitle": "@get should return a 200 OK status code for userId 1 using expect method",
            "timedOut": false,
            "duration": 8,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "utils.httpGET(<span class=\"hljs-string\">'/users/1'</span>, {})<br>    .set(<span class=\"hljs-string\">'content-type'</span>, <span class=\"hljs-string\">'application/json; charset=utf-8'</span>)<br>    .expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">res</span>) </span>{<br>        <span class=\"hljs-keyword\">const</span> response = res.body;<br>        <span class=\"hljs-comment\">//console.log(response);</span><br>        expect(response).to.have.property(<span class=\"hljs-string\">'id'</span>);<br>        expect(response).to.have.property(<span class=\"hljs-string\">'name'</span>);<br>        expect(response).to.have.property(<span class=\"hljs-string\">'username'</span>);<br>        expect(response).to.have.property(<span class=\"hljs-string\">'email'</span>);<br>        expect(response.id).to.equal(<span class=\"hljs-number\">1</span>);<br>        expect(response.email).to.equal(<span class=\"hljs-string\">'Sincere@april.biz'</span>);<br>        expect(response.address.city).to.equal(<span class=\"hljs-string\">'Gwenborough'</span>);<br><br>    })<br>    .expect(<span class=\"hljs-number\">200</span>, done);",
            "isRoot": false,
            "uuid": "2f8935ac-301d-4cd8-8ff3-edbb5179cc2f",
            "parentUUID": "2033ac57-9b75-449b-a186-82eae4213501",
            "skipped": false
          },
          {
            "title": "should return a 200 OK status code for GET All /users using expect method",
            "fullTitle": "@get should return a 200 OK status code for GET All /users using expect method",
            "timedOut": false,
            "duration": 9,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "utils.httpGET(<span class=\"hljs-string\">'/users/'</span>, {})<br>    .set(<span class=\"hljs-string\">'content-type'</span>, <span class=\"hljs-string\">'application/json; charset=utf-8'</span>)<br>    <span class=\"hljs-comment\">// .expect(function (res) {</span><br>    <span class=\"hljs-comment\">//     const response = res.body;</span><br>    <span class=\"hljs-comment\">//     console.log(response);</span><br>    <span class=\"hljs-comment\">// })</span><br>    .expect(<span class=\"hljs-number\">200</span>, done);",
            "isRoot": false,
            "uuid": "4011f14f-042a-42a1-b197-cb91a3fd9523",
            "parentUUID": "2033ac57-9b75-449b-a186-82eae4213501",
            "skipped": false
          }
        ],
        "failures": [],
        "skipped": [],
        "hasTests": true,
        "hasSuites": false,
        "totalTests": 3,
        "totalPasses": 3,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": true,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 27
      }
    ],
    "tests": [],
    "pending": [],
    "root": true,
    "_timeout": 3000,
    "uuid": "31a8a68a-7820-407d-b3b7-79c9684a9799",
    "fullFile": "",
    "file": "",
    "passes": [],
    "failures": [],
    "skipped": [],
    "hasTests": false,
    "hasSuites": true,
    "totalTests": 0,
    "totalPasses": 0,
    "totalFailures": 0,
    "totalPending": 0,
    "totalSkipped": 0,
    "hasPasses": false,
    "hasFailures": false,
    "hasPending": false,
    "hasSkipped": false,
    "duration": 0,
    "rootEmpty": true
  },
  "allTests": [
    {
      "title": "should return a 200 OK status code for Album ID 1",
      "fullTitle": "@get should return a 200 OK status code for Album ID 1",
      "timedOut": false,
      "duration": 37,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "utils.httpGET(<span class=\"hljs-string\">'/albums/1'</span>, {})<br>    .set(<span class=\"hljs-string\">'content-type'</span>, <span class=\"hljs-string\">'application/json; charset=utf-8'</span>)<br>    .expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">res</span>) </span>{<br>        <span class=\"hljs-keyword\">const</span> response = res.body;<br>        <span class=\"hljs-comment\">//console.log(response);</span><br>        <span class=\"hljs-keyword\">return</span> assert.deepEqual(response,<br>            {<br>                <span class=\"hljs-string\">\"userId\"</span>: <span class=\"hljs-number\">1</span>,<br>                <span class=\"hljs-string\">\"id\"</span>: <span class=\"hljs-number\">1</span>,<br>                <span class=\"hljs-string\">\"title\"</span>: <span class=\"hljs-string\">\"quidem molestiae enim\"</span><br>            })<br>    })<br>    .expect(<span class=\"hljs-number\">200</span>, done);",
      "isRoot": false,
      "uuid": "f6de6b03-8504-4e95-a23e-a156b82f0c13",
      "parentUUID": "1b4bc745-0fef-4c1b-8d5b-7fca9918947a",
      "skipped": false
    },
    {
      "title": "should return a 200 OK status code for Album ID 1 using expect method",
      "fullTitle": "@get should return a 200 OK status code for Album ID 1 using expect method",
      "timedOut": false,
      "duration": 22,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "utils.httpGET(<span class=\"hljs-string\">'/albums/1'</span>, {})<br>    .set(<span class=\"hljs-string\">'content-type'</span>, <span class=\"hljs-string\">'application/json; charset=utf-8'</span>)<br>    .expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">res</span>) </span>{<br>         <span class=\"hljs-keyword\">const</span> response = res.body;<br>        <span class=\"hljs-comment\">// console.log(response);</span><br>        expect(response).to.have.property(<span class=\"hljs-string\">'userId'</span>);<br>        expect(response).to.have.property(<span class=\"hljs-string\">'id'</span>);<br>        expect(response).to.have.property(<span class=\"hljs-string\">'title'</span>);<br>        expect(response.id).to.equal(<span class=\"hljs-number\">1</span>);<br>        expect(response.userId).to.equal(<span class=\"hljs-number\">1</span>);<br>        expect(response.title).to.equal(<span class=\"hljs-string\">'quidem molestiae enim'</span>);<br><br>    })<br>    .expect(<span class=\"hljs-number\">200</span>, done);",
      "isRoot": false,
      "uuid": "8280698b-1b95-4f29-9ee6-aa6daa10bb83",
      "parentUUID": "1b4bc745-0fef-4c1b-8d5b-7fca9918947a",
      "skipped": false
    },
    {
      "title": "should return a 200 OK status code for GET All /albums using expect method",
      "fullTitle": "@get should return a 200 OK status code for GET All /albums using expect method",
      "timedOut": false,
      "duration": 22,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "utils.httpGET(<span class=\"hljs-string\">'/albums/'</span>, {})<br>    .set(<span class=\"hljs-string\">'content-type'</span>, <span class=\"hljs-string\">'application/json; charset=utf-8'</span>)<br>    <span class=\"hljs-comment\">// .expect(function (res) {</span><br>    <span class=\"hljs-comment\">//     const response = res.body;</span><br>    <span class=\"hljs-comment\">//     console.log(response);</span><br>    <span class=\"hljs-comment\">// })</span><br>    .expect(<span class=\"hljs-number\">200</span>, done);",
      "isRoot": false,
      "uuid": "f563c9cc-2ec4-4e46-96b0-0884f76d7350",
      "parentUUID": "1b4bc745-0fef-4c1b-8d5b-7fca9918947a",
      "skipped": false
    },
    {
      "title": "should return a 200 OK status code for Comment ID 1",
      "fullTitle": "@get should return a 200 OK status code for Comment ID 1",
      "timedOut": false,
      "duration": 10,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "utils.httpGET(<span class=\"hljs-string\">'/comments/1'</span>, {})<br>    .set(<span class=\"hljs-string\">'content-type'</span>, <span class=\"hljs-string\">'application/json; charset=utf-8'</span>)<br>    .expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">res</span>) </span>{<br>        <span class=\"hljs-keyword\">const</span> response = res.body;<br>        <span class=\"hljs-comment\">//console.log(response);</span><br>        <span class=\"hljs-keyword\">return</span> assert.deepEqual(response,<br>            {<br>                <span class=\"hljs-string\">\"postId\"</span>: <span class=\"hljs-number\">1</span>,<br>                <span class=\"hljs-string\">\"id\"</span>: <span class=\"hljs-number\">1</span>,<br>                <span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"id labore ex et quam laborum\"</span>,<br>                <span class=\"hljs-string\">\"email\"</span>: <span class=\"hljs-string\">\"Eliseo@gardner.biz\"</span>,<br>                <span class=\"hljs-string\">\"body\"</span>: <span class=\"hljs-string\">\"laudantium enim quasi est quidem magnam voluptate ipsam eos\\ntempora quo necessitatibus\\ndolor quam autem quasi\\nreiciendis et nam sapiente accusantium\"</span><br>            })<br>    })<br>    .expect(<span class=\"hljs-number\">200</span>, done);",
      "isRoot": false,
      "uuid": "e9ec70af-30f0-4f33-8413-73ab631604f2",
      "parentUUID": "bee5350a-4886-4fb6-97e3-2219887b1ded",
      "skipped": false
    },
    {
      "title": "should return a 200 OK status code for comment ID 1 using expect method",
      "fullTitle": "@get should return a 200 OK status code for comment ID 1 using expect method",
      "timedOut": false,
      "duration": 9,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "utils.httpGET(<span class=\"hljs-string\">'/comments/1'</span>, {})<br>    .set(<span class=\"hljs-string\">'content-type'</span>, <span class=\"hljs-string\">'application/json; charset=utf-8'</span>)<br>    .expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">res</span>) </span>{<br>        <span class=\"hljs-keyword\">const</span> response = res.body;<br>        <span class=\"hljs-comment\">//console.log(response);</span><br>        expect(response).to.have.property(<span class=\"hljs-string\">'postId'</span>);<br>        expect(response).to.have.property(<span class=\"hljs-string\">'id'</span>);<br>        expect(response).to.have.property(<span class=\"hljs-string\">'name'</span>);<br>        expect(response).to.have.property(<span class=\"hljs-string\">'email'</span>);<br>        expect(response).to.have.property(<span class=\"hljs-string\">'body'</span>);<br>        expect(response.id).to.equal(<span class=\"hljs-number\">1</span>);<br>        expect(response.email).to.equal(<span class=\"hljs-string\">'Eliseo@gardner.biz'</span>);<br>        expect(response.name).to.equal(<span class=\"hljs-string\">'id labore ex et quam laborum'</span>);<br><br>    })<br>    .expect(<span class=\"hljs-number\">200</span>, done);",
      "isRoot": false,
      "uuid": "88ab00be-dcb5-4f8d-b0e9-e97a301b554c",
      "parentUUID": "bee5350a-4886-4fb6-97e3-2219887b1ded",
      "skipped": false
    },
    {
      "title": "should return a 200 OK status code for GET All /comments using expect method",
      "fullTitle": "@get should return a 200 OK status code for GET All /comments using expect method",
      "timedOut": false,
      "duration": 28,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "utils.httpGET(<span class=\"hljs-string\">'/comments/'</span>, {})<br>    .set(<span class=\"hljs-string\">'content-type'</span>, <span class=\"hljs-string\">'application/json; charset=utf-8'</span>)<br>    <span class=\"hljs-comment\">// .expect(function (res) {</span><br>    <span class=\"hljs-comment\">//     const response = res.body;</span><br>    <span class=\"hljs-comment\">//     console.log(response);</span><br>    <span class=\"hljs-comment\">// })</span><br>    .expect(<span class=\"hljs-number\">200</span>, done);",
      "isRoot": false,
      "uuid": "918208ac-b244-4cea-86c4-022b18e748e2",
      "parentUUID": "bee5350a-4886-4fb6-97e3-2219887b1ded",
      "skipped": false
    },
    {
      "title": "should return a 200 code after deleting fake postId 100",
      "fullTitle": "@delete should return a 200 code after deleting fake postId 100",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "utils.httpDELETE(<span class=\"hljs-string\">'/posts/101'</span>, {})<br>   .send(<br>       {<br>           id: <span class=\"hljs-number\">101</span>,<br>           title: <span class=\"hljs-string\">'foo'</span>,<br>           body: <span class=\"hljs-string\">'bar'</span>,<br>           userId: <span class=\"hljs-number\">1</span><br>       }<br>   )<br>   .expect(<span class=\"hljs-string\">'content-type'</span>, <span class=\"hljs-string\">'application/json; charset=utf-8'</span>)<br>   .expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">res</span>) </span>{<br>       <span class=\"hljs-keyword\">const</span> response = res.body;<br>       <span class=\"hljs-comment\">//console.log(response)</span><br>       <span class=\"hljs-keyword\">return</span> assert.deepEqual(response,<br>           {} <span class=\"hljs-comment\">//return empty response</span><br>       );<br>   })<br>    .expect(<span class=\"hljs-number\">200</span>);",
      "isRoot": false,
      "uuid": "7a2a4e59-c68d-4cc4-85f0-863715b7d630",
      "parentUUID": "58524ee4-4bd3-41f5-80c2-0dc21f21087a",
      "skipped": false
    },
    {
      "title": "should return a 200 OK status code for PostID 1",
      "fullTitle": "@get should return a 200 OK status code for PostID 1",
      "timedOut": false,
      "duration": 7,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "utils.httpGET(<span class=\"hljs-string\">'/posts/1'</span>, {})<br>    .set(<span class=\"hljs-string\">'content-type'</span>, <span class=\"hljs-string\">'application/json; charset=utf-8'</span>)<br>    .expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">res</span>) </span>{<br>        <span class=\"hljs-keyword\">const</span> response = res.body;<br>        <span class=\"hljs-comment\">//console.log(response);</span><br>        <span class=\"hljs-keyword\">return</span> assert.deepEqual(response,<br>            {<br>                <span class=\"hljs-string\">\"id\"</span>: <span class=\"hljs-string\">\"1\"</span>,<br>                <span class=\"hljs-string\">\"title\"</span>: <span class=\"hljs-string\">\"foo\"</span>,<br>                <span class=\"hljs-string\">\"body\"</span>: <span class=\"hljs-string\">\"bar\"</span>,<br>                <span class=\"hljs-string\">\"userId\"</span>: <span class=\"hljs-number\">1</span><br>            })<br>    })<br>    .expect(<span class=\"hljs-number\">200</span>, done);",
      "isRoot": false,
      "uuid": "c5a5e28b-0b3f-42c4-abdd-3ea48ae9f853",
      "parentUUID": "a983b67c-5f46-4125-a13b-3b8cdd2a14b2",
      "skipped": false
    },
    {
      "title": "should return a 200 OK status code for PostID 1 using expect method",
      "fullTitle": "@get should return a 200 OK status code for PostID 1 using expect method",
      "timedOut": false,
      "duration": 7,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "utils.httpGET(<span class=\"hljs-string\">'/posts/1'</span>, {})<br>    .set(<span class=\"hljs-string\">'content-type'</span>, <span class=\"hljs-string\">'application/json; charset=utf-8'</span>)<br>    .expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">res</span>) </span>{<br>        <span class=\"hljs-keyword\">const</span> response = res.body;<br>        <span class=\"hljs-comment\">//console.log(response);</span><br>        expect(response).to.have.property(<span class=\"hljs-string\">'id'</span>);<br>        expect(response).to.have.property(<span class=\"hljs-string\">'title'</span>);<br>        expect(response).to.have.property(<span class=\"hljs-string\">'body'</span>);<br>        expect(response).to.have.property(<span class=\"hljs-string\">'userId'</span>);<br>        expect(response.id).to.equal(<span class=\"hljs-string\">'1'</span>);<br>    })<br>    .expect(<span class=\"hljs-number\">200</span>, done);",
      "isRoot": false,
      "uuid": "7f4af162-ee92-4bcd-b8c1-7a89af13f73f",
      "parentUUID": "a983b67c-5f46-4125-a13b-3b8cdd2a14b2",
      "skipped": false
    },
    {
      "title": "should return a 200 OK status code for PostID 1 using expect method",
      "fullTitle": "@get should return a 200 OK status code for PostID 1 using expect method",
      "timedOut": false,
      "duration": 24,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "utils.httpGET(<span class=\"hljs-string\">'/posts/'</span>, {})<br>    .set(<span class=\"hljs-string\">'content-type'</span>, <span class=\"hljs-string\">'application/json; charset=utf-8'</span>)<br>    <span class=\"hljs-comment\">// .expect(function (res) {</span><br>    <span class=\"hljs-comment\">//     const response = res.body;</span><br>    <span class=\"hljs-comment\">//     console.log(response);</span><br>    <span class=\"hljs-comment\">// })</span><br>    .expect(<span class=\"hljs-number\">200</span>, done);",
      "isRoot": false,
      "uuid": "70e9edb2-68ab-4938-b85b-9452cac358f0",
      "parentUUID": "a983b67c-5f46-4125-a13b-3b8cdd2a14b2",
      "skipped": false
    },
    {
      "title": "should return a 201 code after posting",
      "fullTitle": "@post should return a 201 code after posting",
      "timedOut": false,
      "duration": 64,
      "state": "passed",
      "speed": "medium",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "utils.httpPOST(<span class=\"hljs-string\">'/posts'</span>, {})<br>    .send({title: <span class=\"hljs-string\">'foo'</span>, body: <span class=\"hljs-string\">'bar'</span>, userId: <span class=\"hljs-number\">1</span>})<br>    .expect(<span class=\"hljs-string\">'content-type'</span>, <span class=\"hljs-string\">'application/json; charset=utf-8'</span>)<br>    .expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">res</span>) </span>{<br>        <span class=\"hljs-keyword\">const</span> response = res.body;<br>        <span class=\"hljs-comment\">//console.log(response);</span><br>        expect(response.title).to.equal(<span class=\"hljs-string\">'foo'</span>);<br>        expect(response.body).to.equal(<span class=\"hljs-string\">'bar'</span>);<br>        expect(response.userId).to.equal(<span class=\"hljs-number\">1</span>);<br>    })<br>    .expect(<span class=\"hljs-number\">201</span>, done)",
      "isRoot": false,
      "uuid": "c81af619-7e64-41dd-b7fb-4910e5668790",
      "parentUUID": "9c71a666-8533-4caf-b590-c41b56b38b21",
      "skipped": false
    },
    {
      "title": "should return a 200 code after updating postId 1",
      "fullTitle": "@put should return a 200 code after updating postId 1",
      "timedOut": false,
      "duration": 20,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "utils.httpPUT(<span class=\"hljs-string\">'/posts/20'</span>, {})<br>    .send(<br>        {<br>            id: <span class=\"hljs-number\">20</span>,<br>            title: <span class=\"hljs-string\">'candy crush'</span>,<br>            body: <span class=\"hljs-string\">'sodalicious juicy'</span>,<br>            userId: <span class=\"hljs-number\">1</span><br>        }<br>    )<br>    .expect(<span class=\"hljs-string\">'content-type'</span>, <span class=\"hljs-string\">'application/json; charset=utf-8'</span>)<br>    .expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">res</span>) </span>{<br>        <span class=\"hljs-keyword\">const</span> response = res.body;<br>        <span class=\"hljs-comment\">//console.log(response);</span><br>        expect(response.id).to.equal(<span class=\"hljs-string\">'20'</span>);<br>        expect(response.title).to.equal(<span class=\"hljs-string\">'candy crush'</span>);<br>        expect(response.body).to.equal(<span class=\"hljs-string\">'sodalicious juicy'</span>);<br>        expect(response.userId).to.equal(<span class=\"hljs-number\">1</span>);<br>    })<br>    .expect(<span class=\"hljs-number\">200</span>, done);",
      "isRoot": false,
      "uuid": "f6573a35-2f72-42f7-875a-5202827af09f",
      "parentUUID": "c5302f48-5d14-4a92-8a5d-985cf5f2287e",
      "skipped": false
    },
    {
      "title": "should return a 200 code after updating postId 1",
      "fullTitle": "@put should return a 200 code after updating postId 1",
      "timedOut": false,
      "duration": 10,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "utils.httpPUT(<span class=\"hljs-string\">'/posts/1'</span>, {})<br>    .send(<br>        {<br>            id: <span class=\"hljs-number\">1</span>,<br>            title: <span class=\"hljs-string\">'foo'</span>,<br>            body: <span class=\"hljs-string\">'bar'</span>,<br>            userId: <span class=\"hljs-number\">1</span><br>        }<br>    )<br>    .expect(<span class=\"hljs-string\">'content-type'</span>, <span class=\"hljs-string\">'application/json; charset=utf-8'</span>)<br>    .expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">res</span>) </span>{<br>        <span class=\"hljs-keyword\">const</span> response = res.body;<br>        <span class=\"hljs-comment\">//console.log(response);</span><br>        expect(response.id).to.equal(<span class=\"hljs-string\">'1'</span>);<br>        expect(response.title).to.equal(<span class=\"hljs-string\">'foo'</span>);<br>        expect(response.body).to.equal(<span class=\"hljs-string\">'bar'</span>);<br>        expect(response.userId).to.equal(<span class=\"hljs-number\">1</span>);<br>    })<br>    .expect(<span class=\"hljs-number\">200</span>, done);",
      "isRoot": false,
      "uuid": "40dff901-b860-4ec9-bb65-f1487d60246e",
      "parentUUID": "c5302f48-5d14-4a92-8a5d-985cf5f2287e",
      "skipped": false
    },
    {
      "title": "should return a 200 OK status code for User ID 1",
      "fullTitle": "@get should return a 200 OK status code for User ID 1",
      "timedOut": false,
      "duration": 10,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "utils.httpGET(<span class=\"hljs-string\">'/users/1'</span>, {})<br>    .set(<span class=\"hljs-string\">'content-type'</span>, <span class=\"hljs-string\">'application/json; charset=utf-8'</span>)<br>    .expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">res</span>) </span>{<br>        <span class=\"hljs-keyword\">const</span> response = res.body;<br>        <span class=\"hljs-comment\">//console.log(response);</span><br>        <span class=\"hljs-keyword\">return</span> assert.deepEqual(response,<br>            {<br>                <span class=\"hljs-string\">\"id\"</span>: <span class=\"hljs-number\">1</span>,<br>                <span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"Leanne Graham\"</span>,<br>                <span class=\"hljs-string\">\"username\"</span>: <span class=\"hljs-string\">\"Bret\"</span>,<br>                <span class=\"hljs-string\">\"email\"</span>: <span class=\"hljs-string\">\"Sincere@april.biz\"</span>,<br>                <span class=\"hljs-string\">\"address\"</span>: {<br>                    <span class=\"hljs-string\">\"street\"</span>: <span class=\"hljs-string\">\"Kulas Light\"</span>,<br>                    <span class=\"hljs-string\">\"suite\"</span>: <span class=\"hljs-string\">\"Apt. 556\"</span>,<br>                    <span class=\"hljs-string\">\"city\"</span>: <span class=\"hljs-string\">\"Gwenborough\"</span>,<br>                    <span class=\"hljs-string\">\"zipcode\"</span>: <span class=\"hljs-string\">\"92998-3874\"</span>,<br>                    <span class=\"hljs-string\">\"geo\"</span>: {<br>                        <span class=\"hljs-string\">\"lat\"</span>: <span class=\"hljs-string\">\"-37.3159\"</span>,<br>                        <span class=\"hljs-string\">\"lng\"</span>: <span class=\"hljs-string\">\"81.1496\"</span><br>                    }<br>                },<br>                <span class=\"hljs-string\">\"phone\"</span>: <span class=\"hljs-string\">\"1-770-736-8031 x56442\"</span>,<br>                <span class=\"hljs-string\">\"website\"</span>: <span class=\"hljs-string\">\"hildegard.org\"</span>,<br>                <span class=\"hljs-string\">\"company\"</span>: {<br>                    <span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"Romaguera-Crona\"</span>,<br>                    <span class=\"hljs-string\">\"catchPhrase\"</span>: <span class=\"hljs-string\">\"Multi-layered client-server neural-net\"</span>,<br>                    <span class=\"hljs-string\">\"bs\"</span>: <span class=\"hljs-string\">\"harness real-time e-markets\"</span><br>                }<br>            })<br>    })<br>    .expect(<span class=\"hljs-number\">200</span>, done);",
      "isRoot": false,
      "uuid": "dc67f8f2-9d20-4d0b-82a0-366e72e01867",
      "parentUUID": "2033ac57-9b75-449b-a186-82eae4213501",
      "skipped": false
    },
    {
      "title": "should return a 200 OK status code for userId 1 using expect method",
      "fullTitle": "@get should return a 200 OK status code for userId 1 using expect method",
      "timedOut": false,
      "duration": 8,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "utils.httpGET(<span class=\"hljs-string\">'/users/1'</span>, {})<br>    .set(<span class=\"hljs-string\">'content-type'</span>, <span class=\"hljs-string\">'application/json; charset=utf-8'</span>)<br>    .expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">res</span>) </span>{<br>        <span class=\"hljs-keyword\">const</span> response = res.body;<br>        <span class=\"hljs-comment\">//console.log(response);</span><br>        expect(response).to.have.property(<span class=\"hljs-string\">'id'</span>);<br>        expect(response).to.have.property(<span class=\"hljs-string\">'name'</span>);<br>        expect(response).to.have.property(<span class=\"hljs-string\">'username'</span>);<br>        expect(response).to.have.property(<span class=\"hljs-string\">'email'</span>);<br>        expect(response.id).to.equal(<span class=\"hljs-number\">1</span>);<br>        expect(response.email).to.equal(<span class=\"hljs-string\">'Sincere@april.biz'</span>);<br>        expect(response.address.city).to.equal(<span class=\"hljs-string\">'Gwenborough'</span>);<br><br>    })<br>    .expect(<span class=\"hljs-number\">200</span>, done);",
      "isRoot": false,
      "uuid": "90adbc01-48d1-4752-83c0-b9c1409e722b",
      "parentUUID": "2033ac57-9b75-449b-a186-82eae4213501",
      "skipped": false
    },
    {
      "title": "should return a 200 OK status code for GET All /users using expect method",
      "fullTitle": "@get should return a 200 OK status code for GET All /users using expect method",
      "timedOut": false,
      "duration": 9,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "utils.httpGET(<span class=\"hljs-string\">'/users/'</span>, {})<br>    .set(<span class=\"hljs-string\">'content-type'</span>, <span class=\"hljs-string\">'application/json; charset=utf-8'</span>)<br>    <span class=\"hljs-comment\">// .expect(function (res) {</span><br>    <span class=\"hljs-comment\">//     const response = res.body;</span><br>    <span class=\"hljs-comment\">//     console.log(response);</span><br>    <span class=\"hljs-comment\">// })</span><br>    .expect(<span class=\"hljs-number\">200</span>, done);",
      "isRoot": false,
      "uuid": "7832b547-c02f-445b-9451-e752986f32a3",
      "parentUUID": "2033ac57-9b75-449b-a186-82eae4213501",
      "skipped": false
    }
  ],
  "allPending": [],
  "allPasses": [
    {
      "title": "should return a 200 OK status code for Album ID 1",
      "fullTitle": "@get should return a 200 OK status code for Album ID 1",
      "timedOut": false,
      "duration": 37,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "utils.httpGET(<span class=\"hljs-string\">'/albums/1'</span>, {})<br>    .set(<span class=\"hljs-string\">'content-type'</span>, <span class=\"hljs-string\">'application/json; charset=utf-8'</span>)<br>    .expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">res</span>) </span>{<br>        <span class=\"hljs-keyword\">const</span> response = res.body;<br>        <span class=\"hljs-comment\">//console.log(response);</span><br>        <span class=\"hljs-keyword\">return</span> assert.deepEqual(response,<br>            {<br>                <span class=\"hljs-string\">\"userId\"</span>: <span class=\"hljs-number\">1</span>,<br>                <span class=\"hljs-string\">\"id\"</span>: <span class=\"hljs-number\">1</span>,<br>                <span class=\"hljs-string\">\"title\"</span>: <span class=\"hljs-string\">\"quidem molestiae enim\"</span><br>            })<br>    })<br>    .expect(<span class=\"hljs-number\">200</span>, done);",
      "isRoot": false,
      "uuid": "33ed42b2-89dc-4e46-af77-06057d946c30",
      "parentUUID": "1b4bc745-0fef-4c1b-8d5b-7fca9918947a",
      "skipped": false
    },
    {
      "title": "should return a 200 OK status code for Album ID 1 using expect method",
      "fullTitle": "@get should return a 200 OK status code for Album ID 1 using expect method",
      "timedOut": false,
      "duration": 22,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "utils.httpGET(<span class=\"hljs-string\">'/albums/1'</span>, {})<br>    .set(<span class=\"hljs-string\">'content-type'</span>, <span class=\"hljs-string\">'application/json; charset=utf-8'</span>)<br>    .expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">res</span>) </span>{<br>         <span class=\"hljs-keyword\">const</span> response = res.body;<br>        <span class=\"hljs-comment\">// console.log(response);</span><br>        expect(response).to.have.property(<span class=\"hljs-string\">'userId'</span>);<br>        expect(response).to.have.property(<span class=\"hljs-string\">'id'</span>);<br>        expect(response).to.have.property(<span class=\"hljs-string\">'title'</span>);<br>        expect(response.id).to.equal(<span class=\"hljs-number\">1</span>);<br>        expect(response.userId).to.equal(<span class=\"hljs-number\">1</span>);<br>        expect(response.title).to.equal(<span class=\"hljs-string\">'quidem molestiae enim'</span>);<br><br>    })<br>    .expect(<span class=\"hljs-number\">200</span>, done);",
      "isRoot": false,
      "uuid": "8bb39ed3-97df-43c8-9c8d-2da7f2683238",
      "parentUUID": "1b4bc745-0fef-4c1b-8d5b-7fca9918947a",
      "skipped": false
    },
    {
      "title": "should return a 200 OK status code for GET All /albums using expect method",
      "fullTitle": "@get should return a 200 OK status code for GET All /albums using expect method",
      "timedOut": false,
      "duration": 22,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "utils.httpGET(<span class=\"hljs-string\">'/albums/'</span>, {})<br>    .set(<span class=\"hljs-string\">'content-type'</span>, <span class=\"hljs-string\">'application/json; charset=utf-8'</span>)<br>    <span class=\"hljs-comment\">// .expect(function (res) {</span><br>    <span class=\"hljs-comment\">//     const response = res.body;</span><br>    <span class=\"hljs-comment\">//     console.log(response);</span><br>    <span class=\"hljs-comment\">// })</span><br>    .expect(<span class=\"hljs-number\">200</span>, done);",
      "isRoot": false,
      "uuid": "bbafe919-71d7-4e68-a1d3-47050c5b7357",
      "parentUUID": "1b4bc745-0fef-4c1b-8d5b-7fca9918947a",
      "skipped": false
    },
    {
      "title": "should return a 200 OK status code for Comment ID 1",
      "fullTitle": "@get should return a 200 OK status code for Comment ID 1",
      "timedOut": false,
      "duration": 10,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "utils.httpGET(<span class=\"hljs-string\">'/comments/1'</span>, {})<br>    .set(<span class=\"hljs-string\">'content-type'</span>, <span class=\"hljs-string\">'application/json; charset=utf-8'</span>)<br>    .expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">res</span>) </span>{<br>        <span class=\"hljs-keyword\">const</span> response = res.body;<br>        <span class=\"hljs-comment\">//console.log(response);</span><br>        <span class=\"hljs-keyword\">return</span> assert.deepEqual(response,<br>            {<br>                <span class=\"hljs-string\">\"postId\"</span>: <span class=\"hljs-number\">1</span>,<br>                <span class=\"hljs-string\">\"id\"</span>: <span class=\"hljs-number\">1</span>,<br>                <span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"id labore ex et quam laborum\"</span>,<br>                <span class=\"hljs-string\">\"email\"</span>: <span class=\"hljs-string\">\"Eliseo@gardner.biz\"</span>,<br>                <span class=\"hljs-string\">\"body\"</span>: <span class=\"hljs-string\">\"laudantium enim quasi est quidem magnam voluptate ipsam eos\\ntempora quo necessitatibus\\ndolor quam autem quasi\\nreiciendis et nam sapiente accusantium\"</span><br>            })<br>    })<br>    .expect(<span class=\"hljs-number\">200</span>, done);",
      "isRoot": false,
      "uuid": "d7f7ceca-5164-4360-a5b0-61a587192914",
      "parentUUID": "bee5350a-4886-4fb6-97e3-2219887b1ded",
      "skipped": false
    },
    {
      "title": "should return a 200 OK status code for comment ID 1 using expect method",
      "fullTitle": "@get should return a 200 OK status code for comment ID 1 using expect method",
      "timedOut": false,
      "duration": 9,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "utils.httpGET(<span class=\"hljs-string\">'/comments/1'</span>, {})<br>    .set(<span class=\"hljs-string\">'content-type'</span>, <span class=\"hljs-string\">'application/json; charset=utf-8'</span>)<br>    .expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">res</span>) </span>{<br>        <span class=\"hljs-keyword\">const</span> response = res.body;<br>        <span class=\"hljs-comment\">//console.log(response);</span><br>        expect(response).to.have.property(<span class=\"hljs-string\">'postId'</span>);<br>        expect(response).to.have.property(<span class=\"hljs-string\">'id'</span>);<br>        expect(response).to.have.property(<span class=\"hljs-string\">'name'</span>);<br>        expect(response).to.have.property(<span class=\"hljs-string\">'email'</span>);<br>        expect(response).to.have.property(<span class=\"hljs-string\">'body'</span>);<br>        expect(response.id).to.equal(<span class=\"hljs-number\">1</span>);<br>        expect(response.email).to.equal(<span class=\"hljs-string\">'Eliseo@gardner.biz'</span>);<br>        expect(response.name).to.equal(<span class=\"hljs-string\">'id labore ex et quam laborum'</span>);<br><br>    })<br>    .expect(<span class=\"hljs-number\">200</span>, done);",
      "isRoot": false,
      "uuid": "2f291585-97d4-4032-bdfe-32fc505a35ba",
      "parentUUID": "bee5350a-4886-4fb6-97e3-2219887b1ded",
      "skipped": false
    },
    {
      "title": "should return a 200 OK status code for GET All /comments using expect method",
      "fullTitle": "@get should return a 200 OK status code for GET All /comments using expect method",
      "timedOut": false,
      "duration": 28,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "utils.httpGET(<span class=\"hljs-string\">'/comments/'</span>, {})<br>    .set(<span class=\"hljs-string\">'content-type'</span>, <span class=\"hljs-string\">'application/json; charset=utf-8'</span>)<br>    <span class=\"hljs-comment\">// .expect(function (res) {</span><br>    <span class=\"hljs-comment\">//     const response = res.body;</span><br>    <span class=\"hljs-comment\">//     console.log(response);</span><br>    <span class=\"hljs-comment\">// })</span><br>    .expect(<span class=\"hljs-number\">200</span>, done);",
      "isRoot": false,
      "uuid": "0896dc4f-d1cd-4a8a-8388-2d1fe0971348",
      "parentUUID": "bee5350a-4886-4fb6-97e3-2219887b1ded",
      "skipped": false
    },
    {
      "title": "should return a 200 code after deleting fake postId 100",
      "fullTitle": "@delete should return a 200 code after deleting fake postId 100",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "utils.httpDELETE(<span class=\"hljs-string\">'/posts/101'</span>, {})<br>   .send(<br>       {<br>           id: <span class=\"hljs-number\">101</span>,<br>           title: <span class=\"hljs-string\">'foo'</span>,<br>           body: <span class=\"hljs-string\">'bar'</span>,<br>           userId: <span class=\"hljs-number\">1</span><br>       }<br>   )<br>   .expect(<span class=\"hljs-string\">'content-type'</span>, <span class=\"hljs-string\">'application/json; charset=utf-8'</span>)<br>   .expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">res</span>) </span>{<br>       <span class=\"hljs-keyword\">const</span> response = res.body;<br>       <span class=\"hljs-comment\">//console.log(response)</span><br>       <span class=\"hljs-keyword\">return</span> assert.deepEqual(response,<br>           {} <span class=\"hljs-comment\">//return empty response</span><br>       );<br>   })<br>    .expect(<span class=\"hljs-number\">200</span>);",
      "isRoot": false,
      "uuid": "7d447175-354f-4945-ae3b-da7a4a98ac86",
      "parentUUID": "58524ee4-4bd3-41f5-80c2-0dc21f21087a",
      "skipped": false
    },
    {
      "title": "should return a 200 OK status code for PostID 1",
      "fullTitle": "@get should return a 200 OK status code for PostID 1",
      "timedOut": false,
      "duration": 7,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "utils.httpGET(<span class=\"hljs-string\">'/posts/1'</span>, {})<br>    .set(<span class=\"hljs-string\">'content-type'</span>, <span class=\"hljs-string\">'application/json; charset=utf-8'</span>)<br>    .expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">res</span>) </span>{<br>        <span class=\"hljs-keyword\">const</span> response = res.body;<br>        <span class=\"hljs-comment\">//console.log(response);</span><br>        <span class=\"hljs-keyword\">return</span> assert.deepEqual(response,<br>            {<br>                <span class=\"hljs-string\">\"id\"</span>: <span class=\"hljs-string\">\"1\"</span>,<br>                <span class=\"hljs-string\">\"title\"</span>: <span class=\"hljs-string\">\"foo\"</span>,<br>                <span class=\"hljs-string\">\"body\"</span>: <span class=\"hljs-string\">\"bar\"</span>,<br>                <span class=\"hljs-string\">\"userId\"</span>: <span class=\"hljs-number\">1</span><br>            })<br>    })<br>    .expect(<span class=\"hljs-number\">200</span>, done);",
      "isRoot": false,
      "uuid": "2310bc81-a1e6-4210-9e5d-107765fdb743",
      "parentUUID": "a983b67c-5f46-4125-a13b-3b8cdd2a14b2",
      "skipped": false
    },
    {
      "title": "should return a 200 OK status code for PostID 1 using expect method",
      "fullTitle": "@get should return a 200 OK status code for PostID 1 using expect method",
      "timedOut": false,
      "duration": 7,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "utils.httpGET(<span class=\"hljs-string\">'/posts/1'</span>, {})<br>    .set(<span class=\"hljs-string\">'content-type'</span>, <span class=\"hljs-string\">'application/json; charset=utf-8'</span>)<br>    .expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">res</span>) </span>{<br>        <span class=\"hljs-keyword\">const</span> response = res.body;<br>        <span class=\"hljs-comment\">//console.log(response);</span><br>        expect(response).to.have.property(<span class=\"hljs-string\">'id'</span>);<br>        expect(response).to.have.property(<span class=\"hljs-string\">'title'</span>);<br>        expect(response).to.have.property(<span class=\"hljs-string\">'body'</span>);<br>        expect(response).to.have.property(<span class=\"hljs-string\">'userId'</span>);<br>        expect(response.id).to.equal(<span class=\"hljs-string\">'1'</span>);<br>    })<br>    .expect(<span class=\"hljs-number\">200</span>, done);",
      "isRoot": false,
      "uuid": "88c8c8ff-7e4e-4981-8f72-74ee53e0c506",
      "parentUUID": "a983b67c-5f46-4125-a13b-3b8cdd2a14b2",
      "skipped": false
    },
    {
      "title": "should return a 200 OK status code for PostID 1 using expect method",
      "fullTitle": "@get should return a 200 OK status code for PostID 1 using expect method",
      "timedOut": false,
      "duration": 24,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "utils.httpGET(<span class=\"hljs-string\">'/posts/'</span>, {})<br>    .set(<span class=\"hljs-string\">'content-type'</span>, <span class=\"hljs-string\">'application/json; charset=utf-8'</span>)<br>    <span class=\"hljs-comment\">// .expect(function (res) {</span><br>    <span class=\"hljs-comment\">//     const response = res.body;</span><br>    <span class=\"hljs-comment\">//     console.log(response);</span><br>    <span class=\"hljs-comment\">// })</span><br>    .expect(<span class=\"hljs-number\">200</span>, done);",
      "isRoot": false,
      "uuid": "f816c410-b010-4741-a048-cb4c273c7f34",
      "parentUUID": "a983b67c-5f46-4125-a13b-3b8cdd2a14b2",
      "skipped": false
    },
    {
      "title": "should return a 201 code after posting",
      "fullTitle": "@post should return a 201 code after posting",
      "timedOut": false,
      "duration": 64,
      "state": "passed",
      "speed": "medium",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "utils.httpPOST(<span class=\"hljs-string\">'/posts'</span>, {})<br>    .send({title: <span class=\"hljs-string\">'foo'</span>, body: <span class=\"hljs-string\">'bar'</span>, userId: <span class=\"hljs-number\">1</span>})<br>    .expect(<span class=\"hljs-string\">'content-type'</span>, <span class=\"hljs-string\">'application/json; charset=utf-8'</span>)<br>    .expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">res</span>) </span>{<br>        <span class=\"hljs-keyword\">const</span> response = res.body;<br>        <span class=\"hljs-comment\">//console.log(response);</span><br>        expect(response.title).to.equal(<span class=\"hljs-string\">'foo'</span>);<br>        expect(response.body).to.equal(<span class=\"hljs-string\">'bar'</span>);<br>        expect(response.userId).to.equal(<span class=\"hljs-number\">1</span>);<br>    })<br>    .expect(<span class=\"hljs-number\">201</span>, done)",
      "isRoot": false,
      "uuid": "b4054125-ca55-44f7-b082-47041221a0ea",
      "parentUUID": "9c71a666-8533-4caf-b590-c41b56b38b21",
      "skipped": false
    },
    {
      "title": "should return a 200 code after updating postId 1",
      "fullTitle": "@put should return a 200 code after updating postId 1",
      "timedOut": false,
      "duration": 20,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "utils.httpPUT(<span class=\"hljs-string\">'/posts/20'</span>, {})<br>    .send(<br>        {<br>            id: <span class=\"hljs-number\">20</span>,<br>            title: <span class=\"hljs-string\">'candy crush'</span>,<br>            body: <span class=\"hljs-string\">'sodalicious juicy'</span>,<br>            userId: <span class=\"hljs-number\">1</span><br>        }<br>    )<br>    .expect(<span class=\"hljs-string\">'content-type'</span>, <span class=\"hljs-string\">'application/json; charset=utf-8'</span>)<br>    .expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">res</span>) </span>{<br>        <span class=\"hljs-keyword\">const</span> response = res.body;<br>        <span class=\"hljs-comment\">//console.log(response);</span><br>        expect(response.id).to.equal(<span class=\"hljs-string\">'20'</span>);<br>        expect(response.title).to.equal(<span class=\"hljs-string\">'candy crush'</span>);<br>        expect(response.body).to.equal(<span class=\"hljs-string\">'sodalicious juicy'</span>);<br>        expect(response.userId).to.equal(<span class=\"hljs-number\">1</span>);<br>    })<br>    .expect(<span class=\"hljs-number\">200</span>, done);",
      "isRoot": false,
      "uuid": "1c22ebef-8374-49dc-b5d9-1d7eeca0fc4e",
      "parentUUID": "c5302f48-5d14-4a92-8a5d-985cf5f2287e",
      "skipped": false
    },
    {
      "title": "should return a 200 code after updating postId 1",
      "fullTitle": "@put should return a 200 code after updating postId 1",
      "timedOut": false,
      "duration": 10,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "utils.httpPUT(<span class=\"hljs-string\">'/posts/1'</span>, {})<br>    .send(<br>        {<br>            id: <span class=\"hljs-number\">1</span>,<br>            title: <span class=\"hljs-string\">'foo'</span>,<br>            body: <span class=\"hljs-string\">'bar'</span>,<br>            userId: <span class=\"hljs-number\">1</span><br>        }<br>    )<br>    .expect(<span class=\"hljs-string\">'content-type'</span>, <span class=\"hljs-string\">'application/json; charset=utf-8'</span>)<br>    .expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">res</span>) </span>{<br>        <span class=\"hljs-keyword\">const</span> response = res.body;<br>        <span class=\"hljs-comment\">//console.log(response);</span><br>        expect(response.id).to.equal(<span class=\"hljs-string\">'1'</span>);<br>        expect(response.title).to.equal(<span class=\"hljs-string\">'foo'</span>);<br>        expect(response.body).to.equal(<span class=\"hljs-string\">'bar'</span>);<br>        expect(response.userId).to.equal(<span class=\"hljs-number\">1</span>);<br>    })<br>    .expect(<span class=\"hljs-number\">200</span>, done);",
      "isRoot": false,
      "uuid": "809145fe-0467-4d44-b13e-03210a3d7f6e",
      "parentUUID": "c5302f48-5d14-4a92-8a5d-985cf5f2287e",
      "skipped": false
    },
    {
      "title": "should return a 200 OK status code for User ID 1",
      "fullTitle": "@get should return a 200 OK status code for User ID 1",
      "timedOut": false,
      "duration": 10,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "utils.httpGET(<span class=\"hljs-string\">'/users/1'</span>, {})<br>    .set(<span class=\"hljs-string\">'content-type'</span>, <span class=\"hljs-string\">'application/json; charset=utf-8'</span>)<br>    .expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">res</span>) </span>{<br>        <span class=\"hljs-keyword\">const</span> response = res.body;<br>        <span class=\"hljs-comment\">//console.log(response);</span><br>        <span class=\"hljs-keyword\">return</span> assert.deepEqual(response,<br>            {<br>                <span class=\"hljs-string\">\"id\"</span>: <span class=\"hljs-number\">1</span>,<br>                <span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"Leanne Graham\"</span>,<br>                <span class=\"hljs-string\">\"username\"</span>: <span class=\"hljs-string\">\"Bret\"</span>,<br>                <span class=\"hljs-string\">\"email\"</span>: <span class=\"hljs-string\">\"Sincere@april.biz\"</span>,<br>                <span class=\"hljs-string\">\"address\"</span>: {<br>                    <span class=\"hljs-string\">\"street\"</span>: <span class=\"hljs-string\">\"Kulas Light\"</span>,<br>                    <span class=\"hljs-string\">\"suite\"</span>: <span class=\"hljs-string\">\"Apt. 556\"</span>,<br>                    <span class=\"hljs-string\">\"city\"</span>: <span class=\"hljs-string\">\"Gwenborough\"</span>,<br>                    <span class=\"hljs-string\">\"zipcode\"</span>: <span class=\"hljs-string\">\"92998-3874\"</span>,<br>                    <span class=\"hljs-string\">\"geo\"</span>: {<br>                        <span class=\"hljs-string\">\"lat\"</span>: <span class=\"hljs-string\">\"-37.3159\"</span>,<br>                        <span class=\"hljs-string\">\"lng\"</span>: <span class=\"hljs-string\">\"81.1496\"</span><br>                    }<br>                },<br>                <span class=\"hljs-string\">\"phone\"</span>: <span class=\"hljs-string\">\"1-770-736-8031 x56442\"</span>,<br>                <span class=\"hljs-string\">\"website\"</span>: <span class=\"hljs-string\">\"hildegard.org\"</span>,<br>                <span class=\"hljs-string\">\"company\"</span>: {<br>                    <span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"Romaguera-Crona\"</span>,<br>                    <span class=\"hljs-string\">\"catchPhrase\"</span>: <span class=\"hljs-string\">\"Multi-layered client-server neural-net\"</span>,<br>                    <span class=\"hljs-string\">\"bs\"</span>: <span class=\"hljs-string\">\"harness real-time e-markets\"</span><br>                }<br>            })<br>    })<br>    .expect(<span class=\"hljs-number\">200</span>, done);",
      "isRoot": false,
      "uuid": "91c4a313-7762-4a67-bc43-a29e1e7a1c24",
      "parentUUID": "2033ac57-9b75-449b-a186-82eae4213501",
      "skipped": false
    },
    {
      "title": "should return a 200 OK status code for userId 1 using expect method",
      "fullTitle": "@get should return a 200 OK status code for userId 1 using expect method",
      "timedOut": false,
      "duration": 8,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "utils.httpGET(<span class=\"hljs-string\">'/users/1'</span>, {})<br>    .set(<span class=\"hljs-string\">'content-type'</span>, <span class=\"hljs-string\">'application/json; charset=utf-8'</span>)<br>    .expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">res</span>) </span>{<br>        <span class=\"hljs-keyword\">const</span> response = res.body;<br>        <span class=\"hljs-comment\">//console.log(response);</span><br>        expect(response).to.have.property(<span class=\"hljs-string\">'id'</span>);<br>        expect(response).to.have.property(<span class=\"hljs-string\">'name'</span>);<br>        expect(response).to.have.property(<span class=\"hljs-string\">'username'</span>);<br>        expect(response).to.have.property(<span class=\"hljs-string\">'email'</span>);<br>        expect(response.id).to.equal(<span class=\"hljs-number\">1</span>);<br>        expect(response.email).to.equal(<span class=\"hljs-string\">'Sincere@april.biz'</span>);<br>        expect(response.address.city).to.equal(<span class=\"hljs-string\">'Gwenborough'</span>);<br><br>    })<br>    .expect(<span class=\"hljs-number\">200</span>, done);",
      "isRoot": false,
      "uuid": "36535015-1477-4c9d-9968-e401225f192b",
      "parentUUID": "2033ac57-9b75-449b-a186-82eae4213501",
      "skipped": false
    },
    {
      "title": "should return a 200 OK status code for GET All /users using expect method",
      "fullTitle": "@get should return a 200 OK status code for GET All /users using expect method",
      "timedOut": false,
      "duration": 9,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "utils.httpGET(<span class=\"hljs-string\">'/users/'</span>, {})<br>    .set(<span class=\"hljs-string\">'content-type'</span>, <span class=\"hljs-string\">'application/json; charset=utf-8'</span>)<br>    <span class=\"hljs-comment\">// .expect(function (res) {</span><br>    <span class=\"hljs-comment\">//     const response = res.body;</span><br>    <span class=\"hljs-comment\">//     console.log(response);</span><br>    <span class=\"hljs-comment\">// })</span><br>    .expect(<span class=\"hljs-number\">200</span>, done);",
      "isRoot": false,
      "uuid": "122e506a-3ab4-415c-9a16-c36f14260355",
      "parentUUID": "2033ac57-9b75-449b-a186-82eae4213501",
      "skipped": false
    }
  ],
  "allFailures": [],
  "copyrightYear": 2016
}